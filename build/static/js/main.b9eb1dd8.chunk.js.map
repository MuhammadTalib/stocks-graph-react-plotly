{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","className","config","responsive","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","handlePatternChange","selectedTime","hanldeSelectedTime","selectedTemp","selectedPattern","useState","stocks","setStocks","patterns","setPatterns","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","onChange","event","newValue","fullWidth","disableClearable","options","onClose","value","defaultValue","find","v","renderInput","params","TextField","label","variant","InputProps","type","ButtonGroup","Button","onClick","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","color","templateType","subGraphs","mergedGraphs","high","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","line","width","increasing","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","orientation","domain","range","rangeslider","visible","autorange","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectedPattern","setSelectTime","setSelectedTemp","setGraphData","getDataRequest","stock","time","pattern","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","EMA3","EMA4","EMA5","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","SMA0","SMA1","SMA2","SMA3","stochd0","stochk0","MA0","MA1","RSI0","R0","R1","donchian0","donchian_price0","donchian_min0","donchian_max0","HIST0","HIST1","patternData","forEach","push","undefined","Date","date","indicators","now","size","shapes","shp","lowP","Math","min","highP","max","xref","yref","x0","y0","x1","getTime","y1","err","tempData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9eb1dd8.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\r\nimport React from \"react\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport \"../App.css\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport const Graph = ({ style, data, layout, templates, loader }) => {\r\n  const config = { responsive: true };\r\n  if (loader) {\r\n    return <div className=\"loadingLabel\">Loading...</div>;\r\n  } else\r\n    return (\r\n      <Plot\r\n        style={style}\r\n        data={[data, ...(templates || [])]}\r\n        layout={layout}\r\n        config={config}\r\n      />\r\n    );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\r\n\r\nexport const getAllStocks = async (endpoint) => {\r\n    return await axios\r\n      .get(`${endpoint}`)\r\n      .then(( data ) => {\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n       console.log(error)\r\n      });\r\n  };","export const times = [\r\n  { name: \"1h\", ms: 3600000 },\r\n  { name: \"1d\", ms: 86400000 },\r\n  { name: \"1wk\", ms: 604800000 },\r\n  { name: \"1mo\", ms: 2629746000 },\r\n];\r\n\r\nexport const templates = [\r\n  { name: \"T0\", id: 0 },\r\n  { name: \"T1\", id: 1 },\r\n  { name: \"T2\", id: 2 },\r\n  { name: \"T3\", id: 3 },\r\n  { name: \"T4\", id: 4 },\r\n  { name: \"T5\", id: 5 },\r\n  { name: \"T6\", id: 6 },\r\n  { name: \"T7\", id: 7 },\r\n  { name: \"T8\", id: 8 },\r\n  { name: \"T9\", id: 9 },\r\n];\r\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\r\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { getAllStocks } from \"../services/api\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport { times, templates } from \"../Utils/utils\";\r\nimport \"../App.css\";\r\nconst Header = ({\r\n  handleGrapthType,\r\n  graphType,\r\n  templateChange,\r\n  templatesOptions,\r\n  data,\r\n  selectedStock,\r\n  handleStockChange,\r\n  handlePatternChange,\r\n  selectedTime,\r\n  hanldeSelectedTime,\r\n  selectedTemp,\r\n  selectedPattern,\r\n}) => {\r\n  let [stocks, setStocks] = useState([]);\r\n  let [patterns, setPatterns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStocks(\"stocks/available\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setStocks(res?.data?.list || []);\r\n    });\r\n\r\n    getAllStocks(\"stocks/patterns\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setPatterns(res?.data?.list || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      textAlign=\"center\"\r\n      style={{ padding: \"10px\" }}\r\n    >\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handleStockChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={stocks}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedStock}\r\n          defaultValue={stocks.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Stock\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>{\" \"}\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handlePatternChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={patterns}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedPattern}\r\n          defaultValue={patterns.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Pattern\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          <Button\r\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"candlestick\")}\r\n          >\r\n            <WaterfallChartIcon />\r\n          </Button>\r\n          <Button\r\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"ohlc\")}\r\n          >\r\n            <BarChartIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {times.map((t, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => hanldeSelectedTime(t)}\r\n              className={`btn ${\r\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\r\n              }`}\r\n            >\r\n              {t.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {templates.map((m, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => templateChange(m)}\r\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\r\n            >\r\n              {m.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const template1 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.a,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"#90c7fc\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.high,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.open,\r\n            type: \"bar\",\r\n            marker: {\r\n              color: data.open.map((m, i) =>\r\n                m < data.close[i] ? \"green\" : \"red\"\r\n              ),\r\n            },\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            templateType: 1,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const template2 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n    ],\r\n    subGraphs: [],\r\n  };\r\n};\r\n\r\nexport const template3 = (data, axis) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m + 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m - 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.low,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"blue\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\nexport const templatesOptions = (data) => [\r\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\r\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\r\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\r\n  // { name: \"T4\", id: 4, template: template1 },\r\n  // { name: \"T5\", id: 5, template: template1 },\r\n  // { name: \"T6\", id: 6, template: template1 },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Graph } from \"./Components/Graph\";\r\nimport Header from \"./Components/Header\";\r\nimport { getAllStocks } from \"./services/api\";\r\nimport { templatesOptions } from \"./templates/templates\";\r\n\r\nconst dummy = {\r\n  x: [],\r\n  name: \"main\",\r\n  close: [],\r\n  decreasing: {\r\n    fillcolor: \"black\",\r\n    line: { color: \"black\", width: 1 },\r\n  },\r\n  high: [],\r\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\r\n  line: { color: \"rgba(31,119,180,1)\" },\r\n  low: [],\r\n  open: [],\r\n  type: \"candlestick\",\r\n  xaxis: \"x\",\r\n  yaxis: \"y\",\r\n};\r\nconst rightMargin = 20;\r\n// const candleDefault = 214 + rightMargin;\r\n\r\nfunction App() {\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [graphType, setGraphType] = useState(\"candlestick\");\r\n\r\n  const [mergedGraphs, setMergedGraphs] = useState([]);\r\n  const [separateGraphs, setSeparateGraphs] = useState([]);\r\n\r\n  const style = { width: \"100%\", height: \"100%\" };\r\n\r\n  const [layout, setLayout] = useState({\r\n    dragmode: \"zoom\",\r\n    margin: {\r\n      r: 10,\r\n      t: 25,\r\n      b: 40,\r\n      l: 20,\r\n    },\r\n    showlegend: true,\r\n    legend: { orientation: \"h\" },\r\n    xaxis: {\r\n      domain: [0, 1],\r\n      range: [],\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      type: \"date\",\r\n    },\r\n    yaxis: {\r\n      domain: [0, 1],\r\n      autorange: true,\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      position: 1,\r\n      side: \"bottom\",\r\n      type: \"linear\",\r\n    },\r\n    opacity: 0.2,\r\n\r\n    autosize: true,\r\n    height: 550,\r\n  });\r\n\r\n  const handleGrapthType = (type) => {\r\n    setGraphType(type);\r\n  };\r\n\r\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\r\n  const [selectedPattern, setSelectedPattern] = useState(\"\");\r\n\r\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\r\n  const [selectedTemp, setSelectedTemp] = useState(0);\r\n\r\n  const [data, setGraphData] = useState({ ...dummy });\r\n\r\n  const getDataRequest = (stock, time, template, pattern) => {\r\n    setLoader(true);\r\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\r\n    if (template > 0) {\r\n      url = url + `&template=${template}`;\r\n    }\r\n    if (pattern?.length) {\r\n      url = url + `&pattern=${pattern}`;\r\n    }\r\n    setMergedGraphs([]);\r\n    getAllStocks(url)\r\n      .then((res) => {\r\n        console.log(\r\n          \"Total candles on time \",\r\n          time.name,\r\n          \" is \",\r\n          res?.data?.data.length\r\n        );\r\n        setLoader(false);\r\n        let responseData = [...res?.data?.data];\r\n\r\n        let high = [],\r\n          low = [],\r\n          open = [],\r\n          close = [],\r\n          x = [];\r\n\r\n        let EMA0 = [];\r\n        let EMA1 = [];\r\n        let EMA2 = [];\r\n        let EMA3 = [];\r\n        let EMA4 = [];\r\n        let EMA5 = [];\r\n\r\n        let MACD0 = [];\r\n        let MACD1 = [];\r\n        let MACD2 = [];\r\n        let MACDHIST0 = [];\r\n        let MACDHIST1 = [];\r\n        let MACDHIST2 = [];\r\n        let MACDSIGNAL0 = [];\r\n        let MACDSIGNAL1 = [];\r\n        let MACDSIGNAL2 = [];\r\n\r\n        let SMA0 = [];\r\n        let SMA1 = [];\r\n        let SMA2 = [];\r\n        let SMA3 = [];\r\n\r\n        let stochd0 = [];\r\n        let stochk0 = [];\r\n\r\n        let MA0 = [];\r\n        let MA1 = [];\r\n        let RSI0 = [];\r\n\r\n        let R0 = [];\r\n        let R1 = [];\r\n        let donchian0 = [];\r\n\r\n        let donchian_price0 = [];\r\n        let donchian_min0 = [];\r\n        let donchian_max0 = [];\r\n\r\n        let HIST0 = [];\r\n        let HIST1 = [];\r\n\r\n        let patternData = [];\r\n\r\n        responseData?.forEach((m) => {\r\n          high.push(m.high);\r\n          low.push(m.low);\r\n          open.push(m.open);\r\n          close.push(m.close);\r\n          if (m[pattern] !== undefined) {\r\n            patternData.push(m[pattern]);\r\n          }\r\n          x.push(new Date(m.date));\r\n          if (template === 1) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n          } else if (template === 2) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n            EMA3.push(m.indicators?.EMA3);\r\n            EMA4.push(m.indicators?.EMA4);\r\n            EMA5.push(m.indicators?.EMA5);\r\n          } else if (template === 3 && m.indicators) {\r\n            R0.push(m.indicators[\"%R0\"]);\r\n            R1.push(m.indicators[\"%R1\"]);\r\n            donchian_price0.push(m.indicators[\"donchian_price0\"]);\r\n            donchian_min0.push(m.indicators[\"donchian_min0\"]);\r\n            donchian_max0.push(m.indicators[\"donchian_max0\"]);\r\n            donchian0.push(m.indicators?.donchian0);\r\n          } else if (template === 4) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACD1.push(m.indicators?.MACD1);\r\n            MACD2.push(m.indicators?.MACD2);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            MACDHIST1.push(m.indicators?.MACDHIST1);\r\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n            SMA0.push(m.indicators?.SMA0);\r\n            SMA1.push(m.indicators?.SMA1);\r\n            SMA2.push(m.indicators?.SMA2);\r\n            SMA3.push(m.indicators?.SMA3);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 5) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACD1.push(m.indicators?.MACD1);\r\n            MACD2.push(m.indicators?.MACD2);\r\n            MACDHIST0.push(m.indicators?.MACDHIST0);\r\n            MACDHIST1.push(m.indicators?.MACDHIST1);\r\n            MACDHIST2.push(m.indicators?.MACDHIST2);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\r\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n            SMA0.push(m.indicators?.SMA0);\r\n            SMA1.push(m.indicators?.SMA1);\r\n            SMA2.push(m.indicators?.SMA2);\r\n            SMA3.push(m.indicators?.SMA3);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 6) {\r\n          } else if (template === 7) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            MA0.push(m.indicators?.MA0);\r\n            MA1.push(m.indicators?.MA1);\r\n            RSI0.push(m.indicators?.RSI0);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 8) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACDHIST0.push(m.indicators?.MACDHIST0);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            RSI0.push(m.indicators?.RSI0);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 9) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n            EMA3.push(m.indicators?.EMA3);\r\n            EMA4.push(m.indicators?.EMA4);\r\n            EMA5.push(m.indicators?.EMA5);\r\n            HIST0.push(m.indicators?.HIST0);\r\n            HIST1.push(m.indicators?.HIST1);\r\n          }\r\n        });\r\n\r\n        // let lowLowest = Math.min(...low.filter((f) => f !== null));\r\n        // let closeLowest = Math.min(...close.filter((f) => f !== null));\r\n        // let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\r\n\r\n        // let highHighest = Math.min(...low.filter((f) => f !== null));\r\n        // let openHighest = Math.max(...close.filter((f) => f !== null));\r\n        // let highest = openHighest > highHighest ? openHighest : highHighest;\r\n\r\n        for (let i = 0; i < rightMargin; i++) {\r\n          high.push(null);\r\n          low.push(null);\r\n          open.push(null);\r\n          close.push(null);\r\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\r\n          if (template === 1) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n          } else if (template === 2) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n            EMA3.push(null);\r\n            EMA4.push(null);\r\n            EMA5.push(null);\r\n          } else if (template === 3) {\r\n            R0.push(null);\r\n            R1.push(null);\r\n            donchian0.push(null);\r\n            donchian_price0.push(null);\r\n            donchian_min0.push(null);\r\n            donchian_max0.push(null);\r\n          } else if (template === 4) {\r\n            MACD0.push(null);\r\n            MACD1.push(null);\r\n            MACD2.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            MACDHIST1.push(null);\r\n            MACDSIGNAL2.push(null);\r\n            SMA0.push(null);\r\n            SMA1.push(null);\r\n            SMA2.push(null);\r\n            SMA3.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 5) {\r\n            MACD0.push(null);\r\n            MACD1.push(null);\r\n            MACD2.push(null);\r\n            MACDHIST0.push(null);\r\n            MACDHIST1.push(null);\r\n            MACDHIST2.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            MACDSIGNAL1.push(null);\r\n            MACDSIGNAL2.push(null);\r\n            SMA0.push(null);\r\n            SMA1.push(null);\r\n            SMA2.push(null);\r\n            SMA3.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 7) {\r\n            EMA0.push(null);\r\n            MA0.push(null);\r\n            MA1.push(null);\r\n            RSI0.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 6) {\r\n          } else if (template === 8) {\r\n            MACD0.push(null);\r\n            MACDHIST0.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            RSI0.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 9) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n            EMA3.push(null);\r\n            EMA4.push(null);\r\n            EMA5.push(null);\r\n            HIST0.push(null);\r\n            HIST1.push(null);\r\n          }\r\n        }\r\n        if (template === 0) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 1) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              xaxis: \"x\",\r\n              name: \"EMA0\",\r\n              yaxis: \"y\",\r\n              type: \"scatter\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              type: \"scatter\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              name: \"EMA2\",\r\n              type: \"scatter\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 2) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              name: \"EMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA3,\r\n              name: \"EMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA4,\r\n              name: \"EMA4\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA5,\r\n              name: \"EMA5\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 3) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: donchian_price0,\r\n              name: \"DONCHAIN\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n                size: 12,\r\n              },\r\n              line: {\r\n                width: 1,\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: donchian_min0,\r\n              name: \"donchian min\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              line: {\r\n                width: 2,\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: donchian_max0,\r\n              name: \"donchian max\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              line: {\r\n                width: 2,\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: R0,\r\n              name: \"%R0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: R1,\r\n              name: \"%R1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n        } else if (template === 4) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: SMA0,\r\n              name: \"SMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(255,173,89)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA1,\r\n              name: \"SMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(253,91,252)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA2,\r\n              name: \"SMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(172,91,170)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA3,\r\n              name: \"SMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(89,89,89)\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACDHIST1,\r\n              name: \"MACD HIST\",\r\n              type: \"bar\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: MACDHIST1.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 5) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: SMA0,\r\n              name: \"SMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA1,\r\n              name: \"SMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(255,0,56)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA2,\r\n              name: \"SMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(13,190,58)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA3,\r\n              name: \"SMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDHIST0,\r\n                  name: \"MACDHIST\",\r\n                  type: \"bar\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 6) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 7) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: MA0,\r\n              name: \"MA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: MA1,\r\n              name: \"MA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: RSI0,\r\n              name: \"RSI0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 8) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: RSI0,\r\n              name: \"RSI0\",\r\n              marker: {\r\n                color: \"rgb(126,87,194)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(255,109,0)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(43,97,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"rgb(43,97,255)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(255,109,0)\",\r\n                  },\r\n                },\r\n                {\r\n                  x: x,\r\n                  y: MACDHIST0,\r\n                  type: \"bar\",\r\n                  name: \"MACD HIST\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 9) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              name: \"EMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA3,\r\n              name: \"EMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA4,\r\n              name: \"EMA4\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA5,\r\n              name: \"EMA5\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: HIST0,\r\n              type: \"bar\",\r\n              name: \"HIST0\",\r\n              marker: {\r\n                color: HIST0.map((m, i) =>\r\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\r\n                ), //\"black\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: HIST1,\r\n              type: \"bar\",\r\n              marker: {\r\n                color: HIST1.map((m, i) =>\r\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\r\n                ), //\"black\",\r\n              },\r\n              name: \"HIST1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n          ]);\r\n        }\r\n\r\n        // patternData.length &&\r\n        //   setMergedGraphs([\r\n        //     ...mergedGraphs.filter((f) => !f.pattern),\r\n        //     {\r\n        //       pattern: true,\r\n        //       x: x,\r\n        //       y: patternData.map((m) => {\r\n        //         if (m === 0) return null;\r\n        //         return m;\r\n        //       }),\r\n        //       mode: \"markers\",\r\n        //       type: \"scatter\",\r\n        //       xaxis: \"x\",\r\n        //       yaxis: \"y\",\r\n        //       marker: {\r\n        //         color: \"green\",\r\n        //       },\r\n        //     },\r\n        //   ]);\r\n\r\n        setGraphData({ ...dummy, high, low, open, close, x });\r\n        setLayout({\r\n          ...layout,\r\n          xaxis: {\r\n            ...layout.xaxis,\r\n            // range: [\r\n            //   new Date(Date.now(x[x.length - 1]) - candleDefault * time.ms),\r\n            //   new Date(x[x.length - 1]),\r\n            //   // new Date(x[0]), // - candleDefault * time.ms),\r\n            //   // new Date(x[x.length - 1]),\r\n            // ],\r\n          },\r\n          yaxis: {\r\n            ...layout.yaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            autorange: true,\r\n          },\r\n          shapes: [\r\n            ...high.map((shp, i) => {\r\n              if (patternData[i]) {\r\n                let lowP = Math.min(...[low[i], high[i], open[i], close[i]]);\r\n                let highP = Math.max(...[low[i], high[i], open[i], close[i]]);\r\n\r\n                return {\r\n                  type: \"rect\",\r\n                  xref: \"x\",\r\n                  yref: \"y\",\r\n                  x0: new Date(x[i] - 0.5 * time.ms),\r\n                  y0: lowP,\r\n                  x1: new Date(x[i].getTime() + 0.5 * time.ms),\r\n                  y1: highP,\r\n                  fillcolor: \"yellow\",\r\n                  opacity: 0.6,\r\n                  line: {\r\n                    width: 2,\r\n                    color: open[i] < close[i] ? \"green\" : \"red\",\r\n                    opacity: 1,\r\n                  },\r\n                };\r\n              }\r\n              return null;\r\n            }),\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setMergedGraphs([]);\r\n        setSeparateGraphs([]);\r\n        setGraphData(null);\r\n      });\r\n  };\r\n\r\n  useState(() => {\r\n    getDataRequest(selectedStock, selectedTime);\r\n  }, []);\r\n\r\n  const handleStockChange = (stock) => {\r\n    setSelectStock(stock);\r\n    getDataRequest(stock, selectedTime, selectedTemp.id, selectedPattern);\r\n  };\r\n\r\n  const handlePatternChange = (pattern) => {\r\n    console.log(\"pattern\", pattern);\r\n    setSelectedPattern(pattern);\r\n    getDataRequest(selectedStock, selectedTime, selectedTemp.id, pattern);\r\n  };\r\n\r\n  const hanldeSelectedTime = (time) => {\r\n    setSelectTime(time);\r\n    getDataRequest(selectedStock, time, selectedTemp.id, selectedPattern);\r\n  };\r\n\r\n  const templateChange = (tempData) => {\r\n    setSelectedTemp(tempData);\r\n    getDataRequest(selectedStock, selectedTime, tempData.id, selectedPattern);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? <div className=\"loader\"></div> : <></>}\r\n      <div style={{ padding: \"10px\" }}>\r\n        <Header\r\n          graphType={graphType}\r\n          handleGrapthType={handleGrapthType}\r\n          templateChange={templateChange}\r\n          templatesOptions={templatesOptions}\r\n          data={data}\r\n          selectedStock={selectedStock}\r\n          selectedTime={selectedTime}\r\n          hanldeSelectedTime={hanldeSelectedTime}\r\n          handleStockChange={handleStockChange}\r\n          selectedTemp={selectedTemp}\r\n          selectedPattern={selectedPattern}\r\n          handlePatternChange={handlePatternChange}\r\n        />\r\n\r\n        <div id=\"fullscreen\">\r\n          <Graph\r\n            style={style}\r\n            data={{ ...data, type: graphType }}\r\n            layout={layout}\r\n            templates={mergedGraphs.length ? [...mergedGraphs] : []}\r\n            loader={loader}\r\n          />\r\n          {!loader &&\r\n            separateGraphs.map((m) => (\r\n              <Graph\r\n                key={m}\r\n                templates={m.templates}\r\n                style={{ width: \"100%\" }}\r\n                data={{ ...m }}\r\n                layout={{\r\n                  dragmode: \"zoom\",\r\n                  margin: {\r\n                    r: 10,\r\n                    t: 1,\r\n                    b: 40,\r\n                    l: 20,\r\n                  },\r\n                  showlegend: true,\r\n                  legend: { orientation: \"h\" },\r\n                  xaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    type: \"date\",\r\n                  },\r\n                  yaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    position: 1,\r\n                    side: \"bottom\",\r\n                  },\r\n                  opacity: 0.2,\r\n                  autosize: true,\r\n                  height: 190,\r\n                }}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}