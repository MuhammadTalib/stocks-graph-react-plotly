{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","time","loader","className","config","responsive","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","selectedTime","hanldeSelectedTime","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","value","disableClearable","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","color","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","template","dummy","decreasing","size","fillcolor","line","width","increasing","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","domain","range","rangeslider","visible","title","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectTime","setGraphData","getDataRequest","stock","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","MACD0","MACD1","MACD2","MACDSIGNAL0","MACDHIST1","MACDSIGNAL2","forEach","push","indicators","Date","date","lowLowest","Math","min","filter","f","closeLowest","lowest","highHighest","openHighest","max","highest","now","err","tempData","autorange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe64dfae.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\r\nimport React from \"react\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport \"../App.css\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport const Graph = ({ style, data, layout, templates, time, loader }) => {\r\n  const config = { responsive: true };\r\n  if (loader) {\r\n    return <div className=\"loadingLabel\">Loading...</div>;\r\n  } else\r\n    return (\r\n      <Plot\r\n        key={time}\r\n        style={style}\r\n        data={[data, ...(templates || [])]}\r\n        layout={layout}\r\n        config={config}\r\n      />\r\n    );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\r\n\r\nexport const getAllStocks = async (endpoint) => {\r\n    return await axios\r\n      .get(`${endpoint}`)\r\n      .then(( data ) => {\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n       console.log(error)\r\n      });\r\n  };","export const times = [\r\n  { name: \"1h\", ms: 3600000 },\r\n  { name: \"1d\", ms: 86400000 },\r\n  { name: \"1wk\", ms: 604800000 },\r\n  { name: \"1mo\", ms: 2629746000 },\r\n];\r\n\r\nexport const templates = [\r\n  { name: \"T1\", id: 1 },\r\n  { name: \"T2\", id: 2 },\r\n  { name: \"T3\", id: 3 },\r\n];\r\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\r\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { getAllStocks } from \"../services/api\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport { times, templates } from \"../Utils/utils\";\r\nconst Header = ({\r\n  handleGrapthType,\r\n  graphType,\r\n  templateChange,\r\n  templatesOptions,\r\n  data,\r\n  selectedStock,\r\n  handleStockChange,\r\n  selectedTime,\r\n  hanldeSelectedTime,\r\n}) => {\r\n  let [stocks, setStocks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStocks(\"stocks/available\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setStocks(res?.data?.list || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      textAlign=\"center\"\r\n      style={{ padding: \"10px\" }}\r\n    >\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          value={selectedStock}\r\n          disableClearable\r\n          // textInputProps={{ clearButtonMode: \"hidden\" }}\r\n          onChange={(event, newValue) => {\r\n            handleStockChange(newValue);\r\n          }}\r\n          fullWidth\r\n          inputValue={selectedStock}\r\n          options={stocks}\r\n          renderInput={(params) => (\r\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          <Button onClick={() => handleGrapthType(\"candlestick\")}>\r\n            <WaterfallChartIcon\r\n              color={graphType === \"candlestick\" ? \"primary\" : \"action\"}\r\n            />\r\n          </Button>\r\n          <Button onClick={() => handleGrapthType(\"ohlc\")}>\r\n            <BarChartIcon color={graphType !== \"ohlc\" ? \"primary\" : \"action\"} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {times.map((t, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => hanldeSelectedTime(t)}\r\n              color={selectedTime.name !== t.name ? \"primary\" : \"error\"}\r\n            >\r\n              {t.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      <Grid item xs={5}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {templates.map((m, i) => (\r\n            <Button key={i} onClick={() => templateChange(m)}>\r\n              {m.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const template1 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.a,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"#90c7fc\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.high,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.open,\r\n            type: \"bar\",\r\n            marker: {\r\n              color: data.open.map((m, i) =>\r\n                m < data.close[i] ? \"green\" : \"red\"\r\n              ),\r\n            },\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            templateType: 1,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const template2 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n    ],\r\n    subGraphs: [],\r\n  };\r\n};\r\n\r\nexport const template3 = (data, axis) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m + 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m - 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.low,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"blue\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\nexport const templatesOptions = (data) => [\r\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\r\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\r\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\r\n  // { name: \"T4\", id: 4, template: template1 },\r\n  // { name: \"T5\", id: 5, template: template1 },\r\n  // { name: \"T6\", id: 6, template: template1 },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Graph } from \"./Components/Graph\";\r\nimport Header from \"./Components/Header\";\r\nimport { getAllStocks } from \"./services/api\";\r\nimport { templatesOptions } from \"./templates/templates\";\r\n\r\nconst dummy = {\r\n  x: [],\r\n  close: [],\r\n  decreasing: {\r\n    size: 8,\r\n    fillcolor: \"black\",\r\n    line: { color: \"black\", width: 1 },\r\n  },\r\n  high: [],\r\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\r\n  line: { color: \"rgba(31,119,180,1)\" },\r\n  low: [],\r\n  open: [],\r\n  type: \"candlestick\",\r\n  xaxis: \"x\",\r\n  yaxis: \"y\",\r\n};\r\nconst rightMargin = 20;\r\nconst candleDefault = 214 + rightMargin;\r\n\r\nfunction App() {\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [graphType, setGraphType] = useState(\"candlestick\");\r\n  const [subGraphs, setSubGraphs] = useState([]);\r\n  const [selectedTemplates, setSelectedTemplates] = useState([]);\r\n  const [templates, setTemplates] = useState([]);\r\n\r\n  const [mergedGraphs, setMergedGraphs] = useState([]);\r\n  const [separateGraphs, setSeparateGraphs] = useState([]);\r\n\r\n  const style = { width: \"100%\", height: \"100%\" };\r\n\r\n  const [layout, setLayout] = useState({\r\n    dragmode: \"zoom\",\r\n    margin: {\r\n      r: 10,\r\n      t: 25,\r\n      b: 0,\r\n      l: 60,\r\n    },\r\n    showlegend: false,\r\n    xaxis: {\r\n      domain: [0, 1],\r\n      range: [],\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      title: \"Date\",\r\n      type: \"date\",\r\n    },\r\n    yaxis: {\r\n      domain: [0, 1],\r\n      // autorange: true,\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      position: 1,\r\n      side: \"bottom\",\r\n    },\r\n    opacity: 0.2,\r\n\r\n    // shapes: [\r\n    //   {\r\n    //     type: \"rect\",\r\n    //     xref: \"x\",\r\n    //     yref: \"y\",\r\n    //     x0: \"2021-10-25\",\r\n    //     y0: 179,\r\n    //     x1: \"2021-10-26\",\r\n    //     y1: 180.5,\r\n    //     fillcolor: \"yellow\",\r\n    //     opacity: 0.6,\r\n    //     line: {\r\n    //       width: 1,\r\n    //       color: \"green\",\r\n    //       opacity: 1,\r\n    //     },\r\n    //   },\r\n    // ],\r\n    autosize: true,\r\n    height: 550,\r\n  });\r\n\r\n  const handleGrapthType = (type) => {\r\n    setGraphType(type);\r\n  };\r\n  const addTemplate = (id, template) => {\r\n    if (selectedTemplates.indexOf(id) !== -1) {\r\n      setTemplates([...templates.filter((f) => f.templateType !== id)]);\r\n      setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\r\n      setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\r\n    } else {\r\n      setSelectedTemplates([...selectedTemplates, id]);\r\n      setTemplates([...templates, ...template.graph]);\r\n      setSubGraphs([...subGraphs, ...template.subGraphs]);\r\n    }\r\n  };\r\n  const templateChange = (tempData) => {\r\n    getDataRequest(selectedStock, selectedTime, tempData.id);\r\n  };\r\n\r\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\r\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\r\n\r\n  const [data, setGraphData] = useState({ ...dummy });\r\n\r\n  const getDataRequest = (stock, time, template) => {\r\n    setLoader(true);\r\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\r\n    if (template) {\r\n      url = url + `&template=${template}`;\r\n    }\r\n    getAllStocks(url)\r\n      .then((res) => {\r\n        console.log(\r\n          \"Total candles on time \",\r\n          time.name,\r\n          \" is \",\r\n          res?.data?.data.length\r\n        );\r\n        setLoader(false);\r\n        let responseData = [...res?.data?.data];\r\n        // if (responseData.length < candleDefault) {\r\n        //   let startNull = candleDefault - responseData.length;\r\n        //   console.log(\"startNull\", startNull);\r\n        //   console.log(\r\n        //     \"responseData[0]\",\r\n        //     responseData[0].date,\r\n        //     new Date(Date.now(new Date(responseData[0].date)))\r\n        //   );\r\n        //   console.log(\r\n        //     \"responseData[0]\",\r\n        //     new Date(Date.now(responseData[0].date) - (0 + 1) * time.ms)\r\n        //   );\r\n        //   let candle = {};\r\n        //   Object.entries(responseData[0]).map((m) => {\r\n        //     candle[m[0]] = m[1];\r\n        //   });\r\n        //   console.log(\"candle\", candle);\r\n\r\n        //   for (let i = 0; i < startNull; i++) {\r\n        //     let d = new Date(\r\n        //       Date.now(responseData[0].date) - (i + 1) * time.ms\r\n        //     );\r\n        //     console.log(\"candle[ \", d);\r\n        //     responseData.unshift({ ...candle, date: d });\r\n        //   }\r\n        // }\r\n        let high = [],\r\n          low = [],\r\n          open = [],\r\n          close = [],\r\n          x = [];\r\n        let EMA0 = [];\r\n        let EMA1 = [];\r\n        let EMA2 = [];\r\n        let MACD0 = [];\r\n        let MACD1 = [];\r\n        let MACD2 = [];\r\n        let MACDSIGNAL0 = [];\r\n        let MACDHIST1 = [];\r\n        let MACDSIGNAL2 = [];\r\n\r\n        responseData?.forEach((m) => {\r\n          high.push(m.high);\r\n          low.push(m.low);\r\n          open.push(m.open);\r\n          close.push(m.close);\r\n          if (template === 1) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n          } else if (template === 2) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACD1.push(m.indicators?.MACD1);\r\n            MACD2.push(m.indicators?.MACD2);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            MACDHIST1.push(m.indicators?.MACDHIST1);\r\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n          }\r\n\r\n          x.push(new Date(m.date));\r\n        });\r\n\r\n        let lowLowest = Math.min(...low.filter((f) => f !== null));\r\n        let closeLowest = Math.min(...close.filter((f) => f !== null));\r\n        let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\r\n\r\n        let highHighest = Math.min(...low.filter((f) => f !== null));\r\n        let openHighest = Math.max(...close.filter((f) => f !== null));\r\n        let highest = openHighest > highHighest ? openHighest : highHighest;\r\n\r\n        for (let i = 0; i < rightMargin; i++) {\r\n          high.push(null);\r\n          low.push(null);\r\n          open.push(null);\r\n          close.push(null);\r\n          if (template === 1) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n          } else if (template === 2) {\r\n            MACD0.push(null);\r\n            MACD1.push(null);\r\n            MACD2.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            MACDHIST1.push(null);\r\n            MACDSIGNAL2.push(null);\r\n          }\r\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\r\n        }\r\n        if (template === 1) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n          ]);\r\n        } else if (template === 2) {\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACD1,\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDHIST1,\r\n                  type: \"bar\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: MACDHIST1.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACD2,\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL2,\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        }\r\n\r\n        setGraphData({ ...dummy, high, low, open, close, x });\r\n        setLayout({\r\n          ...layout,\r\n          yaxis: {\r\n            ...layout.yaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            // range: [114, 218],\r\n            range: [lowest, highest],\r\n          },\r\n          xaxis: {\r\n            ...layout.xaxis,\r\n            range: [\r\n              // new Date(Date.now(x[x.length - 1]) - candleDefault * time.ms),\r\n              // new Date(x[x.length - 1]),\r\n              new Date(x[0]), // - candleDefault * time.ms),\r\n              new Date(x[x.length - 1]),\r\n            ],\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  useState(() => {\r\n    getDataRequest(selectedStock, selectedTime);\r\n  }, []);\r\n\r\n  const handleStockChange = (stock) => {\r\n    setSelectStock(stock);\r\n    getDataRequest(stock, selectedTime);\r\n  };\r\n\r\n  const hanldeSelectedTime = (time) => {\r\n    setSelectTime(time);\r\n    getDataRequest(selectedStock, time);\r\n  };\r\n  return (\r\n    <>\r\n      {loader ? <div className=\"loader\"></div> : <></>}\r\n      <div style={{ padding: \"10px\" }}>\r\n        <Header\r\n          graphType={graphType}\r\n          handleGrapthType={handleGrapthType}\r\n          templateChange={templateChange}\r\n          templatesOptions={templatesOptions}\r\n          data={data}\r\n          selectedStock={selectedStock}\r\n          selectedTime={selectedTime}\r\n          hanldeSelectedTime={hanldeSelectedTime}\r\n          handleStockChange={handleStockChange}\r\n        />\r\n\r\n        <div id=\"fullscreen\">\r\n          <Graph\r\n            time={selectedTime}\r\n            style={style}\r\n            data={{ ...data, type: graphType }}\r\n            layout={layout}\r\n            templates={mergedGraphs.length ? [...mergedGraphs] : []}\r\n            loader={loader}\r\n          />\r\n          {separateGraphs.map((m) => (\r\n            <Graph\r\n              key={m}\r\n              templates={m.templates}\r\n              style={{ width: \"100%\" }}\r\n              data={{ ...m }}\r\n              layout={{\r\n                dragmode: \"zoom\",\r\n                margin: {\r\n                  r: 10,\r\n                  t: 1,\r\n                  b: 0,\r\n                  l: 60,\r\n                },\r\n                showlegend: false,\r\n                xaxis: {\r\n                  domain: [0, 1],\r\n                  autorange: true,\r\n                  rangeslider: {\r\n                    visible: false,\r\n                  },\r\n                  title: \"Date\",\r\n                  type: \"date\",\r\n                },\r\n                yaxis: {\r\n                  domain: [0, 1],\r\n                  autorange: true,\r\n                  rangeslider: {\r\n                    visible: false,\r\n                  },\r\n                  position: 1,\r\n                  side: \"bottom\",\r\n                },\r\n                opacity: 0.2,\r\n                autosize: true,\r\n                height: 150,\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}