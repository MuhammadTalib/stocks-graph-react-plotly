{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","onHover","className","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","merged","EMA0","xaxis","yaxis","mode","type","marker","size","color","EMA1","EMA2","EMA3","EMA4","EMA5","donchian_price0","line","width","donchian_min0","donchian_max0","SMA0","SMA1","SMA2","SMA3","MA0","MA1","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","handlePatternChange","selectedTime","hanldeSelectedTime","selectedTemp","selectedPattern","handlSwitchToggle","switchToggle","useState","stocks","setStocks","patterns","setPatterns","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","onChange","event","newValue","fullWidth","disableClearable","options","onClose","value","defaultValue","find","v","renderInput","params","TextField","label","variant","InputProps","ButtonGroup","Button","onClick","xmlns","viewBox","height","fill","d","stroke","Switch","checked","e","target","map","t","i","m","template1","graph","x","y","low","templateType","subGraphs","mergedGraphs","high","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","increasing","months","App","setLoader","setA","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","traceorder","font","family","bgcolor","bordercolor","borderwidth","domain","rangeslider","visible","tickmode","autorange","position","side","opacity","autosize","setLayout","setSelectStock","setSelectedPattern","setSelectTime","setSelectedTemp","setSwitchToggle","setGraphData","getDataRequest","stock","time","pattern","meta_trader_indicator","url","toLowerCase","length","responseData","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","stochd0","stochk0","RSI0","R0","R1","donchian0","HIST0","patternData","ConfrimHigh","ConfrimLow","tempMerged","resMerged","forEach","push","indicators","undefined","Date","date","Object","keys","key","now","tickvals","filter","f","ticktext","getMonth","getUTCFullYear","shapes","shp","lowP","Math","min","highP","max","x0","String","x1","xref","yref","y0","y1","rightMargin","err","tempData","point","points","pointIndex","symbol","xanchor","dtick","tickformat","ticklen","nticks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5e55c34.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates, loader, onHover }) => {\n  const config = { responsive: true };\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        onHover={onHover}\n        style={style}\n        data={[data, ...(templates || [])]}\n        layout={layout}\n      />\n    );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","export const times = [\n  { name: \"1h\", ms: 3600000 },\n  { name: \"1d\", ms: 86400000 },\n  { name: \"1wk\", ms: 604800000 },\n  { name: \"1mo\", ms: 2629746000 },\n];\n\nexport const templates = [\n  {\n    name: \"T0\",\n    id: 0,\n  },\n  {\n    name: \"T1\",\n    id: 1,\n    merged: {\n      EMA0: {\n        data: [],\n        xaxis: \"x\",\n        name: `EMA0`,\n        yaxis: \"y\",\n        mode: \"line\",\n        type: \"scatter\",\n        marker: {\n          size: 4,\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA1\",\n        xaxis: \"x\",\n        type: \"scatter\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA2\",\n        type: \"scatter\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n    },\n  },\n  {\n    name: \"T2\",\n    id: 2,\n    merged: {\n      EMA0: {\n        data: [],\n        xaxis: \"x\",\n        name: `EMA0`,\n        yaxis: \"y\",\n        mode: \"line\",\n        type: \"scatter\",\n        marker: {\n          size: 4,\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA1\",\n        xaxis: \"x\",\n        type: \"scatter\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA2\",\n        type: \"scatter\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA3: {\n        data: [],\n        xaxis: \"x\",\n        yaxis: \"y\",\n        name: \"EMA3\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA4: {\n        data: [],\n        name: \"EMA4\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA5: {\n        data: [],\n        name: \"EMA5\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n    },\n  },\n  {\n    name: \"T3\",\n    id: 3,\n    merged: {\n      donchian_price0: {\n        data: [],\n        name: \"DONCHAIN\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n          size: 12,\n        },\n        line: {\n          width: 1,\n        },\n      },\n      donchian_min0: {\n        data: [],\n        name: \"donchian min\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        line: {\n          width: 2,\n        },\n      },\n      donchian_max0: {\n        data: [],\n        name: \"donchian max\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        line: {\n          width: 2,\n        },\n      },\n    },\n  },\n  {\n    name: \"T4\",\n    id: 4,\n    merged: {\n      SMA0: {\n        data: [],\n        name: \"SMA0\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(255,173,89)\",\n        },\n      },\n      SMA1: {\n        data: [],\n        name: \"SMA1\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(253,91,252)\",\n        },\n      },\n      SMA2: {\n        data: [],\n        name: \"SMA2\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(172,91,170)\",\n        },\n      },\n      SMA3: {\n        data: [],\n        name: \"SMA3\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(89,89,89)\",\n        },\n      },\n    },\n  },\n  {\n    name: \"T5\",\n    id: 5,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA0\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA1\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(255,0,56)\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA2\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(13,190,58)\",\n        },\n      },\n      EMA3: {\n        data: [],\n        name: \"EMA3\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n    },\n  },\n  {\n    name: \"T6\",\n    id: 6,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA0\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA1\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA2\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA3: {\n        data: [],\n        name: \"EMA3\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA4: {\n        data: [],\n        name: \"EMA4\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA5: {\n        data: [],\n        name: \"EMA5\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n    },\n  },\n  {\n    name: \"T7\",\n    id: 7,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA0\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      MA0: {\n        data: [],\n        name: \"MA0\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n      MA1: {\n        data: [],\n        name: \"MA1\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n    },\n  },\n];\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { times, templates } from \"../Utils/utils\";\nimport Switch from \"@mui/material/Switch\";\nimport \"../App.css\";\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  handlePatternChange,\n  selectedTime,\n  hanldeSelectedTime,\n  selectedTemp,\n  selectedPattern,\n  handlSwitchToggle,\n  switchToggle,\n}) => {\n  let [stocks, setStocks] = useState([]);\n  let [patterns, setPatterns] = useState([]);\n\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res?.data?.list || []);\n    });\n\n    getAllStocks(\"stocks/patterns\").then((res) => {\n      console.log(\"res\", res);\n      setPatterns(res?.data?.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      style={{ padding: \"10px\" }}\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          id=\"free-solo-2-demo\"\n          disableClearable={true}\n          options={stocks}\n          onClose={() => {\n            console.log(\"aytr\");\n          }}\n          value={selectedStock}\n          defaultValue={stocks.find((v) => v[0])}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Stock\"\n              variant=\"standard\"\n              InputProps={{\n                ...params.InputProps,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>{\" \"}\n      <Grid item xs={2}>\n        <Autocomplete\n          onChange={(event, newValue) => {\n            handlePatternChange(newValue);\n          }}\n          fullWidth\n          id=\"free-solo-2-demo\"\n          disableClearable={true}\n          options={[...patterns]}\n          onClose={() => {\n            console.log(\"aytr\");\n          }}\n          value={selectedPattern}\n          defaultValue={patterns.find((v) => v[0])}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Pattern\"\n              variant=\"standard\"\n              InputProps={{\n                ...params.InputProps,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"candlestick\")}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 28 28\"\n              width=\"24\"\n              height=\"24\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M17 11v6h3v-6h-3zm-.5-1h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5z\"></path>\n              <path d=\"M18 7h1v3.5h-1zm0 10.5h1V21h-1z\"></path>\n              <path d=\"M9 8v12h3V8H9zm-.5-1h4a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5z\"></path>\n              <path d=\"M10 4h1v3.5h-1zm0 16.5h1V24h-1z\"></path>\n            </svg>{\" \"}\n          </Button>\n          <Button\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"ohlc\")}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 28 28\"\n              width=\"24\"\n              height=\"24\"\n            >\n              <g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\">\n                <path d=\"M10.5 7.5v15M7.5 20.5H10M13.5 11.5H11M19.5 6.5v15M16.5 9.5H19M22.5 16.5H20\"></path>\n              </g>\n            </svg>\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={1}>\n        <Switch\n          checked={switchToggle}\n          onClick={(e) => {\n            console.log(\"console.log\", e.target.checked);\n            handlSwitchToggle(e.target.checked);\n          }}\n          size=\"small\"\n        />\n      </Grid>\n      <Grid item xs={2}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              className={`btn ${\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\n              }`}\n            >\n              {t.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templates.map((m, i) => (\n            <Button\n              key={i}\n              onClick={() => templateChange(m)}\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\n            >\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  name: \"main\",\n  close: [],\n  decreasing: {\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\nconst rightMargin = 23;\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n// const candleDefault = 214 + rightMargin;\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n\n  const [a, setA] = useState(1);\n\n  const [graphType, setGraphType] = useState(\"candlestick\");\n\n  const [mergedGraphs, setMergedGraphs] = useState([]);\n  const [separateGraphs, setSeparateGraphs] = useState([]);\n\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout, setLayout] = useState({\n    dragmode: \"zoom\",\n    margin: {\n      r: 10,\n      t: 25,\n      b: 40,\n      l: 20,\n    },\n    showlegend: true,\n    legend: {\n      x: 0,\n      y: 1,\n      traceorder: \"normal\",\n      font: {\n        family: \"sans-serif\",\n        size: 12,\n        color: \"#000\",\n      },\n      bgcolor: \"#E2E2E211\",\n      bordercolor: \"#FFFFFF\",\n      borderwidth: 2,\n    },\n    xaxis: {\n      domain: [0, 1],\n      rangeslider: {\n        visible: false,\n      },\n      type: \"category\",\n      tickmode: \"array\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      autorange: true,\n      rangeslider: {\n        visible: false,\n      },\n      position: 1,\n      side: \"bottom\",\n      type: \"linear\",\n    },\n    opacity: 0.2,\n\n    autosize: true,\n    height: 630,\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedPattern, setSelectedPattern] = useState(\"\");\n\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\n  const [selectedTemp, setSelectedTemp] = useState(0);\n  const [switchToggle, setSwitchToggle] = useState(false);\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const getDataRequest = (\n    stock,\n    time,\n    template,\n    pattern,\n    meta_trader_indicator\n  ) => {\n    setLoader(true);\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\n    if (template && template?.id > 0) {\n      url = url + `&template=${template.id}`;\n    }\n    if (pattern?.length) {\n      url = url + `&pattern=${pattern}`;\n    }\n    if (meta_trader_indicator) {\n      url = url + `&meta_trader_indicator=${meta_trader_indicator}`;\n    }\n    setMergedGraphs([]);\n    getAllStocks(url)\n      .then((res) => {\n        console.log(\n          \"Total candles on time \",\n          time.name,\n          \" is \",\n          res?.data?.data.length\n        );\n        setLoader(false);\n        let responseData = [...res?.data?.data];\n\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n\n        let EMA0 = [];\n        let EMA1 = [];\n        let EMA2 = [];\n        let EMA3 = [];\n        let EMA4 = [];\n        let EMA5 = [];\n\n        let MACD0 = [];\n        let MACD1 = [];\n        let MACD2 = [];\n        let MACDHIST0 = [];\n        let MACDHIST1 = [];\n        let MACDHIST2 = [];\n        let MACDSIGNAL0 = [];\n        let MACDSIGNAL1 = [];\n        let MACDSIGNAL2 = [];\n\n        let SMA0 = [];\n        let SMA1 = [];\n        let SMA2 = [];\n        let SMA3 = [];\n\n        let stochd0 = [];\n        let stochk0 = [];\n\n        let MA0 = [];\n        let MA1 = [];\n        let RSI0 = [];\n\n        let R0 = [];\n        let R1 = [];\n        let donchian0 = [];\n\n        let donchian_price0 = [];\n        let donchian_min0 = [];\n        let donchian_max0 = [];\n\n        let HIST0 = [];\n\n        let patternData = [];\n\n        let ConfrimHigh = [];\n        let ConfrimLow = [];\n        let tempMerged = template.merged;\n        let resMerged = tempMerged;\n\n        responseData?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n\n          if (meta_trader_indicator) {\n            console.log(\"switchToggleswitchToggle\");\n            ConfrimHigh.push(m.indicators[\"Confrim High\"]);\n            ConfrimLow.push(m.indicators[\"Confrim Low\"]);\n          }\n\n          if (m[pattern] !== undefined) {\n            patternData.push(m[pattern]);\n          }\n          x.push(new Date(m.date));\n          Object.keys(tempMerged).forEach((key) => {\n            resMerged[key].data = [...resMerged[key].data, m.indicators[key]];\n          });\n          if (template.id === 1) {\n          } else if (template.id === 2) {\n          } else if (template.id === 3 && m.indicators) {\n            R0.push(m.indicators[\"%R0\"]);\n            R1.push(m.indicators[\"%R1\"]);\n            donchian0.push(m.indicators?.donchian0);\n          } else if (template.id === 4) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template.id === 5) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDHIST2.push(m.indicators?.MACDHIST2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template.id === 7) {\n            EMA0.push(m.indicators?.EMA0);\n            MA0.push(m.indicators?.MA0);\n            MA1.push(m.indicators?.MA1);\n            RSI0.push(m.indicators?.RSI0);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template.id === 6) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            EMA4.push(m.indicators?.EMA4);\n            EMA5.push(m.indicators?.EMA5);\n            HIST0.push(m.indicators?.HIST0);\n          }\n        });\n\n        // let lowLowest = Math.min(...low.filter((f) => f !== null));\n        // let closeLowest = Math.min(...close.filter((f) => f !== null));\n        // let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\n\n        // let highHighest = Math.min(...low.filter((f) => f !== null));\n        // let openHighest = Math.max(...close.filter((f) => f !== null));\n        // let highest = openHighest > highHighest ? openHighest : highHighest;\n\n        for (let i = 0; i < rightMargin; i++) {\n          high.push(null);\n          low.push(null);\n          open.push(null);\n          close.push(null);\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\n          Object.keys(tempMerged).forEach((key) => {\n            resMerged[key].data = [...resMerged[key].data, null];\n          });\n          if (template.id === 1) {\n          } else if (template.id === 2) {\n          } else if (template.id === 3) {\n            R0.push(null);\n            R1.push(null);\n            donchian0.push(null);\n            donchian_price0.push(null);\n            donchian_min0.push(null);\n            donchian_max0.push(null);\n          } else if (template.id === 4) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDHIST0.push(null);\n            MACDSIGNAL2.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template.id === 5) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDHIST0.push(null);\n            MACDHIST1.push(null);\n            MACDHIST2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDSIGNAL1.push(null);\n            MACDSIGNAL2.push(null);\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template.id === 7) {\n            EMA0.push(null);\n            MA0.push(null);\n            MA1.push(null);\n            RSI0.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template.id === 6) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            EMA4.push(null);\n            EMA5.push(null);\n            HIST0.push(null);\n          }\n        }\n        console.log(\"tempMerged\", resMerged);\n\n        if (template.id === 0) {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        } else if (template.id === 1) {\n          setSeparateGraphs([]);\n        } else if (template.id === 2) {\n          setSeparateGraphs([]);\n        } else if (template.id === 3) {\n          setSeparateGraphs([\n            {\n              x: x,\n              y: R0,\n              name: \"%R0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: R1,\n              name: \"%R1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n        } else if (template.id === 4) {\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              template: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACDHIST0,\n              name: \"MACD HIST\",\n              type: \"bar\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\n              },\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template.id === 5) {\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACDHIST0,\n              name: \"MACDHIST\",\n              type: \"bar\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\n              },\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template.id === 7) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: MA0,\n              name: \"MA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n            {\n              x: x,\n              y: MA1,\n              name: \"MA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              name: \"RSI0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template.id === 6) {\n          setSeparateGraphs([\n            {\n              x: x,\n              y: HIST0,\n              type: \"bar\",\n              name: \"HIST0\",\n              marker: {\n                color: HIST0.map((m, i) =>\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\n                ), //\"black\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n          ]);\n        }\n\n        setSelectedTemp({ ...template, merged: resMerged });\n\n        setGraphData({\n          ...dummy,\n          high,\n          low,\n          open,\n          close,\n          x,\n          ConfrimHigh,\n          ConfrimLow,\n          EMA0,\n          EMA1,\n          EMA2,\n        });\n        setLayout({\n          ...layout,\n          xaxis: {\n            ...layout.xaxis,\n            rangeslider: {\n              visible: false,\n            },\n            autorange: true,\n            tickvals: [\n              ...x.filter((f, i) => {\n                return i % 15 === 0; //d.getDate() === 15 || d.getDate() === 30;\n              }),\n            ],\n            ticktext: [\n              ...x\n                .filter((f, i) => {\n                  return i % 15 === 0;\n                })\n                .map((m) => {\n                  let d = new Date(m);\n                  let datee = months[d.getMonth()] + \" \" + d.getUTCFullYear();\n                  return datee;\n                }),\n            ],\n          },\n          yaxis: {\n            ...layout.yaxis,\n            rangeslider: {\n              visible: false,\n            },\n            autorange: true,\n          },\n          shapes: [\n            ...high.map((shp, i) => {\n              if (patternData[i]) {\n                let lowP = Math.min(...[low[i], high[i], open[i], close[i]]);\n                let highP = Math.max(...[low[i], high[i], open[i], close[i]]);\n                let x0 = String(new Date(x[i - 1])); //- 0.5 * time.ms));\n                let x1 = String(new Date(x[i + 1])); //.getTime() + 0.5 * time.ms));\n\n                console.log(\"x0x1\", x0, x1);\n                return {\n                  type: \"rect\",\n                  xref: \"x\",\n                  yref: \"y\",\n                  x0: x0,\n                  y0: lowP,\n                  x1,\n                  width: 1,\n                  y1: highP,\n                  fillcolor: \"yellow\",\n                  opacity: 0.6,\n                  rightMargin: 3,\n                  line: {\n                    width: 2,\n                    color: open[i] < close[i] ? \"green\" : \"red\",\n                    opacity: 1,\n                  },\n                };\n              }\n              return null;\n            }),\n          ],\n        });\n      })\n      .catch((err) => {\n        setLoader(false);\n        setMergedGraphs([]);\n        setSeparateGraphs([]);\n        setGraphData(null);\n      });\n  };\n\n  useState(() => {\n    getDataRequest(selectedStock, selectedTime);\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    getDataRequest(\n      stock,\n      selectedTime,\n      selectedTemp,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const handlePatternChange = (pattern) => {\n    console.log(\"pattern\", pattern);\n    setSelectedPattern(pattern);\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      selectedTemp,\n      pattern,\n      switchToggle\n    );\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    getDataRequest(\n      selectedStock,\n      time,\n      selectedTemp,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const templateChange = (tempData) => {\n    setSelectedTemp(tempData);\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      tempData,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const handlSwitchToggle = (v) => {\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      selectedTemp,\n      selectedPattern,\n      v\n    );\n    setSwitchToggle(v);\n  };\n  const onHover = ({ points: [point] }) => {\n    setA(point.pointIndex);\n  };\n\n  return (\n    <>\n      {loader ? <div className=\"loader\"></div> : <></>}\n      <div>\n        <Header\n          switchToggle={switchToggle}\n          handlSwitchToggle={handlSwitchToggle}\n          graphType={graphType}\n          handleGrapthType={handleGrapthType}\n          templateChange={templateChange}\n          templatesOptions={templatesOptions}\n          data={data}\n          selectedStock={selectedStock}\n          selectedTime={selectedTime}\n          hanldeSelectedTime={hanldeSelectedTime}\n          handleStockChange={handleStockChange}\n          selectedTemp={selectedTemp}\n          selectedPattern={selectedPattern}\n          handlePatternChange={handlePatternChange}\n        />\n\n        <div id=\"fullscreen\">\n          <Graph\n            onHover={onHover}\n            style={style}\n            data={{ ...data, type: graphType }}\n            layout={layout}\n            templates={[\n              ...(selectedTemp.merged && Object.keys(selectedTemp.merged).length\n                ? [\n                    ...Object.keys(selectedTemp.merged).map((key) => {\n                      return {\n                        ...selectedTemp.merged[key],\n                        x: data?.x,\n                        y: selectedTemp.merged[key].data.map((m) => {\n                          if (!m) return null;\n                          else return m;\n                        }),\n                        name: `${selectedTemp.merged[key].name} ${selectedTemp.merged[key].data[a]}`,\n                      };\n                    }),\n                  ]\n                : []),\n              ...(switchToggle\n                ? [\n                    {\n                      x: data?.x.map((m) => {\n                        if (!m) return null;\n                        else return String(m);\n                      }),\n                      y: data?.ConfrimHigh.map((m, i) => {\n                        if (!m) return null;\n                        else return data.high[i];\n                      }),\n                      xaxis: \"x\",\n                      name: \"Confirm High\",\n                      yaxis: \"y\",\n                      mode: \"markers\",\n                      type: \"scatter\",\n                      marker: {\n                        size: 8,\n                        color: \"blue\",\n                        symbol: \"diamond\",\n                      },\n                    },\n                  ]\n                : []),\n              ...(switchToggle\n                ? [\n                    {\n                      x: data.x.map((m) => {\n                        if (!m) return null;\n                        else return new Date(m);\n                      }),\n                      y: data.ConfrimLow.map((m, i) => {\n                        if (!m) return null;\n                        else return data.low[i];\n                      }),\n                      xaxis: \"x\",\n                      name: \"Confirm Low\",\n                      yaxis: \"y\",\n                      mode: \"markers\",\n                      marker: {\n                        size: 8,\n                        color: \"red\",\n                        symbol: \"diamond\",\n                      },\n                    },\n                  ]\n                : []),\n            ]}\n            loader={loader}\n          />\n          {!loader &&\n            separateGraphs.map((m, i) => (\n              <Graph\n                key={i + \"subGraph\"}\n                templates={m.templates}\n                style={{ width: \"100%\" }}\n                data={{ ...m }}\n                layout={{\n                  dragmode: \"zoom\",\n                  margin: {\n                    r: 10,\n                    t: 1,\n                    b: 40,\n                    l: 20,\n                  },\n                  showlegend: true,\n                  legend: { x: 1, xanchor: \"right\", y: 1 },\n                  xaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    type: \"category\",\n                    dtick: 30 * 24 * 60 * 60 * 1000,\n                    tickformat: \"%d %B (%a)\\n %Y\",\n                    ticklen: 15,\n                    nticks: 10,\n                  },\n                  yaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    position: 1,\n                    side: \"bottom\",\n                  },\n                  opacity: 0.2,\n                  autosize: true,\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}