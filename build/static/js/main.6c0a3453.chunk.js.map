{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","onHover","className","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","merged","EMA0","xaxis","yaxis","mode","type","marker","size","color","EMA1","EMA2","EMA3","EMA4","EMA5","donchian_price0","line","width","donchian_min0","donchian_max0","SMA0","SMA1","SMA2","SMA3","MA0","MA1","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","handlePatternChange","selectedTime","hanldeSelectedTime","selectedTemp","selectedPattern","handlSwitchToggle","switchToggle","useState","stocks","setStocks","patterns","setPatterns","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","onChange","event","newValue","fullWidth","disableClearable","options","onClose","value","defaultValue","find","v","renderInput","params","TextField","label","variant","InputProps","ButtonGroup","Button","onClick","xmlns","viewBox","height","fill","d","stroke","Switch","checked","e","target","map","t","i","m","template1","graph","x","y","low","templateType","subGraphs","mergedGraphs","high","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","increasing","months","App","setLoader","setA","setGraphType","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","traceorder","font","family","bgcolor","bordercolor","borderwidth","domain","rangeslider","visible","tickmode","autorange","position","side","opacity","autosize","setLayout","setSelectStock","setSelectedPattern","setSelectTime","setSelectedTemp","setSwitchToggle","setGraphData","getDataRequest","stock","time","pattern","meta_trader_indicator","url","toLowerCase","length","responseData","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","stochd0","stochk0","RSI0","R0","R1","donchian0","HIST0","patternData","ConfrimHigh","ConfrimLow","tempMerged","resMerged","forEach","push","indicators","undefined","Date","date","Object","keys","key","now","tickvals","filter","f","ticktext","getMonth","getUTCFullYear","shapes","shp","lowP","Math","min","highP","max","x0","String","x1","xref","yref","y0","y1","rightMargin","err","tempData","point","points","pointIndex","symbol","xanchor","dtick","tickformat","ticklen","nticks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0a3453.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\r\nimport React from \"react\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport \"../App.css\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport const Graph = ({ style, data, layout, templates, loader, onHover }) => {\r\n  const config = { responsive: true };\r\n  if (loader) {\r\n    return <div className=\"loadingLabel\">Loading...</div>;\r\n  } else\r\n    return (\r\n      <Plot\r\n        onHover={onHover}\r\n        style={style}\r\n        data={[data, ...(templates || [])]}\r\n        layout={layout}\r\n      />\r\n    );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\r\n\r\nexport const getAllStocks = async (endpoint) => {\r\n    return await axios\r\n      .get(`${endpoint}`)\r\n      .then(( data ) => {\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n       console.log(error)\r\n      });\r\n  };","export const times = [\r\n  { name: \"1h\", ms: 3600000 },\r\n  { name: \"1d\", ms: 86400000 },\r\n  { name: \"1wk\", ms: 604800000 },\r\n  { name: \"1mo\", ms: 2629746000 },\r\n];\r\n\r\nexport const templates = [\r\n  {\r\n    name: \"T0\",\r\n    id: 0,\r\n  },\r\n  {\r\n    name: \"T1\",\r\n    id: 1,\r\n    merged: {\r\n      EMA0: {\r\n        data: [],\r\n        xaxis: \"x\",\r\n        name: `EMA0`,\r\n        yaxis: \"y\",\r\n        mode: \"line\",\r\n        type: \"scatter\",\r\n        marker: {\r\n          size: 4,\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA1: {\r\n        data: [],\r\n        name: \"EMA1\",\r\n        xaxis: \"x\",\r\n        type: \"scatter\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA2: {\r\n        data: [],\r\n        name: \"EMA2\",\r\n        type: \"scatter\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T2\",\r\n    id: 2,\r\n    merged: {\r\n      EMA0: {\r\n        data: [],\r\n        xaxis: \"x\",\r\n        name: `EMA0`,\r\n        yaxis: \"y\",\r\n        mode: \"line\",\r\n        type: \"scatter\",\r\n        marker: {\r\n          size: 4,\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA1: {\r\n        data: [],\r\n        name: \"EMA1\",\r\n        xaxis: \"x\",\r\n        type: \"scatter\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA2: {\r\n        data: [],\r\n        name: \"EMA2\",\r\n        type: \"scatter\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA3: {\r\n        data: [],\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        name: \"EMA3\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n      EMA4: {\r\n        data: [],\r\n        name: \"EMA4\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n      EMA5: {\r\n        data: [],\r\n        name: \"EMA5\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T3\",\r\n    id: 3,\r\n    merged: {\r\n      donchian_price0: {\r\n        data: [],\r\n        name: \"DONCHAIN\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n          size: 12,\r\n        },\r\n        line: {\r\n          width: 1,\r\n        },\r\n      },\r\n      donchian_min0: {\r\n        data: [],\r\n        name: \"donchian min\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        line: {\r\n          width: 2,\r\n        },\r\n      },\r\n      donchian_max0: {\r\n        data: [],\r\n        name: \"donchian max\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        line: {\r\n          width: 2,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T4\",\r\n    id: 4,\r\n    merged: {\r\n      SMA0: {\r\n        data: [],\r\n        name: \"SMA0\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(255,173,89)\",\r\n        },\r\n      },\r\n      SMA1: {\r\n        data: [],\r\n        name: \"SMA1\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(253,91,252)\",\r\n        },\r\n      },\r\n      SMA2: {\r\n        data: [],\r\n        name: \"SMA2\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(172,91,170)\",\r\n        },\r\n      },\r\n      SMA3: {\r\n        data: [],\r\n        name: \"SMA3\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(89,89,89)\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T5\",\r\n    id: 5,\r\n    merged: {\r\n      EMA0: {\r\n        data: [],\r\n        name: \"EMA0\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA1: {\r\n        data: [],\r\n        name: \"EMA1\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(255,0,56)\",\r\n        },\r\n      },\r\n      EMA2: {\r\n        data: [],\r\n        name: \"EMA2\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"rgb(13,190,58)\",\r\n        },\r\n      },\r\n      EMA3: {\r\n        data: [],\r\n        name: \"EMA3\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T6\",\r\n    id: 6,\r\n    merged: {\r\n      EMA0: {\r\n        data: [],\r\n        name: \"EMA0\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA1: {\r\n        data: [],\r\n        name: \"EMA1\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA2: {\r\n        data: [],\r\n        name: \"EMA2\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      EMA3: {\r\n        data: [],\r\n        name: \"EMA3\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n      EMA4: {\r\n        data: [],\r\n        name: \"EMA4\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n      EMA5: {\r\n        data: [],\r\n        name: \"EMA5\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"T7\",\r\n    id: 7,\r\n    merged: {\r\n      EMA0: {\r\n        data: [],\r\n        name: \"EMA0\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n      },\r\n      MA0: {\r\n        data: [],\r\n        name: \"MA0\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      MA1: {\r\n        data: [],\r\n        name: \"MA1\",\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n];\r\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\r\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { getAllStocks } from \"../services/api\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport { times, templates } from \"../Utils/utils\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport \"../App.css\";\r\nconst Header = ({\r\n  handleGrapthType,\r\n  graphType,\r\n  templateChange,\r\n  templatesOptions,\r\n  data,\r\n  selectedStock,\r\n  handleStockChange,\r\n  handlePatternChange,\r\n  selectedTime,\r\n  hanldeSelectedTime,\r\n  selectedTemp,\r\n  selectedPattern,\r\n  handlSwitchToggle,\r\n  switchToggle,\r\n}) => {\r\n  let [stocks, setStocks] = useState([]);\r\n  let [patterns, setPatterns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStocks(\"stocks/available\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setStocks(res?.data?.list || []);\r\n    });\r\n\r\n    getAllStocks(\"stocks/patterns\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setPatterns(res?.data?.list || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      textAlign=\"center\"\r\n      style={{ padding: \"10px\" }}\r\n    >\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handleStockChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={stocks}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedStock}\r\n          defaultValue={stocks.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Stock\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>{\" \"}\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handlePatternChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={[...patterns]}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedPattern}\r\n          defaultValue={patterns.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Pattern\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          <Button\r\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"candlestick\")}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 28 28\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path d=\"M17 11v6h3v-6h-3zm-.5-1h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5z\"></path>\r\n              <path d=\"M18 7h1v3.5h-1zm0 10.5h1V21h-1z\"></path>\r\n              <path d=\"M9 8v12h3V8H9zm-.5-1h4a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5z\"></path>\r\n              <path d=\"M10 4h1v3.5h-1zm0 16.5h1V24h-1z\"></path>\r\n            </svg>{\" \"}\r\n          </Button>\r\n          <Button\r\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"ohlc\")}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 28 28\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n            >\r\n              <g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\">\r\n                <path d=\"M10.5 7.5v15M7.5 20.5H10M13.5 11.5H11M19.5 6.5v15M16.5 9.5H19M22.5 16.5H20\"></path>\r\n              </g>\r\n            </svg>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <Switch\r\n          checked={switchToggle}\r\n          onClick={(e) => {\r\n            console.log(\"console.log\", e.target.checked);\r\n            handlSwitchToggle(e.target.checked);\r\n          }}\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {times.map((t, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => hanldeSelectedTime(t)}\r\n              className={`btn ${\r\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\r\n              }`}\r\n            >\r\n              {t.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {templates.map((m, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => templateChange(m)}\r\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\r\n            >\r\n              {m.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const template1 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.a,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"#90c7fc\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.high,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.open,\r\n            type: \"bar\",\r\n            marker: {\r\n              color: data.open.map((m, i) =>\r\n                m < data.close[i] ? \"green\" : \"red\"\r\n              ),\r\n            },\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            templateType: 1,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const template2 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n    ],\r\n    subGraphs: [],\r\n  };\r\n};\r\n\r\nexport const template3 = (data, axis) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m + 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m - 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.low,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"blue\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\nexport const templatesOptions = (data) => [\r\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\r\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\r\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\r\n  // { name: \"T4\", id: 4, template: template1 },\r\n  // { name: \"T5\", id: 5, template: template1 },\r\n  // { name: \"T6\", id: 6, template: template1 },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Graph } from \"./Components/Graph\";\r\nimport Header from \"./Components/Header\";\r\nimport { getAllStocks } from \"./services/api\";\r\nimport { templatesOptions } from \"./templates/templates\";\r\n\r\nconst dummy = {\r\n  x: [],\r\n  name: \"main\",\r\n  close: [],\r\n  decreasing: {\r\n    fillcolor: \"black\",\r\n    line: { color: \"black\", width: 1 },\r\n  },\r\n  high: [],\r\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\r\n  line: { color: \"rgba(31,119,180,1)\" },\r\n  low: [],\r\n  open: [],\r\n  type: \"candlestick\",\r\n  xaxis: \"x\",\r\n  yaxis: \"y\",\r\n};\r\nconst rightMargin = 23;\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n// const candleDefault = 214 + rightMargin;\r\n\r\nfunction App() {\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [a, setA] = useState(1);\r\n\r\n  const [graphType, setGraphType] = useState(\"candlestick\");\r\n\r\n  const [separateGraphs, setSeparateGraphs] = useState([]);\r\n\r\n  const style = { width: \"100%\", height: \"100%\" };\r\n\r\n  const [layout, setLayout] = useState({\r\n    dragmode: \"zoom\",\r\n    margin: {\r\n      r: 10,\r\n      t: 25,\r\n      b: 40,\r\n      l: 20,\r\n    },\r\n    showlegend: true,\r\n    legend: {\r\n      x: 0,\r\n      y: 1,\r\n      traceorder: \"normal\",\r\n      font: {\r\n        family: \"sans-serif\",\r\n        size: 12,\r\n        color: \"#000\",\r\n      },\r\n      bgcolor: \"#E2E2E211\",\r\n      bordercolor: \"#FFFFFF\",\r\n      borderwidth: 2,\r\n    },\r\n    xaxis: {\r\n      domain: [0, 1],\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      type: \"category\",\r\n      tickmode: \"array\",\r\n    },\r\n    yaxis: {\r\n      domain: [0, 1],\r\n      autorange: true,\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      position: 1,\r\n      side: \"bottom\",\r\n      type: \"linear\",\r\n    },\r\n    opacity: 0.2,\r\n\r\n    autosize: true,\r\n    height: 630,\r\n  });\r\n\r\n  const handleGrapthType = (type) => {\r\n    setGraphType(type);\r\n  };\r\n\r\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\r\n  const [selectedPattern, setSelectedPattern] = useState(\"\");\r\n\r\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\r\n  const [selectedTemp, setSelectedTemp] = useState({\r\n    id: 0,\r\n    name: \"T0\",\r\n    merged: {},\r\n  });\r\n  const [switchToggle, setSwitchToggle] = useState(false);\r\n\r\n  const [data, setGraphData] = useState({ ...dummy });\r\n\r\n  const getDataRequest = (\r\n    stock,\r\n    time,\r\n    template,\r\n    pattern,\r\n    meta_trader_indicator\r\n  ) => {\r\n    setLoader(true);\r\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\r\n    if (template && template?.id > 0) {\r\n      url = url + `&template=${template.id}`;\r\n    }\r\n    if (pattern?.length) {\r\n      url = url + `&pattern=${pattern}`;\r\n    }\r\n    if (meta_trader_indicator) {\r\n      url = url + `&meta_trader_indicator=${meta_trader_indicator}`;\r\n    }\r\n    getAllStocks(url)\r\n      .then((res) => {\r\n        console.log(\r\n          \"Total candles on time \",\r\n          time.name,\r\n          \" is \",\r\n          res?.data?.data.length\r\n        );\r\n        setLoader(false);\r\n        let responseData = [...res?.data?.data];\r\n\r\n        let high = [],\r\n          low = [],\r\n          open = [],\r\n          close = [],\r\n          x = [];\r\n\r\n        let EMA0 = [];\r\n        let EMA1 = [];\r\n        let EMA2 = [];\r\n        let EMA3 = [];\r\n        let EMA4 = [];\r\n        let EMA5 = [];\r\n\r\n        let MACD0 = [];\r\n        let MACD1 = [];\r\n        let MACD2 = [];\r\n        let MACDHIST0 = [];\r\n        let MACDHIST1 = [];\r\n        let MACDHIST2 = [];\r\n        let MACDSIGNAL0 = [];\r\n        let MACDSIGNAL1 = [];\r\n        let MACDSIGNAL2 = [];\r\n\r\n        let stochd0 = [];\r\n        let stochk0 = [];\r\n\r\n        let MA0 = [];\r\n        let MA1 = [];\r\n        let RSI0 = [];\r\n\r\n        let R0 = [];\r\n        let R1 = [];\r\n        let donchian0 = [];\r\n\r\n        let HIST0 = [];\r\n\r\n        let patternData = [];\r\n\r\n        let ConfrimHigh = [];\r\n        let ConfrimLow = [];\r\n        let tempMerged = template && template.merged;\r\n        let resMerged = tempMerged;\r\n\r\n        responseData?.forEach((m) => {\r\n          high.push(m.high);\r\n          low.push(m.low);\r\n          open.push(m.open);\r\n          close.push(m.close);\r\n\r\n          if (meta_trader_indicator) {\r\n            console.log(\"switchToggleswitchToggle\");\r\n            ConfrimHigh.push(m.indicators[\"Confrim High\"]);\r\n            ConfrimLow.push(m.indicators[\"Confrim Low\"]);\r\n          }\r\n\r\n          if (m[pattern] !== undefined) {\r\n            patternData.push(m[pattern]);\r\n          }\r\n          x.push(new Date(m.date));\r\n\r\n          if (template) {\r\n            tempMerged &&\r\n              Object.keys(tempMerged).length &&\r\n              Object.keys(tempMerged).forEach((key) => {\r\n                resMerged[key].data = [\r\n                  ...resMerged[key].data,\r\n                  m.indicators[key],\r\n                ];\r\n              });\r\n            if (template.id === 3 && m.indicators) {\r\n              R0.push(m.indicators[\"%R0\"]);\r\n              R1.push(m.indicators[\"%R1\"]);\r\n              donchian0.push(m.indicators?.donchian0);\r\n            } else if (template.id === 4) {\r\n              MACD0.push(m.indicators?.MACD0);\r\n              MACD1.push(m.indicators?.MACD1);\r\n              MACD2.push(m.indicators?.MACD2);\r\n              MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n              MACDHIST0.push(m.indicators?.MACDHIST0);\r\n              MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n              stochd0.push(m.indicators?.stochd0);\r\n              stochk0.push(m.indicators?.stochk0);\r\n            } else if (template.id === 5) {\r\n              MACD0.push(m.indicators?.MACD0);\r\n              MACD1.push(m.indicators?.MACD1);\r\n              MACD2.push(m.indicators?.MACD2);\r\n              MACDHIST0.push(m.indicators?.MACDHIST0);\r\n              MACDHIST1.push(m.indicators?.MACDHIST1);\r\n              MACDHIST2.push(m.indicators?.MACDHIST2);\r\n              MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n              MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\r\n              MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n              EMA0.push(m.indicators?.EMA0);\r\n              EMA1.push(m.indicators?.EMA1);\r\n              EMA2.push(m.indicators?.EMA2);\r\n              EMA3.push(m.indicators?.EMA3);\r\n              stochd0.push(m.indicators?.stochd0);\r\n              stochk0.push(m.indicators?.stochk0);\r\n            } else if (template.id === 7) {\r\n              EMA0.push(m.indicators?.EMA0);\r\n              MA0.push(m.indicators?.MA0);\r\n              MA1.push(m.indicators?.MA1);\r\n              RSI0.push(m.indicators?.RSI0);\r\n              stochd0.push(m.indicators?.stochd0);\r\n              stochk0.push(m.indicators?.stochk0);\r\n            } else if (template.id === 6) {\r\n              EMA0.push(m.indicators?.EMA0);\r\n              EMA1.push(m.indicators?.EMA1);\r\n              EMA2.push(m.indicators?.EMA2);\r\n              EMA3.push(m.indicators?.EMA3);\r\n              EMA4.push(m.indicators?.EMA4);\r\n              EMA5.push(m.indicators?.EMA5);\r\n              HIST0.push(m.indicators?.HIST0);\r\n            }\r\n          }\r\n        });\r\n\r\n        // let lowLowest = Math.min(...low.filter((f) => f !== null));\r\n        // let closeLowest = Math.min(...close.filter((f) => f !== null));\r\n        // let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\r\n\r\n        // let highHighest = Math.min(...low.filter((f) => f !== null));\r\n        // let openHighest = Math.max(...close.filter((f) => f !== null));\r\n        // let highest = openHighest > highHighest ? openHighest : highHighest;\r\n\r\n        for (let i = 0; i < rightMargin; i++) {\r\n          high.push(null);\r\n          low.push(null);\r\n          open.push(null);\r\n          close.push(null);\r\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\r\n          if (template) {\r\n            tempMerged &&\r\n              Object.keys(tempMerged).forEach((key) => {\r\n                resMerged[key].data = [...resMerged[key].data, null];\r\n              });\r\n            if (template.id === 1) {\r\n            } else if (template.id === 2) {\r\n            } else if (template.id === 3) {\r\n              R0.push(null);\r\n              R1.push(null);\r\n              donchian0.push(null);\r\n            } else if (template.id === 4) {\r\n              MACD0.push(null);\r\n              MACD1.push(null);\r\n              MACD2.push(null);\r\n              MACDSIGNAL0.push(null);\r\n              MACDHIST0.push(null);\r\n              MACDSIGNAL2.push(null);\r\n              stochd0.push(null);\r\n              stochk0.push(null);\r\n            } else if (template.id === 5) {\r\n              MACD0.push(null);\r\n              MACD1.push(null);\r\n              MACD2.push(null);\r\n              MACDHIST0.push(null);\r\n              MACDHIST1.push(null);\r\n              MACDHIST2.push(null);\r\n              MACDSIGNAL0.push(null);\r\n              MACDSIGNAL1.push(null);\r\n              MACDSIGNAL2.push(null);\r\n              EMA0.push(null);\r\n              EMA1.push(null);\r\n              EMA2.push(null);\r\n              EMA3.push(null);\r\n              stochd0.push(null);\r\n              stochk0.push(null);\r\n            } else if (template.id === 7) {\r\n              EMA0.push(null);\r\n              MA0.push(null);\r\n              MA1.push(null);\r\n              RSI0.push(null);\r\n              stochd0.push(null);\r\n              stochk0.push(null);\r\n            } else if (template.id === 6) {\r\n              EMA0.push(null);\r\n              EMA1.push(null);\r\n              EMA2.push(null);\r\n              EMA3.push(null);\r\n              EMA4.push(null);\r\n              EMA5.push(null);\r\n              HIST0.push(null);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (template) {\r\n          if (template.id === 0) {\r\n            setSeparateGraphs([]);\r\n          } else if (template.id === 1) {\r\n            setSeparateGraphs([]);\r\n          } else if (template.id === 2) {\r\n            setSeparateGraphs([]);\r\n          } else if (template.id === 3) {\r\n            setSeparateGraphs([\r\n              {\r\n                x: x,\r\n                y: R0,\r\n                name: \"%R0\",\r\n                marker: {\r\n                  color: \"blue\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n              },\r\n              {\r\n                x: x,\r\n                y: R1,\r\n                name: \"%R1\",\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                marker: {\r\n                  color: \"red\",\r\n                },\r\n              },\r\n            ]);\r\n          } else if (template.id === 4) {\r\n            setSeparateGraphs([\r\n              {\r\n                x: x,\r\n                y: MACD0,\r\n                name: \"MACD0\",\r\n                marker: {\r\n                  color: \"blue\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                template: [\r\n                  {\r\n                    x: x,\r\n                    y: MACDSIGNAL0,\r\n                    name: \"MACD SIGNAL\",\r\n                    xaxis: \"x\",\r\n                    yaxis: \"y\",\r\n                    marker: {\r\n                      color: \"black\",\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                x: x,\r\n                y: MACDHIST0,\r\n                name: \"MACD HIST\",\r\n                type: \"bar\",\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                marker: {\r\n                  color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\r\n                },\r\n              },\r\n              {\r\n                x: x,\r\n                y: stochd0,\r\n                name: \"stochd\",\r\n                marker: {\r\n                  color: \"rgb(153,42,173)\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                templates: [\r\n                  {\r\n                    x: x,\r\n                    y: stochk0,\r\n                    name: \"stochk\",\r\n                    xaxis: \"x\",\r\n                    yaxis: \"y\",\r\n                    marker: {\r\n                      color: \"rgb(13,0,255)\",\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]);\r\n          } else if (template.id === 5) {\r\n            setSeparateGraphs([\r\n              {\r\n                x: x,\r\n                y: MACD0,\r\n                name: \"MACD0\",\r\n                marker: {\r\n                  color: \"blue\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                templates: [\r\n                  {\r\n                    x: x,\r\n                    y: MACDSIGNAL0,\r\n                    name: \"MACD SIGNAL\",\r\n                    xaxis: \"x\",\r\n                    yaxis: \"y\",\r\n                    marker: {\r\n                      color: \"black\",\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                x: x,\r\n                y: MACDHIST0,\r\n                name: \"MACDHIST\",\r\n                type: \"bar\",\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                marker: {\r\n                  color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\r\n                },\r\n              },\r\n              {\r\n                x: x,\r\n                y: stochd0,\r\n                name: \"stochd\",\r\n                marker: {\r\n                  color: \"rgb(153,42,173)\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                templates: [\r\n                  {\r\n                    x: x,\r\n                    y: stochk0,\r\n                    name: \"stochk\",\r\n                    xaxis: \"x\",\r\n                    yaxis: \"y\",\r\n                    marker: {\r\n                      color: \"rgb(13,0,255)\",\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]);\r\n          } else if (template.id === 7) {\r\n            setSeparateGraphs([\r\n              {\r\n                x: x,\r\n                y: RSI0,\r\n                name: \"RSI0\",\r\n                marker: {\r\n                  color: \"blue\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n              },\r\n              {\r\n                x: x,\r\n                y: stochd0,\r\n                name: \"stochd\",\r\n                marker: {\r\n                  color: \"rgb(153,42,173)\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n                templates: [\r\n                  {\r\n                    x: x,\r\n                    y: stochk0,\r\n                    name: \"stochk\",\r\n                    xaxis: \"x\",\r\n                    yaxis: \"y\",\r\n                    marker: {\r\n                      color: \"rgb(13,0,255)\",\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]);\r\n          } else if (template.id === 6) {\r\n            setSeparateGraphs([\r\n              {\r\n                x: x,\r\n                y: HIST0,\r\n                type: \"bar\",\r\n                name: \"HIST0\",\r\n                marker: {\r\n                  color: HIST0.map((m, i) =>\r\n                    m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\r\n                  ), //\"black\",\r\n                },\r\n                xaxis: \"x\",\r\n                yaxis: \"y\",\r\n              },\r\n            ]);\r\n          }\r\n          setSelectedTemp({ ...template, merged: resMerged });\r\n        }\r\n\r\n        setGraphData({\r\n          ...dummy,\r\n          high,\r\n          low,\r\n          open,\r\n          close,\r\n          x,\r\n          ConfrimHigh,\r\n          ConfrimLow,\r\n        });\r\n        setLayout({\r\n          ...layout,\r\n          xaxis: {\r\n            ...layout.xaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            autorange: true,\r\n            tickvals: [\r\n              ...x.filter((f, i) => {\r\n                return i % 15 === 0; //d.getDate() === 15 || d.getDate() === 30;\r\n              }),\r\n            ],\r\n            ticktext: [\r\n              ...x\r\n                .filter((f, i) => {\r\n                  return i % 15 === 0;\r\n                })\r\n                .map((m) => {\r\n                  let d = new Date(m);\r\n                  let datee = months[d.getMonth()] + \" \" + d.getUTCFullYear();\r\n                  return datee;\r\n                }),\r\n            ],\r\n          },\r\n          yaxis: {\r\n            ...layout.yaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            autorange: true,\r\n          },\r\n          shapes: [\r\n            ...high.map((shp, i) => {\r\n              if (patternData[i]) {\r\n                let lowP = Math.min(...[low[i], high[i], open[i], close[i]]);\r\n                let highP = Math.max(...[low[i], high[i], open[i], close[i]]);\r\n                let x0 = String(new Date(x[i - 1])); //- 0.5 * time.ms));\r\n                let x1 = String(new Date(x[i + 1])); //.getTime() + 0.5 * time.ms));\r\n\r\n                console.log(\"x0x1\", x0, x1);\r\n                return {\r\n                  type: \"rect\",\r\n                  xref: \"x\",\r\n                  yref: \"y\",\r\n                  x0: x0,\r\n                  y0: lowP,\r\n                  x1,\r\n                  width: 1,\r\n                  y1: highP,\r\n                  fillcolor: \"yellow\",\r\n                  opacity: 0.6,\r\n                  rightMargin: 3,\r\n                  line: {\r\n                    width: 2,\r\n                    color: open[i] < close[i] ? \"green\" : \"red\",\r\n                    opacity: 1,\r\n                  },\r\n                };\r\n              }\r\n              return null;\r\n            }),\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setSeparateGraphs([]);\r\n        setGraphData(null);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataRequest(selectedStock, selectedTime);\r\n  }, []);\r\n\r\n  const handleStockChange = (stock) => {\r\n    setSelectStock(stock);\r\n    getDataRequest(\r\n      stock,\r\n      selectedTime,\r\n      selectedTemp,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const handlePatternChange = (pattern) => {\r\n    setSelectedPattern(pattern);\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      selectedTemp,\r\n      pattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const hanldeSelectedTime = (time) => {\r\n    setSelectTime(time);\r\n    getDataRequest(\r\n      selectedStock,\r\n      time,\r\n      selectedTemp,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const templateChange = (tempData) => {\r\n    setSelectedTemp(tempData);\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      tempData,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const handlSwitchToggle = (v) => {\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      selectedTemp,\r\n      selectedPattern,\r\n      v\r\n    );\r\n    setSwitchToggle(v);\r\n  };\r\n  const onHover = ({ points: [point] }) => {\r\n    setA(point.pointIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? <div className=\"loader\"></div> : <></>}\r\n      <div>\r\n        <Header\r\n          switchToggle={switchToggle}\r\n          handlSwitchToggle={handlSwitchToggle}\r\n          graphType={graphType}\r\n          handleGrapthType={handleGrapthType}\r\n          templateChange={templateChange}\r\n          templatesOptions={templatesOptions}\r\n          data={data}\r\n          selectedStock={selectedStock}\r\n          selectedTime={selectedTime}\r\n          hanldeSelectedTime={hanldeSelectedTime}\r\n          handleStockChange={handleStockChange}\r\n          selectedTemp={selectedTemp}\r\n          selectedPattern={selectedPattern}\r\n          handlePatternChange={handlePatternChange}\r\n        />\r\n\r\n        <div id=\"fullscreen\">\r\n          <Graph\r\n            onHover={onHover}\r\n            style={style}\r\n            data={{ ...data, type: graphType }}\r\n            layout={layout}\r\n            templates={[\r\n              ...(selectedTemp.merged && Object.keys(selectedTemp.merged).length\r\n                ? [\r\n                    ...Object.keys(selectedTemp.merged).map((key) => {\r\n                      return {\r\n                        ...selectedTemp.merged[key],\r\n                        x: data?.x,\r\n                        y: selectedTemp.merged[key].data.map((m) => {\r\n                          if (!m) return null;\r\n                          else return m;\r\n                        }),\r\n                        name: `${selectedTemp.merged[key].name} ${selectedTemp.merged[key].data[a]}`,\r\n                      };\r\n                    }),\r\n                  ]\r\n                : []),\r\n              ...(switchToggle\r\n                ? [\r\n                    {\r\n                      x: data?.x.map((m) => {\r\n                        if (!m) return null;\r\n                        else return String(m);\r\n                      }),\r\n                      y: data?.ConfrimHigh.map((m, i) => {\r\n                        if (!m) return null;\r\n                        else return data.high[i];\r\n                      }),\r\n                      xaxis: \"x\",\r\n                      name: \"Confirm High\",\r\n                      yaxis: \"y\",\r\n                      mode: \"markers\",\r\n                      type: \"scatter\",\r\n                      marker: {\r\n                        size: 8,\r\n                        color: \"blue\",\r\n                        symbol: \"diamond\",\r\n                      },\r\n                    },\r\n                  ]\r\n                : []),\r\n              ...(switchToggle\r\n                ? [\r\n                    {\r\n                      x: data.x.map((m) => {\r\n                        if (!m) return null;\r\n                        else return new Date(m);\r\n                      }),\r\n                      y: data.ConfrimLow.map((m, i) => {\r\n                        if (!m) return null;\r\n                        else return data.low[i];\r\n                      }),\r\n                      xaxis: \"x\",\r\n                      name: \"Confirm Low\",\r\n                      yaxis: \"y\",\r\n                      mode: \"markers\",\r\n                      marker: {\r\n                        size: 8,\r\n                        color: \"red\",\r\n                        symbol: \"diamond\",\r\n                      },\r\n                    },\r\n                  ]\r\n                : []),\r\n            ]}\r\n            loader={loader}\r\n          />\r\n          {!loader &&\r\n            separateGraphs.map((m, i) => (\r\n              <Graph\r\n                key={i + \"subGraph\"}\r\n                templates={m.templates}\r\n                style={{ width: \"100%\" }}\r\n                data={{ ...m }}\r\n                layout={{\r\n                  dragmode: \"zoom\",\r\n                  margin: {\r\n                    r: 10,\r\n                    t: 1,\r\n                    b: 40,\r\n                    l: 20,\r\n                  },\r\n                  showlegend: true,\r\n                  legend: { x: 1, xanchor: \"right\", y: 1 },\r\n                  xaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    type: \"category\",\r\n                    dtick: 30 * 24 * 60 * 60 * 1000,\r\n                    tickformat: \"%d %B (%a)\\n %Y\",\r\n                    ticklen: 15,\r\n                    nticks: 10,\r\n                  },\r\n                  yaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    position: 1,\r\n                    side: \"bottom\",\r\n                  },\r\n                  opacity: 0.2,\r\n                  autosize: true,\r\n                }}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}