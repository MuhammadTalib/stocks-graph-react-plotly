{"version":3,"sources":["services/api.js","Utils/defaults.js","Utils/utils.js","Utils/patternUtils.js","Components/Graph.jsx","Components/InfoLines.jsx","Components/DefaultChart.jsx","Components/GraphRenderer.jsx","Components/AutocompleteWrapper.jsx","Components/Header.jsx","Utils/sorting.js","Components/WatchListRow.jsx","Components/WatchListTable.jsx","Components/WatchList.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["axios","defaults","baseURL","getAllStocks","async","endpoint","method","data","post","concat","then","catch","error","console","log","get","initialLayout","dragmode","margin","r","t","b","l","hovermode","showlegend","legend","x","y","traceorder","font","family","size","color","bgcolor","bordercolor","xaxis","domain","rangeslider","visible","autorange","type","tickmode","showspikes","spikemode","spikesnap","spikethickness","spikecolor","spikedash","yaxis","position","side","opacity","autosize","width","window","innerWidth","height","innerHeight","times","name","desc","ms","months","T0","id","merged","separate","dummy","close","decreasing","fillcolor","line","high","increasing","low","open","hoverinfo","templates","layout","EMA0","mode","marker","EMA1","EMA2","markerFn","_","map","m","i","yaxis2","EMA3","EMA4","EMA5","donchian_price0","donchian_min0","donchian_max0","ema_10","yaxis3","SMA0","SMA1","SMA2","SMA3","range","yaxis4","MACD0","MACDSIGNAL0","MACDHIST0","stochd0","stochk0","line1","customLine","dash","line2","line3","line4","HIST0","MA0","MA1","RSI0","line5","line6","arrayMin","array","reduce","a","Math","min","drawConfirmHighAndLow","switchToggle","pointIndex","ConfrimHigh","is_closed_based","real_condition","insertion_condition","modified_condition","symbol","ConfrimLow","getMetaIndicatorColorName","metaIndicator","_data$metaIndicator","drawMergedChart","selectedTemp","graphType","mergedCandles","elder_impulse_system","length","realHigh","f_","iindex","is_red","patternData","is_green","Object","keys","key","drawSeparateChart","drawStrategiesBar","strategiesData","dateIndex","findLastIndex","f","values","includes","text","x0","y0","x1","yref","y1","drawFirstDateLine","toggleFirstDayLine","slice","dateStr","date1","Date","getDate","date2","date3","String","getOccuredReversalPatterns","pattern","filter","find","occured","Array","isArray","forEach","_patternData$pointInd","_patternData$pointInd2","_patternData$pointInd3","isT3Pattern","drawPatternData","selectedPattern","_patterns","_patterns2","_patterns3","patterns","_ref","pattern_name_list","ans","perc10","max","Number","drawPatternTriggers","_patterns4","_patterns5","_patterns6","_patterns7","_patterns8","patternTrigger","_ref2","_m$key","trigger","trigger_value","trigger_failure","trigger_failure_value","Plot","createPlotlyComponent","Plotly","Graph","_document$querySelect","loader","separateGraphs","onHover","onUnhover","onClick","onDoubleClick","setLayout","dualChartWidth","sidebarWidth","selectedStrategy","document","querySelector","addEventListener","event","bottomTemplate","setBottomTemplates","useState","useEffect","temp","spG","_spG$templates","_spG$templates2","push","_jsx","className","children","shapes","config","scrollZoom","useResizeHandler","onRelayout","e","InfoLines","selectedStock","ohlc","selectedTime","_jsxs","style","marginLeft","fontSize","description","sources","toUpperCase","_Fragment","DefaultChart","_data$x","_data$patternTrigger$","_data$patternTrigger$2","selectedCategory","enableDualChart","dataBaseUrl","setStrategiesData","setGraphData","currentSelectedTemp","setCurrentSelectedTemp","setLoader","prevCountRef","useRef","getDataRequest","setSelectedTemp","stock","time","template","meta_trader_indicator","_stock$name","_stock$sources","_stock$name2","_stock$sources2","click","strategiesLength","currStrategy","stra","Map","item","ii","selectedSource","url","toLowerCase","watch_list","interval","strategies","source","res","_res$data","_res$data2","patterns_list","responseData","tempMerged","resMerged","tempSeparate","resSeparate","_m","ith","_m$pattern","_m$pattern2","_m$pattern3","date","toUTCString","undefined","pattern_end","_m$pattern4","_m$pattern5","_m$pattern6","_m$pattern7","_m$pattern8","patternObj","trigger_value_max","trigger_value_min","_m$pattern9","_m$pattern10","_m$pattern11","arrowPattern","crossPattern","straIns","_m$straIns","_m$straIns2","_m$straIns3","_m$straIns4","_m$straIns5","_m$straIns6","_m$straIns7","_m$straIns8","_m$indicators","indicators","tempLayout","now","hovertext","dualChartSet","tickvals","ticktext","d","getMonth","getUTCFullYear","shp","lowP","highP","xref","rightMargin","err","getDataRequestService","addPreviousStrategy","current","border","GraphRenderer","secondaryLayout","setSecondaryLayout","secondaryChartTime","setSecondayChartTime","getTimeforSecondaryGraph","cursor","setCursor","currentSelected","setCurrentSelected","setPointIndex","points","point","dualChartRef","isResizing","setIsResizing","setDualChartWidth","stopResizing","React","useCallback","startResizing","mouseDownEvent","resize","mouseMoveEvent","w","getBoundingClientRect","right","clientX","removeEventListener","display","overflowY","overflowX","marginTop","ref","onMouseDown","preventDefault","CustomPaper","props","Paper","elevation","AutocompleteWrapper","options","value","label","handleChange","getOptionLabel","renderOption","multiple","renderInput","openPatternDropdown","setOpenPatternDropdown","patternRef","onMouseLeave","Autocomplete","onKeyPress","keyCode","selectOnFocus","blurOnSelect","onChange","newValue","fullWidth","onBlur","onKeyDown","defaultValue","v","PaperComponent","params","TextField","variant","styled","theme","backgroundColor","palette","typography","body2","padding","spacing","textAlign","secondary","Header","handleGrapthType","templateChange","setEnableDualChart","handlePatternChange","hanldeSelectedTime","handlSwitchToggle","setToggleFirstDayLine","setSidebarWidth","linkRef","setPatterns","sidebarOpen","setSidebarOpen","list","Box","sx","flexGrow","Grid","container","xs","FormControlLabel","control","Switch","disabled","checked","target","ButtonGroup","Button","xmlns","viewBox","fill","stroke","md","option","Link","to","IconButton","openSidebar","MenuIcon","descendingComparator","orderBy","WatchListRow","_row$sources","row","index","handleStockChange","placeSelectedItemInTheMiddle","setSelectStockIndex","TableRow","active","focus","TableCell","align","sectorName","_m$data","_m$data$row$name","_m$data2","_m$data2$row$name","_m$data3","_m$data3$row$name","_m$data4","_m$data4$row$name","_m$data5","_m$data5$row$name","_m$data6","_m$data6$row$name","WatchListTable","scrollableListRef","createSortHandler","order","stocks","setStocks","TableContainer","maxHeight","Table","minWidth","stickyHeader","TableHead","numeric","Set","column","sortDirection","TableSortLabel","direction","component","visuallyHidden","TableBody","icon","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","WatchList","setSelectedCategory","setSelectedStrategy","setStrategies","categories","setCategories","selectedStockIndex","setSelectedTime","_res$data$list","_res$data3","_res$data4","handleKeyDown","setOrder","setOrderBy","property","handleRequestSort","isAsc","comparator","stabilizedThis","el","sort","stableSort","obj","s","_strategiesData$i","_strategiesData$i$dat","_strategiesData$i$dat2","Symbol","Sources","Description","Time","getComparator","useMemo","sm","selected","Checkbox","sidebarRef","floor","useStyles","makeStyles","App","classes","setGraphType","setSelectStock","setSelectedPattern","setSelectTime","setSwitchToggle","tempData","amountToScroll","LIST_ITEM_HEIGHT","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","primary","createTheme","adaptV4Theme","main","light","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","wordBreak","h2","h3","h4","h5","h6","subtitle1","fontWeight","subtitle2","body1","MuiTextField","MuiTooltip","placement","arrow","overrides","MuiInput","input","MuiInputLabel","root","tooltip","MuiCheckbox","colorSecondary","MuiTableCell","maxWidth","head","background","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","BrowserRouter","Routes","Route","path","element","getElementById"],"mappings":"sMAEAA,IAAMC,SAASC,QAAU,4BAElB,MAAMC,EAAeC,MAAOC,EAAUC,EAAQC,IACpC,SAAXD,QACWN,IACVQ,KAAK,GAADC,OAAIJ,GAAYE,GACpBG,MAAMH,GACEA,IAERI,OAAOC,IACNC,QAAQC,IAAIF,YAGLZ,IACVe,IAAI,GAADN,OAAIJ,IACPK,MAAMH,GACEA,IAERI,OAAOC,IACNC,QAAQC,IAAIF,MCrBLI,EAAgB,CAC3BC,SAAU,MACVC,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAELC,UAAW,IACXC,YAAY,EACZC,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,WAAY,SACZC,KAAM,CACJC,OAAQ,aACRC,KAAM,GACNC,MAAO,QAETC,QAAS,YACTC,YAAa,WAEfC,MAAO,CACLC,OAAQ,CAAC,EAAG,GACZC,YAAa,CACXC,SAAS,GAEXC,WAAW,EACXC,KAAM,WACNC,SAAU,QACVC,YAAY,EACZC,UAAW,uBACXC,UAAW,SACXC,eAAgB,EAChBC,WAAY,QACZC,UAAW,OAEbC,MAAO,CACLZ,OAAQ,CAAC,EAAG,GACZG,WAAW,EACXF,YAAa,CACXC,SAAS,GAEXW,SAAU,EACVC,KAAM,SACNV,KAAM,SACNE,YAAY,EACZC,UAAW,uBACXC,UAAW,SACXC,eAAgB,EAChBC,WAAY,QACZC,UAAW,OAEbI,QAAS,GACTC,UAAU,EACVC,MAAOC,OAAOC,WAAa,GAC3BC,OAAQF,OAAOG,YAAc,IAGlBC,EAAQ,CACnB,CAAEC,KAAM,KAAMC,KAAM,SAAUC,GAAI,MAClC,CAAEF,KAAM,KAAMC,KAAM,SAAUC,GAAI,MAClC,CAAEF,KAAM,KAAMC,KAAM,SAAUC,GAAI,OAClC,CAAEF,KAAM,KAAMC,KAAM,SAAUC,GAAI,OAClC,CAAEF,KAAM,KAAMC,KAAM,SAAUC,GAAI,OAClC,CAAEF,KAAM,MAAOC,KAAM,UAAWC,GAAI,OACpC,CAAEF,KAAM,MAAOC,KAAM,UAAWC,GAAI,OACpC,CAAEF,KAAM,KAAMC,KAAM,QAASC,GAAI,OACjC,CAAEF,KAAM,KAAMC,KAAM,QAASC,GAAI,QACjC,CAAEF,KAAM,KAAMC,KAAM,QAASC,GAAI,QACjC,CAAEF,KAAM,MAAOC,KAAM,SAAUC,GAAI,QACnC,CAAEF,KAAM,MAAOC,KAAM,SAAUC,GAAI,SACnC,CAAEF,KAAM,MAAOC,KAAM,UAAWC,GAAI,YAKzBC,EAAS,CACpB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OAGWC,EAAK,CAChBC,GAAI,EACJL,KAAM,KACNM,OAAQ,GACRC,SAAU,IAGCC,EAAQ,CACnBzC,EAAG,GACHiC,KAAM,OACNS,MAAO,GACPC,WAAY,CACVC,UAAW,QACXC,KAAM,CAAEvC,MAAO,QAASqB,MAAO,IAEjCmB,KAAM,GACNC,WAAY,CAAEH,UAAW,QAASC,KAAM,CAAEvC,MAAO,QAASqB,MAAO,IACjEqB,IAAK,GACLC,KAAM,GACNnC,KAAM,cACNoC,UAAW,KAGAC,EAAY,CACvB,CACElB,KAAM,KACNK,GAAI,EACJC,OAAQ,GACRC,SAAU,GACVY,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,MAGjD,CACEuB,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNc,KAAM,CACJxE,KAAM,GACN4B,MAAO,IACPwB,KAAK,SACLX,MAAO,IACPgC,KAAM,OACNxC,KAAM,UACNyC,OAAQ,CACNlD,KAAM,EACNC,MAAO,QAET4C,UAAW,KAEbM,KAAM,CACJ3E,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPK,KAAM,UACNQ,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXmD,KAAM,CACJ5E,KAAM,GACNoD,KAAM,SACNnB,KAAM,UACNL,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,UAIbkC,SAAU,CACR,aAAc,CACZ3D,KAAM,GACNoD,KAAM,SACNsB,OAAQ,CACNjD,MAAO,WAETgB,MAAO,KACP4B,UAAW,IACXpC,KAAM,MACN4C,SAAUA,CAACC,EAAG9E,KACL,CACLyB,MAAOzB,EAAKoE,KAAKW,KAAI,CAACC,EAAGC,IACvBD,EAAIhF,EAAK6D,MAAMoB,GAAK,QAAU,YAMxCV,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,GAAK,IAC/CqD,OAAQ,IAAKzE,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,QAGlD,CACEuB,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNc,KAAM,CACJxE,KAAM,GACN4B,MAAO,IACPwB,KAAK,SACLX,MAAO,IACPgC,KAAM,OACNxC,KAAM,UACNyC,OAAQ,CACNlD,KAAM,EACNC,MAAO,SAGXkD,KAAM,CACJ3E,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPK,KAAM,UACNQ,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXmD,KAAM,CACJ5E,KAAM,GACNoD,KAAM,SACNnB,KAAM,UACNL,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGX0D,KAAM,CACJnF,KAAM,GACN4B,MAAO,IACPa,MAAO,IACPW,KAAM,SACNsB,OAAQ,CACNjD,MAAO,QAGX2D,KAAM,CACJpF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAGX4D,KAAM,CACJrF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAIbkC,SAAU,GACVY,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,MAGjD,CACEuB,KAAM,KACNK,GAAI,EACJC,OAAQ,CACN4B,gBAAiB,CACftF,KAAM,GACNoD,KAAM,eACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,OACPD,KAAM,IAERwC,KAAM,CACJlB,MAAO,IAGXyC,cAAe,CACbvF,KAAM,GACNoD,KAAM,eACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAETuC,KAAM,CACJlB,MAAO,IAGX0C,cAAe,CACbxF,KAAM,GACNoD,KAAM,eACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAETuC,KAAM,CACJlB,MAAO,IAGX2C,OAAQ,CACNzF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAETuC,KAAM,CACJlB,MAAO,KAIba,SAAU,CACR,MAAO,CACL3D,KAAM,GACNoD,KAAM,QACNnB,KAAM,MACNyC,OAAQ,CACNjD,MAAO,QAETgB,MAAO,MAET,MAAO,CACLzC,KAAM,GACNoD,KAAM,SACNnB,KAAM,MACNyC,OAAQ,CACNjD,MAAO,OAETgB,MAAO,OAGX8B,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,IAChDqD,OAAQ,IAAKzE,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,KACjD6D,OAAQ,IAAKjF,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,MAC9CD,MAAO,IAAKnB,EAAcmB,SAG9B,CACEwB,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNiC,KAAM,CACJ3F,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,oBAGXmE,KAAM,CACJ5F,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,oBAGXoE,KAAM,CACJ7F,KAAM,GACNoD,KAAM,UACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,oBAGXqE,KAAM,CACJ9F,KAAM,GACNoD,KAAM,UACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,mBAIb8C,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,GAAK,IAC/CqD,OAAQ,IACHzE,EAAcgC,MACjBZ,OAAQ,CAAC,GAAK,KACdkE,MAAO,EAAE,EAAG,GACZ/D,WAAW,GAEb0D,OAAQ,IAAKjF,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,KACjDmE,OAAQ,IAAKvF,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,MAC9CD,MAAO,IAAKnB,EAAcmB,QAE5B+B,SAAU,CACRsC,MAAO,CACLjG,KAAM,GACNoD,KAAM,YACNsB,OAAQ,CACNjD,MAAO,QAETG,MAAO,IACPa,MAAO,MAETyD,YAAa,CACXlG,KAAM,GACNoD,KAAM,cACNxB,MAAO,IACPa,MAAO,KACPiC,OAAQ,CACNjD,MAAO,UAGX0E,UAAW,CACTnG,KAAM,GACNoD,KAAM,YACNnB,KAAM,MACNL,MAAO,IACPa,MAAO,KACPoC,SAAWsB,IACF,CACL1E,MAAO0E,EAAUpB,KAAI,CAACC,EAAGC,IAAOD,EAAI,EAAI,QAAU,WAIxDoB,QAAS,CACPpG,KAAM,GACNoD,KAAM,SACNsB,OAAQ,CACNjD,MAAO,mBAETG,MAAO,IACPa,MAAO,MAGT4D,QAAS,CACPrG,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,KACPiC,OAAQ,CACNjD,MAAO,kBAGX6E,MAAO,CACLC,WAAY,GACZvG,KAAM,GACNyE,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJwC,KAAM,OACN1D,MAAO,EACPrB,MAAO,QAGXgF,MAAO,CACLzG,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,IAGX4D,MAAO,CACL1G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,IAGX6D,MAAO,CACL3G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,MAKf,CACEM,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNc,KAAM,CACJxE,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXkD,KAAM,CACJ3E,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,kBAGXmD,KAAM,CACJ5E,KAAM,GACNoD,KAAM,UACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,mBAGX0D,KAAM,CACJnF,KAAM,GACNoD,KAAM,UACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,WAIbkC,SAAU,CACRsC,MAAO,CACLjG,KAAM,GACNoD,KAAM,YACNsB,OAAQ,CACNjD,MAAO,QAETG,MAAO,IACPa,MAAO,MAETyD,YAAa,CACXlG,KAAM,GACNoD,KAAM,cACNxB,MAAO,IACPa,MAAO,KACPiC,OAAQ,CACNjD,MAAO,UAGX0E,UAAW,CACTnG,KAAM,GACNoD,KAAM,WACNnB,KAAM,MACNL,MAAO,IACPa,MAAO,KACPoC,SAAWsB,IACF,CACL1E,MAAO0E,EAAUpB,KAAI,CAACC,EAAGC,IAAOD,EAAI,EAAI,QAAU,WAIxDoB,QAAS,CACPpG,KAAM,GACNoD,KAAM,SACNsB,OAAQ,CACNjD,MAAO,mBAETG,MAAO,IACPa,MAAO,MAET4D,QAAS,CACPrG,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,KACPiC,OAAQ,CACNjD,MAAO,kBAGX6E,MAAO,CACLC,WAAY,GACZvG,KAAM,GACNyE,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJwC,KAAM,OACN1D,MAAO,EACPrB,MAAO,QAGXgF,MAAO,CACLF,WAAY,GACZvG,KAAM,GACNyE,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,IAGX4D,MAAO,CACL1G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,IAGX6D,MAAO,CACL3G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,KAIbyB,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,GAAK,IAC/CqD,OAAQ,IAAKzE,EAAcgC,MAAOZ,OAAQ,CAAC,GAAK,MAChD6D,OAAQ,IAAKjF,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,KACjDmE,OAAQ,IAAKvF,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,MAC9CD,MAAO,IAAKnB,EAAcmB,SAG9B,CACEwB,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNc,KAAM,CACJxE,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXkD,KAAM,CACJ3E,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXmD,KAAM,CACJ5E,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGX0D,KAAM,CACJnF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAGX2D,KAAM,CACJpF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,QAGX4D,KAAM,CACJrF,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAIb8C,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,IAChDqD,OAAQ,IAAKzE,EAAcgC,MAAOZ,OAAQ,CAAC,EAAG,KAC9CD,MAAO,IAAKnB,EAAcmB,QAE5B+B,SAAU,CACRiD,MAAO,CACL5G,KAAM,GACNiC,KAAM,MACNmB,KAAM,QACNyB,SAAW+B,IACF,CACLnF,MAAOmF,EAAM7B,KAAI,CAACC,EAAGC,IACnBD,EAAI,EAAI,kBAAoB,qBAIlCpD,MAAO,IACPa,MAAO,QAIb,CACEW,KAAM,KACNK,GAAI,EACJC,OAAQ,CACNc,KAAM,CACJxE,KAAM,GACNoD,KAAM,QACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,SAGXoF,IAAK,CACH7G,KAAM,GACNoD,KAAM,QACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,UAGXqF,IAAK,CACH9G,KAAM,GACNoD,KAAM,QACNxB,MAAO,IACPa,MAAO,IACPiC,OAAQ,CACNjD,MAAO,WAIbkC,SAAU,CACRoD,KAAM,CACJ/G,KAAM,GACNoD,KAAM,UACNsB,OAAQ,CACNjD,MAAO,QAETG,MAAO,IACPa,MAAO,MAET6D,MAAO,CACLC,WAAY,GACZvG,KAAM,GACNyE,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJwC,KAAM,UACN1D,MAAO,EACPrB,MAAO,UAGXgF,MAAO,CACLF,WAAY,GACZvG,KAAM,GACNyE,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,MACP+E,KAAM,OACN1D,MAAO,IAIXsD,QAAS,CACPpG,KAAM,GACNoD,KAAM,SACNsB,OAAQ,CACNjD,MAAO,mBAETG,MAAO,IACPa,MAAO,MAET4D,QAAS,CACPrG,KAAM,GACNoD,KAAM,SACNxB,MAAO,IACPa,MAAO,KACPiC,OAAQ,CACNjD,MAAO,kBAGXiF,MAAO,CACL1G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,OACP+E,KAAM,OACN1D,MAAO,IAGX6D,MAAO,CACL3G,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,OACP+E,KAAM,OACN1D,MAAO,IAGXkE,MAAO,CACLhH,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,OACP+E,KAAM,OACN1D,MAAO,IAGXmE,MAAO,CACLjH,KAAM,GACNuG,WAAY,GACZ9B,KAAM,QACN7C,MAAO,IACPX,YAAY,EACZwB,MAAO,KACPuB,KAAM,CACJvC,MAAO,OACP+E,KAAM,OACN1D,MAAO,KAIbyB,OAAQ,CACN9B,MAAO,IAAKhC,EAAcgC,MAAOZ,OAAQ,CAAC,IAAM,IAChDqD,OAAQ,IACHzE,EAAcgC,MACjBZ,OAAQ,CAAC,IAAM,IACfkE,MAAO,CAAC,GAAI,IACZ/D,WAAW,GAEb0D,OAAQ,IACHjF,EAAcgC,MACjBZ,OAAQ,CAAC,EAAG,MAEdD,MAAO,IAAKnB,EAAcmB,U,WCn2BhC,SAASsF,EAASC,GACd,OAAOA,EAAMC,QAAO,SAAUC,EAAGvG,GAC7B,OAAOwG,KAAKC,IAAIF,EAAGvG,MAIpB,MAAM0G,EAAwBA,CAACC,EAAczH,EAAM0H,IAC/C,IACCD,EACE,CACI,CACItG,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAO,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAM2H,YAAY5C,KAAI,CAACC,EAAGC,IACpBD,EACOhF,EAAKiE,KAAKgB,GADP,OAGnBhE,YAAY,EACZmC,KAAU,OAAJpD,QAAI,IAAJA,OAAI,EAAJA,EAAM2H,YAAY5C,KAAI,CAACC,EAAGC,IACvBD,EACO,gBAAkBhF,EAAKiE,KAAKyD,GADzB,OAGnBjD,KAAM,UACNC,OAAQ,CACJjD,MAAW,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM2H,YAAY5C,KAAI,CAACC,EAAGC,IACxBD,EAEGhF,EAAK4H,gBAAgB3C,GAAW,MAChCjF,EAAK6H,eAAe5C,GAAW,QAC/BjF,EAAK8H,oBAAoB7C,GAClB,QACPjF,EAAK+H,mBAAmB9C,GACjB,SACC,KARD,OAWnB+C,OAAQ,WAEZ3D,UAAW,SAGnB,MACFoD,EACE,CACI,CACItG,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAGpB,EAAKiI,WAAWlD,KAAI,CAACC,EAAGC,IAClBD,EACOhF,EAAKmE,IAAIc,GADN,OAGnBhE,YAAY,EACZmC,KAAM,eAAiBpD,EAAKmE,IAAIuD,GAChCjD,KAAM,UACNC,OAAQ,CACJjD,MAAW,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMiI,WAAWlD,KAAI,CAACC,EAAGC,IACvBD,EAEGhF,EAAK4H,gBAAgB3C,GAAW,MAChCjF,EAAK6H,eAAe5C,GAAW,QAC/BjF,EAAK8H,oBAAoB7C,GAClB,QACPjF,EAAK+H,mBAAmB9C,GACjB,SACC,KARD,OAWnB+C,OAAQ,WAEZ3D,UAAW,SAGnB,IAID6D,EAA4BA,CAAClI,EAAMiF,EAAGkD,KAAmB,IAADC,EACjE,OAAQ,OAAJpI,QAAI,IAAJA,GAAqB,QAAjBoI,EAAJpI,EAAOmI,UAAc,IAAAC,OAAjB,EAAJA,EAAwBnD,IACpBjF,EAAK4H,gBAAgB3C,GAAW,eAChCjF,EAAK6H,eAAe5C,GAAW,iBAC/BjF,EAAK8H,oBAAoB7C,GAAW,sBACpCjF,EAAK+H,mBAAmB9C,GAAW,qBAChC,KAEJ,MAGEoD,EAAkBA,CAACC,EAActI,EAAMqH,EAAGkB,KACnD,IAAIC,EAAgB,GAoFpB,OAnFwB,IAApBF,EAAa7E,KACb+E,EAAgB,CACZ,IACO5E,EACH3B,KAAMsG,EACNnF,KAAM,YACNa,KACIjE,EAAKyI,sBACLzI,EAAKyI,qBAAqBC,OACpB1I,EAAK2I,UACL3I,EAAK2I,SAAS5D,KAAI,CAAC6D,EAAIC,IACd7I,EAAKyI,qBAAqBI,GAEkB,IAA7C7I,EAAKyI,qBAAqBI,GAAQC,OAE3BF,EACJ,KALwCA,IAOnD5I,EAAK2I,SACfxE,IAAKnE,EAAKmE,IACVC,KAAMpE,EAAKoE,KACXP,MAAO7D,EAAK6D,MACZC,WAAY,CACRC,UAAW,MACXC,KAAM,CACFvC,MAAqB,SAAd8G,EAAuB,MAAQ,QACtCzF,MAAO,IAGfoB,WAAY,CACRH,UAAW,MACXC,KAAM,CACFvC,MAAqB,SAAd8G,EAAuB,MAAQ,QACtCzF,MAAO,IAGf3B,EAAGnB,EAAKmB,EACRwG,YAAa3H,EAAK2H,YAClBM,WAAYjI,EAAKiI,WACjBc,YAAa/I,EAAK+I,aAEtB,IACOnF,EACH3B,KAAMsG,EACNnF,KAAM,cACNa,KACIjE,EAAKyI,sBACLzI,EAAKyI,qBAAqBC,OACpB1I,EAAK2I,UACL3I,EAAK2I,SAAS5D,KAAI,CAAC6D,EAAIC,IACd7I,EAAKyI,qBAAqBI,GAG3B,IADA7I,EAAKyI,qBAAqBI,GAAQG,SAG3BJ,EACJ,KANwCA,IAQnD5I,EAAK2I,SACfxE,IAAKnE,EAAKmE,IACVC,KAAMpE,EAAKoE,KACXP,MAAO7D,EAAK6D,MACZC,WAAY,CACRC,UAAW,QACXC,KAAM,CACFvC,MAAqB,SAAd8G,EAAuB,QAAU,QACxCzF,MAAO,IAGfoB,WAAY,CACRH,UAAW,QACXC,KAAM,CACFvC,MAAqB,SAAd8G,EAAuB,QAAU,QACxCzF,MAAO,IAGf3B,EAAGnB,EAAKmB,EACRwG,YAAa3H,EAAK2H,YAClBM,WAAYjI,EAAKiI,WACjBc,YAAa/I,EAAK+I,eAIvBT,EAAa5E,QAAUuF,OAAOC,KAAKZ,EAAa5E,QAAQgF,OACzD,IACOF,KACAS,OAAOC,KAAKZ,EAAa5E,QAAQqB,KAAKoE,IAC9B,IACAb,EAAa5E,OAAOyF,GACvBhI,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAGkH,EAAa5E,OAAOyF,GAAKnJ,KAAK+E,KAAKC,GAC7BA,GAAU,OAGnB5B,KAAK,GAADlD,OAAKoI,EAAa5E,OAAOyF,GAAK/F,KAAI,KAAAlD,OAAIoI,EAAa5E,OAAOyF,GAAKnJ,KAAKqH,IACxEhD,UAAW,SAIvB,IAGG+E,EAAoBA,CAACd,EAActI,EAAM0H,IAC3CY,EAAa3E,UAAYsF,OAAOC,KAAKZ,EAAa3E,UAAU+E,OAC7D,IACOO,OAAOC,KAAKZ,EAAa3E,UAAUoB,KAAKoE,IAChC,IACAb,EAAa3E,SAASwF,GACzBhI,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAGkH,EAAa3E,SAASwF,GAAKnJ,KAAK+E,KAAKC,GAC/BA,GAAU,UAGfsD,EAAa3E,SAASwF,GAAKtE,SACzB,CACIH,OAAQ4D,EAAa3E,SAASwF,GAAKtE,SAC/ByD,EAAa3E,SAASwF,GAAKnJ,KAC3BA,IAGR,GACNoD,KAAK,GAADlD,OAAKoI,EAAa3E,SAASwF,GAAK/F,KAAI,KAAAlD,OAAIoI,EAAa3E,SAASwF,GAAKnJ,KAAK0H,IAC5ErD,UAAW,SAIvB,GAGGgF,EAAoBA,CAACC,EAAgBtJ,KAC9C,IAAIuJ,EACAD,GACAtJ,EAAK+I,YAAYS,eAAeC,GACrBR,OAAOS,OAAOD,GAAGE,SAAS,KAGzC,OAAOL,GAAkBC,GAAa,EAChC,CACI,CACItH,KAAM,OACN2H,KAAM,MACNC,GAAIN,EAAY,GAChBO,GAAI,EACJC,GAAIR,EAAY,GAChBS,KAAM,QACNC,GAAI,EACJjG,KAAM,CACFvC,MAAO,UACPqB,MAAO,KAEXuB,UAAW,IACXN,UAAW,UACXnB,QAAS,KAGjB,IAGGsH,EAAoBA,CAACC,EAAoBnK,IAC3CmK,EACDnK,EAAKmB,EACAiJ,MAAM,EAAGpK,EAAKmB,EAAEuH,ODxLJ,ICyLZ3D,KAAI,CAACsF,EAASd,KACX,IACIe,EADQ,IAAIC,KAAKF,GACHG,UACdC,EAAQ,IAAIF,KAAKvK,EAAKmB,EAAEoI,EAAY,IAAIiB,UACxCE,EAAQ,IAAIH,KAAKvK,EAAKmB,EAAEoI,EAAY,IAAIiB,UAE5C,OACc,IAAVF,GACW,IAAVA,GAAyB,IAAVG,GACL,IAAVH,GAAyB,IAAVI,GAAyB,IAAVD,EAExB,CACHxI,KAAM,OACN2H,KAAM,MACNC,GAAIc,OAAON,GACXP,GAAI,EACJC,GAAIY,OAAON,GACXL,KAAM,QACNC,GAAI,EACJjG,KAAM,CACFvC,MAAO,OACPqB,MAAO,IACP0D,KAAM,OAEVnC,UAAW,KAGZ,QAEf,GAwaH,MA0CMuG,EAA6BA,CACtC7B,EACArB,EACAmD,EACA7K,KAEA,IAAIkJ,EACAH,GACAA,EAAYL,QACZO,OAAOC,KAAKH,EAAY,IAAI+B,QAAQrB,IACxB,CACJ,UACA,kBACA,wBACA,iBACFsB,MAAMlK,GAAMA,IAAM4I,MAExBuB,EAAU,GAed,OAdAjC,EAAYL,QACRuC,MAAMC,QAAQhC,IACdA,EAAKiC,SAAQ,CAAChC,EAAKlE,KAAO,IAADmG,EAAAC,EAAAC,GAEjBC,EAAYV,IACK,OAAX9B,QAAW,IAAXA,GAAyB,QAAdqC,EAAXrC,EAAcrB,UAAW,IAAA0D,OAAd,EAAXA,EAAyC,eAC9B,OAAXrC,QAAW,IAAXA,GAAyB,QAAdsC,EAAXtC,EAAcrB,UAAW,IAAA2D,OAAd,EAAXA,EAA4BlC,KACpB,gBAARA,EACW,OAAXJ,QAAW,IAAXA,GAAyB,QAAduC,EAAXvC,EAAcrB,UAAW,IAAA4D,OAAd,EAAXA,EAA4BnC,MAE9B6B,EAAQtC,OAAS,IAAGsC,GAAW,MACnCA,GAAW7B,OAIlBoC,EAAYV,IAAYG,EAAO,GAAA9K,OAAM2K,EAAO,OAAQ,IACrDG,GACa,yBAAZH,GAAsCG,EACjChL,EAAK6D,MAAM6D,GAAc1H,EAAKoE,KAAKsD,GAC/B,aACA,aACJ,KAID6D,EAAeV,GACL,CACf,UACA,QACA,UACA,SACA,eACA,aACA,YACA,cACA,cACA,cACA,aACA,cAGclB,SAASkB,GC5yBlBW,EAAkBA,CAACxL,EAAMyL,EAAiBnC,KAAoB,IAADoC,EAAAC,EAAAC,EACtE,GAAwB,yBAApBH,EACA,MAAO,GAEX,IAAII,EAAW7L,EAAK+I,YACpB,GACwB,0BAApB0C,GACAF,EAAYE,IACQ,0BAApBA,GACAnC,EACF,CAAC,IAADwC,EACED,EAAW7L,EAAK+I,aAAe/I,EAAK+I,YAAY,GAChD,IAAIG,GACI,OAAJlJ,QAAI,IAAJA,OAAI,EAAJA,EAAM+L,qBAC4B,QADXD,EACtBD,GAAY5C,OAAOC,KAAK2C,UAAS,IAAAC,OAAA,EAAlCA,EAAqChB,QAAQrB,IACjC,CACJ,UACA,kBACA,wBACA,iBACFsB,MAAMlK,GAAMA,IAAM4I,OAE5BoC,EAAW7L,EAAK+I,YAAYhE,KAAKC,IAC7B,IAAIgH,EAAM,EACV,GAAIf,MAAMC,QAAQhC,GACd,IAAK,IAAIC,KAAOD,EACZ,GAAIlE,EAAEmE,GAAM,CACR6C,EAAMT,EAAYE,GACX,OAADzG,QAAC,IAADA,OAAC,EAADA,EAAiB,YACjB,EACN,MAIZ,OAAOgH,KAGf,OAAe,QAARN,EAAAG,SAAQ,IAAAH,OAAA,EAARA,EAAUhD,QACX,CACI,CACIvH,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAW,QAAVuK,EAAEE,SAAQ,IAAAF,OAAA,EAARA,EAAU5G,KAAI,CAACC,EAAGC,KACjB,IAAIgH,GAAWjM,EAAKkM,IAAMlM,EAAKuH,KAAO,IAAO,IAC7C,OAAIvC,EACIhF,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,GACnBkH,OAAOnM,EAAKmE,IAAIc,IAAMgH,EAEtBE,OAAOnM,EAAKiE,KAAKgB,IAAMgH,EAG/B,QAEXhL,YAAY,EACZwD,KAAM,UACNC,OAAQ,CACJjD,MAAe,QAAVmK,EAAEC,SAAQ,IAAAD,OAAA,EAARA,EAAU7G,KAAI,CAACC,EAAGC,IACjBD,EACwB,0BAApByG,GAGAzL,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,GAFnB,MAKJ,QAEJ,OAEX+C,OAAQ6D,EAAS9G,KAAI,CAACC,EAAGC,IACjBD,EACwB,0BAApByG,EACO,IAEPzL,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,GACnB,gBAEJ,cAEJ,OAEXzD,KAAM,GAEV6C,UAAW,SAGnB,IAGG+H,EAAsBA,CAACpM,EAAMsJ,KAAoB,IAAD+C,EAAAC,EAAAC,EAAAC,EAAAC,EACzD,IAAIZ,EAAW7L,EAAK0M,eAEpB,GAAIpD,EAAgB,CAAC,IAADqD,EAChB,IAAIzD,EACAlJ,EAAK+L,oBAC6B,QADZY,EACrBd,GAAY5C,OAAOC,KAAK2C,UAAS,IAAAc,OAAA,EAAlCA,EAAqC7B,QAAQrB,IACjC,CACJ,UACA,kBACA,wBACA,iBACFsB,MAAMlK,GAAMA,IAAM4I,OAE5BoC,EAAW7L,EAAK0M,eAAe3H,KAAKC,IAChC,IAAIgH,EAAM,KACV,GAAIf,MAAMC,QAAQhC,GACd,IAAK,IAAIC,KAAOD,EAAM,CAAC,IAAD0D,EAClB,GAAU,QAAVA,EAAI5H,EAAEmE,UAAI,IAAAyD,OAAA,EAANA,EAAQC,QAAS,CACjBb,EAAMhH,EAAEmE,GACR,OAIZ,OAAO6C,KAIf,OAAe,QAARK,EAAAR,SAAQ,IAAAQ,OAAA,EAARA,EAAU3D,QACX,CACI,CACIvH,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAW,QAAVkL,EAAET,SAAQ,IAAAS,OAAA,EAARA,EAAUvH,KAAI,CAACC,EAAGC,KACZ,OAADD,QAAC,IAADA,OAAC,EAADA,EAAG6H,SACIV,OAAOnH,EAAE8H,eAEb,OAEX7L,YAAY,EACZwD,KAAM,UACNC,OAAQ,CACJjD,MAAe,QAAV8K,EAAEV,SAAQ,IAAAU,OAAA,EAARA,EAAUxH,KAAI,CAACC,EAAGC,KAChB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAG6H,SACI,MAEJ,OAEX7E,OAAQ6D,EAAS9G,KAAI,CAACC,EAAGC,KAChB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAG6H,SACI,IAEJ,OAEXrL,KAAM,GAEV6C,UAAW,QAEf,CACIlD,EAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,EACTC,EAAW,QAAVoL,EAAEX,SAAQ,IAAAW,OAAA,EAARA,EAAUzH,KAAI,CAACC,EAAGC,KACjB,IAAIgH,GAAWjM,EAAKkM,IAAMlM,EAAKuH,KAAO,IAAO,IAC7C,OAAK,OAADvC,QAAC,IAADA,OAAC,EAADA,EAAG+H,iBACC/M,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,IAClB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGgI,uBAAwBf,EAE3BjH,EAAEgI,sBAAwBf,EAGlC,QAEXhL,YAAY,EACZwD,KAAM,UACNC,OAAQ,CACJjD,MAAe,QAAVgL,EAAEZ,SAAQ,IAAAY,OAAA,EAARA,EAAU1H,KAAI,CAACC,EAAGC,KAChB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAG+H,iBACC/M,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,GACnB,MAEJ,QAEJ,OAEX+C,OAAQ6D,EAAS9G,KAAI,CAACC,EAAGC,KAChB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAG+H,iBACC/M,EAAK6D,MAAMoB,GAAKjF,EAAKoE,KAAKa,GACnB,gBAEJ,cAEJ,OAEXzD,KAAM,GAEV6C,UAAW,SAGnB,I,sCCjLV,MAAM4I,EAAOC,IAAsBC,GAEtBC,EAAQtB,IAgBd,IAADuB,EAAA,IAhBgB,KACpBrN,EAAI,OACJuE,EAAM,UACND,EAAS,OACTgJ,EAAM,eACNC,EAAc,QACdC,EAAO,UACPC,EAAS,QACTC,EAAO,mBACPvD,EAAkB,cAClBwD,EAAa,GACblK,EAAE,UACFmK,EAAS,eACTC,EAAc,aACdC,EAAY,iBACZC,GACDjC,EAE6C,QAD5CuB,EAAAW,SACGC,cAAc,mCAA2B,IAAAZ,GAD5CA,EAEIa,iBAAiB,WAAW,SAAUC,OAC1C,IAAKC,EAAgBC,GAAsBC,mBAAS,IAcpD,OAbAC,qBAAU,KACR,IAAIC,EAAO,IACG,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgB7E,SACd6E,EAAepC,SAASsD,IAAS,IAADC,EAAAC,EAC9BH,EAAKI,KAAKH,IACP,OAAHA,QAAG,IAAHA,GAAc,QAAXC,EAAHD,EAAKnK,iBAAS,IAAAoK,OAAX,EAAHA,EAAgBhG,UACD,QADOiG,EACpBF,EAAInK,iBAAS,IAAAqK,GAAbA,EAAexD,SAAStK,IACtB2N,EAAKI,KAAK/N,UAGlBwN,EAAmBG,KAClB,CAACjB,IAEAD,EACKuB,cAAA,OAAKC,UAAU,eAAcC,SAAC,eAGnCF,cAAC5B,EAAI,CACHxJ,GAAIA,EACJiK,QAASA,EACTC,cAAeA,EACfH,QAASA,EACTC,UAAWA,EACXzN,KAAM,CAACA,KAAUsE,GAAa,MAAQ8J,GACtC7J,OAAQ,IACHA,EACHyK,OAAQ,IACH9E,EAAkBC,EAAoBnK,MACrC+N,EAAiBrF,OAAS,EAC1BW,EAAkBrJ,EAAKsJ,eAAgBtJ,GACvC,KAGRiP,OAAQ,CACNC,YAAY,GAEdC,kBAAkB,EAClBC,WAAaC,IACPA,EAAE,oBACJzB,EAAU,IACLrJ,EACH3C,MAAO,IACF2C,EAAO3C,MACVI,WAAW,EACX+D,MAAO,CAAC/F,EAAKmB,EAAEuH,OAAS,IAAK1I,EAAKmB,EAAEuH,OAAS,IAE/C5F,MAAOC,OAAOC,WAAa6K,EAAiBC,EAC5CkB,OAAQ,IACH9E,EAAkBC,EAAoBnK,MACtCqJ,EAAkBrJ,EAAKsJ,eAAgBtJ,UCjC3CsP,MA7CGxD,IAMX,IANY,cACjByD,EACAC,MAAM,KAAEvL,EAAI,IAAEE,EAAG,KAAEC,EAAI,MAAEP,EAAK,WAAEoE,EAAU,YAAEN,GAAa,gBACzD8D,EAAe,aACfgE,EAAY,eACZ/C,GACDZ,EACC,OACE4D,eAAA,OAAKC,MAAO,CAAEC,WAAY,OAAQC,SAAU,QAASd,SAAA,CAClDQ,GACCG,eAAA,OAAAX,SAAA,CACGQ,EAAcnM,KAAK,MAAImM,EAAcO,aAAe,cACpD,MACAP,EAAcQ,QAAQrH,QACrBiC,OAAO4E,EAAcQ,QAAQ,IAAIC,cAClC,MACAP,EAAapM,QAGlBqM,eAAA,OAAAX,SAAA,CAAK,SACI3K,EAAK,UAAQH,EAAK,SAAOE,EAAI,WAASN,KAE9C4H,GAAmBiB,EAClBgD,eAAA,OAAAX,SAAA,CAAK,YAAUtD,KAEfoD,cAAAoB,WAAA,IAEDhI,EACCyH,eAAA,OAAAX,SAAA,CAAK,gBACW9G,EAAW,MAAI9D,KAG/B0K,cAAAoB,WAAA,IAEDtI,EACC+H,eAAA,OAAAX,SAAA,CAAK,iBACYpH,EAAY,MAAI1D,KAGjC4K,cAAAoB,WAAA,QCzBD,SAASC,EAAYpE,GA0BxB,IAADqE,EAAAC,EAAAC,EAAA,IA1B0B,QACzB7C,EAAO,UACPC,EAAS,QACTC,EAAO,WACPhG,EAAU,UACVa,EAAS,MACToH,EAAK,OACLpL,EAAM,mBACN4F,EAAkB,aAClB1C,EAAY,aACZa,EAAY,gBACZmD,EAAe,KACfxJ,EAAI,cACJ0L,EAAa,cACb4B,EAAa,aACbE,EAAY,iBACZa,EAAgB,GAChB7M,EAAE,UACFmK,EAAS,iBACTG,EAAgB,gBAChBwC,EAAe,aACfzC,EAAY,eACZD,EAAc,YACd2C,EAAW,kBACXC,EAAiB,eACjBnH,GACHwC,EACG,MAAO9L,EAAM0Q,GAAgBpC,mBAAS,IAAK1K,KACpC+M,EAAqBC,GACxBtC,mBAAShG,GAEbiG,qBAAU,KACNqC,EAAuBtI,KACxB,CAACA,IAEJ,MAAOgF,EAAQuD,GAAavC,oBAAS,GAC/BwC,EAAeC,mBAEfC,EJ8OH,SACHV,EACAO,EACAtM,EACA0M,EACAP,EACA9C,EACArF,EACAgI,EACAzC,EACA0C,EACAzC,EACA0C,EACAnH,GAEA,OAAOzJ,MACHqR,EACAC,EACAC,EACAvG,EACAwG,EACArR,KACE,IAADqN,EAAAiE,EAAAC,EAAAC,EAAAC,EACiD,QAAlDpE,EAAAW,SAASC,cAAc,mCAA2B,IAAAZ,GAAlDA,EAAoDqE,QACpD,IAAIC,EAAmC,OAAhB5D,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBrF,OAEzC,GAAIiJ,EAAkB,CAClB,IAAIC,EAAe7D,EAAiB4D,EAAmB,GACvDd,GAAU,GACV,IAAIgB,QAAapS,IAAMe,IAAI,4CAADN,OACsBoQ,EAAgB,cAAApQ,OAAaiR,EAAK/N,KAAI,mBAAAlD,OAAkB0R,IAExGf,GAAU,GAEVJ,EACI,IACO,IAAIqB,IACH,IACOxI,EACH,CAAEtJ,KAAM6R,EAAK7R,KAAKA,KAAMoD,KAAMwO,IAChC7M,KAAKgN,GAAS,CAACA,EAAW,KAAGA,MACjCrI,UACJoB,QAAQrB,GAAMsE,EAAiBpE,SAASF,EAAErG,cAGhDqN,EACInH,EAAewB,QAAQrB,GACZsE,EAAiBhD,MAAMiH,GAAOA,IAAOvI,EAAErG,UAK1D,IAAKkN,KAA0B,OAALY,QAAK,IAALA,OAAK,EAALA,EAAO9N,QAAa,OAAL8N,QAAK,IAALA,OAAK,EAALA,EAAOe,gBAC5C,OAEJpB,GAAU,GAEV,IAAIqB,EACAP,EAAmB,EAAC,+CAAAzR,OAGVsQ,GAAe,GAAE,cAAAtQ,OACRoQ,EAAgB,YAAApQ,OAAqB,QAArBoR,EAAWJ,EAAM9N,YAAI,IAAAkO,OAAA,EAAVA,EAAYa,cAAa,YAAAjS,QACxD,OAALgR,QAAK,IAALA,OAAK,EAALA,EAAOe,kBACD,OAALf,QAAK,IAALA,GAAc,QAATK,EAALL,EAAOnB,eAAO,IAAAwB,OAAT,EAALA,EAAgB7I,SAAUwI,EAAMnB,QAAQ,GAAG,cAAA7P,OACnCiR,EAAK/N,MAExBuO,GAAoB,IAChBP,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU3N,IAAK,IAC3ByO,GAAS,aAAAhS,OAAgBkR,EAAS3N,MAE3B,OAAPoH,QAAO,IAAPA,OAAO,EAAPA,EAASnC,UACTwJ,GAAS,YAAAhS,OAAe2K,IAExBwG,IACAa,GAAS,kBAAAhS,OAAqBmR,WAIhCzR,EAAasS,EAAKP,EAAmB,OAAS,KAAM,CACtDS,WAAY9B,EACZ+B,SAAUlB,EAAK/N,KACf4E,OAAkB,QAAZwJ,EAAEN,EAAM9N,YAAI,IAAAoO,OAAA,EAAVA,EAAYW,cACpBG,WAAYvE,EACZwE,QACS,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAOe,kBACD,OAALf,QAAK,IAALA,GAAc,QAATO,EAALP,EAAOnB,eAAO,IAAA0B,OAAT,EAALA,EAAgB/I,SAAUwI,EAAMnB,QAAQ,KAE5C5P,MAAMqS,IAAS,IAADC,EAAAC,EACX7B,GAAU,GACV,IAAI9E,EAA4B,QAAX0G,EAAGD,EAAIxS,YAAI,IAAAyS,OAAA,EAARA,EAAUE,cAC9BC,EAAe,IAAO,OAAHJ,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAKxS,YAAI,IAAA0S,OAAN,EAAHA,EAAW1S,MAE9BiE,EAAO,GACPE,EAAM,GACNC,EAAO,GACPP,EAAQ,GACR1C,EAAI,GACJ4H,EAAc,GACd2D,EAAiB,GAEjBjE,EAAuB,GACvBd,EAAc,GACdM,EAAa,GACbJ,EAAiB,GACjBD,EAAkB,GAClBE,EAAsB,GACtBC,EAAqB,GAErB8K,EAAazB,GAAYA,EAAS1N,OAClCoP,EAAYD,EAEhB5J,OAAOC,KAAK2J,GAAYnK,QACpBO,OAAOC,KAAK2J,GAAY1H,SAAShC,IAC7B2J,EAAU3J,GAAKnJ,KAAO,MAG9B,IAAI+S,EAAe3B,GAAYA,EAASzN,SACpCqP,EAAcD,EAElB9J,OAAOC,KAAK6J,GAAcrK,QACtBO,OAAOC,KAAK6J,GAAc5H,SAAShC,IAC/B6J,EAAY7J,GAAKnJ,KAAO,MAGpB,OAAZ4S,QAAY,IAAZA,KAAczH,SAAQ,CAAC8H,EAAIC,KAAS,IAADC,EAAAC,EAAAC,EAC/B,IAAIrO,EAAIiO,EAgBR,GAfAhP,EAAK2K,KAAK5J,EAAEf,MACZE,EAAIyK,KAAK5J,EAAEb,KACXC,EAAKwK,KAAK5J,EAAEZ,MACZP,EAAM+K,KAAK5J,EAAEnB,OACb1C,EAAEyN,KAAK,IAAIrE,KAAKvF,EAAEsO,MAAMC,eAEpBlC,IACA1J,EAAYiH,KAAK5J,EAAE,mBAAmB,iBACtCiD,EAAW2G,KAAK5J,EAAE,mBAAmB,gBACrC8C,EAAoB8G,KAAK5J,EAAuB,qBAChD4C,EAAgBgH,KAAK5J,EAAmB,iBACxC6C,EAAe+G,KAAK5J,EAAkB,gBACtC+C,EAAmB6G,KAAK5J,EAAsB,0BAIjBwO,KAAlB,QAAVL,EAAAnO,EAAE6F,UAAQ,IAAAsI,OAAA,EAAVA,EAAYM,mBACqBD,KAApB,QAAVJ,EAAApO,EAAE6F,UAAQ,IAAAuI,OAAA,EAAVA,EAAYtG,qBACQ0G,KAAd,QAAVH,EAAArO,EAAE6F,UAAQ,IAAAwI,OAAA,EAAVA,EAAYxG,UACA,0BAAZhC,OAyBsB2I,IAAfxO,EAAE6F,IACT9B,EAAY6F,KAAK5J,EAAE6F,QAzBrB,CAAC,IAAD6I,EAAAC,EAAAC,EAAAC,EAAAC,EACE,IAAIC,EAAa,CACblH,QAAmB,QAAZ6G,EAAE1O,EAAE6F,UAAQ,IAAA6I,OAAA,EAAVA,EAAY7G,QACrBC,cAAyB,QAAZ6G,EAAE3O,EAAE6F,UAAQ,IAAA8I,OAAA,EAAVA,EAAY7G,cAC3BkH,kBAA6B,QAAZJ,EAAE5O,EAAE6F,UAAQ,IAAA+I,OAAA,EAAVA,EAAYI,kBAC/BC,kBAA6B,QAAZJ,EAAE7O,EAAE6F,UAAQ,IAAAgJ,OAAA,EAAVA,EAAYI,mBAED,IAADC,EAAAC,EAa1BC,GAbO,QAAdN,EAAI9O,EAAE6F,UAAQ,IAAAiJ,OAAA,EAAVA,EAAY/G,mBACZgH,EAAa,IACNA,EACHhH,gBAA2B,QAAZmH,EAAElP,EAAE6F,UAAQ,IAAAqJ,OAAA,EAAVA,EAAYnH,gBAC7BC,sBACc,QADOmH,EACjBnP,EAAE6F,UAAQ,IAAAsJ,OAAA,EAAVA,EAAYnH,wBAIR,yBAAZnC,GACAU,EAAYV,GAEZ9B,EAAY6F,KAAK5J,EAAE6F,IAEnB9B,EAAY6F,KAAe,QAAXwF,EAACpP,EAAE6F,UAAQ,IAAAuJ,OAAA,EAAVA,EAAYX,aAEjC/G,EAAekC,KAAKmF,GAKxB,GAAIhG,EAAiBrF,OAAQ,CACzB,IAAI2L,EAAe,GACfC,EAAe,GACnBvI,EAAkBZ,SAASoJ,IAAa,IAADC,EAAAC,EAAAC,EAKjCC,EAAAC,EAAAC,EAAAC,EAAAC,OAH+BvB,KAAlB,QAAVgB,EAAAxP,EAAEuP,UAAQ,IAAAC,OAAA,EAAVA,EAAYf,mBACqBD,KAApB,QAAViB,EAAAzP,EAAEuP,UAAQ,IAAAE,OAAA,EAAVA,EAAY3H,qBACQ0G,KAAd,QAAVkB,EAAA1P,EAAEuP,UAAQ,IAAAG,OAAA,EAAVA,EAAY7H,WAEZyH,EAAaC,GAAW,CACpB1H,QAAmB,QAAZ8H,EAAE3P,EAAEuP,UAAQ,IAAAI,OAAA,EAAVA,EAAY9H,QACrBC,cAAyB,QAAZ8H,EAAE5P,EAAEuP,UAAQ,IAAAK,OAAA,EAAVA,EAAY9H,cAC3BkH,kBACc,QADGa,EACb7P,EAAEuP,UAAQ,IAAAM,OAAA,EAAVA,EAAYb,kBAChBC,kBACc,QADGa,EACb9P,EAAEuP,UAAQ,IAAAO,OAAA,EAAVA,EAAYb,mBAEpBI,EAAaE,GAAqB,QAAbQ,EAAG/P,EAAEuP,UAAQ,IAAAQ,OAAA,EAAVA,EAAYtB,gBAG5C1K,EAAY6F,KAAK,IACVyF,IAGP3H,EAAekC,KAAK,IACb0F,IA0BiB,IAADU,EArBvB5D,IACAyB,GACI5J,OAAOC,KAAK2J,GAAYnK,QACxBO,OAAOC,KAAK2J,GAAY1H,SAAShC,IAC7B2J,EAAU3J,GAAKnJ,KAAO,IACf8S,EAAU3J,GAAKnJ,KAClBgF,EAAEiQ,WAAW9L,OAIzB4J,GACI9J,OAAOC,KAAK6J,GAAcrK,QAC1BO,OAAOC,KAAK6J,GAAc5H,SAAShC,IAC/B6J,EAAY7J,GAAKnJ,KAAO,IACjBgT,EAAY7J,GAAKnJ,KACpBgT,EAAY7J,GAAK5C,WACXyM,EAAY7J,GAAK5C,WACjBvB,EAAEiQ,WAAW9L,OAIX,IAAhBiI,EAAS3N,IACTgF,EAAqBmG,KACL,QADSoG,EACrBhQ,EAAEiQ,kBAAU,IAAAD,OAAA,EAAZA,EAAcvM,0BAK9B,IAAIyM,EAAa,IAAK3Q,KAAW6M,EAAS7M,QAC1C,IAAK,IAAIU,EAAI,EAAGA,EDncL,GCmcsBA,IAC7BhB,EAAK2K,KAAK,MACVzK,EAAIyK,KAAK,MACTxK,EAAKwK,KAAK,MACV/K,EAAM+K,KAAK,MACXzN,EAAEyN,KACE,IAAIrE,KACAA,KAAK4K,IAAIhU,EAAEA,EAAEuH,OAAS,KAAOzD,EAAI,GAAKkM,EAAK7N,IAC7CiQ,eAEFnC,IACAyB,GACI5J,OAAOC,KAAK2J,GAAY1H,SAAShC,IAC7B2J,EAAU3J,GAAKnJ,KAAO,IACf8S,EAAU3J,GAAKnJ,KAClB,SAIZ+S,GACI9J,OAAOC,KAAK6J,GAAc5H,SAAShC,IAC/B6J,EAAY7J,GAAKnJ,KAAO,IACjBgT,EAAY7J,GAAKnJ,KACpB,UAhiBpC,IAAkBmH,EAsiBEiK,GACAH,EAAgB,IACTG,EACH1N,OAAQoP,EACRnP,SAAUqP,IAIlBtC,EAAa,IACN9M,EACH+E,SAAU1E,EACVA,KAAMwE,EAAqBC,OACrBzE,EAAKc,KAAI,CAAC6D,EAAIC,IACLJ,EAAqBI,GAEkB,IAAxCJ,EAAqBI,GAAQC,QACa,IAA1CL,EAAqBI,GAAQG,SAEtBJ,EACJ,KANmCA,IAQ9C3E,EACNE,MACAC,OACAP,QACA1C,IACAiU,UAAWnR,EACXC,WACoB,IAAhBkN,EAAS3N,GACH,CACIM,UAAW,OACXC,KAAM,CACFvC,MACkB,SAAd8G,EACM,OACA,QACVzF,MAAO,IAGfc,EAAMM,WAChBJ,WACoB,IAAhBsN,EAAS3N,GACH,CACIM,UAAW,OACXC,KAAM,CACFvC,MACkB,SAAd8G,EACM,OACA,QACVzF,MAAO,IAGfc,EAAME,WAChB6D,cACAM,aACAc,cACA2D,iBACAX,kBACIgC,EAAiBrF,OAAS,EACpB,KACY,OAAJ1I,QAAI,IAAJA,OAAI,EAAJA,EAAM+L,oBAAqB,MAC3BA,GAAqB,IAE7B,KACVzC,iBAAgByE,EAAiBrF,OACjCD,uBACAyD,KAxmBF/E,EAwmBgBlD,EAvmBvBkD,EAAMC,QAAO,SAAUC,EAAGvG,GAC7B,OAAOwG,KAAK4E,IAAI7E,EAAGvG,OAumBPyG,IAAKL,EAAS/C,EAAI2G,QAAQrB,GAAY,IAANA,GAAiB,OAANA,KAC3C3B,sBACAF,kBACAC,iBACAE,uBAEJ6F,EAAU,IACHsH,EACHpS,MAAOyN,GACAxN,OAAOC,WAAa8K,GAAgB,EACrC/K,OAAOC,WAAa8K,EAC1BuH,aAAc9E,EACdtN,OAAQF,OAAOG,YAAc,GAC7BtB,MAAO,IACA2C,EAAO3C,MACVE,YAAa,CACTC,SAAS,GAEbC,WAAW,EACX+D,MAAO,CAAC5E,EAAEuH,OAAS,IAAKvH,EAAEuH,OAAS,GACnC4M,SAAU,IACHnU,EAAE2J,QAAO,CAACrB,EAAGxE,IACLA,EAAI,KAAO,KAG1BsQ,SAAU,IACHpU,EACE2J,QAAO,CAACrB,EAAGxE,IACDA,EAAI,KAAO,IAErBF,KAAKC,IACF,IAAIwQ,EAAI,IAAIjL,KAAKvF,GACjB,OACIzB,EAAOiS,EAAEC,YACT,IACAD,EAAEE,sBAKtB1G,OAAQ,IACD/K,EAAKc,KAAI,CAAC4Q,EAAK1Q,KACd,GAAI8D,EAAY9D,GAAI,CAChB,IAAI2Q,EAAOtO,KAAKC,IACRpD,EAAIc,GAAIhB,EAAKgB,GAAIb,EAAKa,GAAIpB,EAAMoB,IAEpC4Q,EAAQvO,KAAK4E,IACT/H,EAAIc,GAAIhB,EAAKgB,GAAIb,EAAKa,GAAIpB,EAAMoB,IAQxC,MAAO,CACHhD,KAAM,OACN6T,KAAM,IACN9L,KAAM,IACNH,GAVKc,OACL,IAAIJ,KAAKpJ,EAAE8D,EAAI,IAAIsO,eAUnBzJ,GAAI8L,EACJ7L,GATKY,OACL,IAAIJ,KAAKpJ,EAAE8D,EAAI,IAAIsO,eASnBzQ,MAAO,EACPmH,GAAI4L,EACJ9R,UAAW,SACXnB,QAAS,GACTmT,YAAa,EACb/R,KAAM,CACFlB,MAAO,EACPrB,MACI2C,EAAKa,GAAKpB,EAAMoB,GACV,QACA,MACVrC,QAAS,GAEbyB,UAAW,KAGnB,OAAO,cAKtBjE,OAAO4V,IACJ1V,QAAQC,IAAI,MAAOyV,GACnBnF,GAAU,GACVH,EAAa,UI9oBFuF,CACnB3F,EACAO,EACAtM,EACAqM,EACAF,EACA9C,EACArF,EACAgI,EACAzC,EACA0C,EACAzC,EACA0C,EACAnH,GAiCJ,OA9BAiF,qBAAU,KACN,IAAI2H,GAAsB,EACtB3G,IAAkBuB,EAAaqF,UAC/BD,GAAsB,GAE1BpF,EAAaqF,QAAU5G,EAEvBE,GACIuB,EACIzB,EACAE,EACAkB,EACAlF,EACAhE,EACAzH,EACAkW,KAGT,CACC3G,EACAE,EACAa,EACA7E,EACAhE,EACAkJ,EAAoBlN,GACpB8E,EACAgI,EACAxC,IAGG/N,IAAY,OAAJA,QAAI,IAAJA,GAAO,QAAHmQ,EAAJnQ,EAAMmB,SAAC,IAAAgP,OAAH,EAAJA,EAASzH,QACpBgH,eAAAO,WAAA,CAAAlB,SAAA,CACIF,cAACS,EAAS,CACNC,cAAeA,EACfC,KAAM,CACFvL,KAAMjE,EAAKiE,KAAKyD,GAChBvD,IAAKnE,EAAKmE,IAAIuD,GACdtD,KAAMpE,EAAKoE,KAAKsD,GAChB7D,MAAO7D,EAAK6D,MAAM6D,GAClBC,YAAaO,EACTlI,EACA0H,EACA,eAEJO,WAAYC,EACRlI,EACA0H,EACA,eAGR+D,iBACKzL,EAAK+I,YAAYrB,GACQ,0BAApB+D,GACoB,yBAApBA,GACAF,EAAYE,IACQ,0BAApBA,GACAzL,EAAKsJ,eACDsB,EACI5K,EAAK+I,YACLrB,EACA+D,EACAzL,GAEJyL,OACJ+H,MACD,OAAJxT,QAAI,IAAJA,GAAgC,QAA5BoQ,EAAJpQ,EAAM0M,eAAehF,UAAW,IAAA0I,OAA5B,EAAJA,EAAkCrD,iBAC7BtB,OACA+H,GAEV9G,eACQ,OAAJ1M,QAAI,IAAJA,GAAgC,QAA5BqQ,EAAJrQ,EAAM0M,eAAehF,UAAW,IAAA2I,OAA5B,EAAJA,EAAkCtD,gBAEtC0C,aAAcA,EACd/H,WAAYA,EACZ1H,KAAMA,IAEV6O,cAACzB,EAAK,CACF3J,GAAIA,EACJ+J,QAASA,EACTC,UAAWA,EACXC,QAASA,EACTC,cAAeA,IAAMA,EAAc1L,GACnC0N,MAAO,IAAKA,EAAOyG,OAAQ,iBAC3BpW,KAAM,IAAKA,EAAMiC,KAAMsG,GACvBhE,OAAQA,EACR4F,mBAAoBA,EACpB7F,UAAW,IACJ+D,EACCsI,EACA3Q,EACA0H,EACAa,MAEDf,EAAsBC,EAAczH,EAAM0H,MACzC8D,EACAxL,EACAyL,EACAzL,EAAKsJ,iBACJ,MACD8C,EAAoBpM,EAAMA,EAAKsJ,iBAAmB,IAE1DiE,eAAgB,IACTnE,EACCuH,EACA3Q,EACA0H,IAIR4F,OAAQA,EACRM,UAAWA,EACXC,eAAgBA,EAChBC,aAAcA,EACdC,iBAAkBA,OAI1Bc,cAAAoB,WAAA,ICtLR,MAAMN,EAAQ,CAAE7M,MAAO,OAAQG,OAAQ,QAkNxBoT,MAhNOvK,IAoBf,IApBgB,OACrBvH,EAAM,gBACNgM,EAAe,UACfhI,EAAS,aACTD,EAAY,eACZiF,EAAc,mBACdpD,EAAkB,aAClB1C,EAAY,gBACZgE,EAAe,UACfmC,EAAS,cACT2B,EAAa,aACbE,EAAY,iBACZa,EAAgB,iBAChBvC,EAAgB,aAChBD,EAAY,gBACZwI,EAAe,mBACfC,EAAkB,YAClB/F,EAAW,kBACXC,EAAiB,eACjBnH,GACDwC,EACC,MAAO0K,EAAoBC,GAAwBnI,mBAAS,MAE5DC,qBAAU,KACR,IAAI1N,ELssBiCsQ,KACrC,OAAQA,EAAK/N,MACT,IAAK,KACL,IAAK,KACL,IAAK,KACD,MAAO,CAAEA,KAAM,MAAOC,KAAM,SAAUC,GAAI,QAC9C,IAAK,MACL,IAAK,MACD,MAAO,CAAEF,KAAM,MAAOC,KAAM,UAAWC,GAAI,WAC/C,QACI,MAAO,CAAEF,KAAM,KAAMC,KAAM,QAASC,GAAI,SKhtBxCoT,CAAyBjH,GACjCgH,EAAqBlG,EAAkB1P,EAAI4O,KAC1C,CAACA,EAAcc,IAElB,MAAOoG,EAAQC,GAAatI,mBAAS,cAC9BuI,EAAiBC,GAAsBxI,mBAAS,KAChD5G,EAAYqP,GAAiBzI,mBAAS,GAEvCd,EAAUb,IAA0B,IAAvBqK,QAASC,IAAQtK,EAClCoK,EAAcE,EAAMvP,YACpBkP,EAAU,cAENnJ,EAAYA,KAChBmJ,EAAU,cAENlJ,EAAUA,KACdkJ,EAAU,aAGNM,EAAenG,iBAAO,OACrBoG,EAAYC,GAAiB9I,oBAAS,IACtCT,EAAgBwJ,GAAqB/I,mBAAS,GAE/CgJ,EAAeC,IAAMC,aAAY,KACrCJ,GAAc,KACb,IACGK,EAAgBF,IAAMC,aAAaE,IACvCN,GAAc,KACb,IAEGO,EAASJ,IAAMC,aAClBI,IACC,GAAIT,EAAY,CAAC,IAAD9J,EACoC,QAAlDA,EAAAW,SAASC,cAAc,mCAA2B,IAAAZ,GAAlDA,EAAoDqE,QACpD,IAAImG,EACF9U,OAAOC,YACNkU,EAAaf,QAAQ2B,wBAAwBC,MAC5CH,EAAeI,SACjB,GAEFpK,EAAU,IACLrJ,EACHzB,MAAO+U,EACP5U,OAAQF,OAAOG,YAAc,KAE/BqT,EAAmB,IACdD,EACHxT,MACEoU,EAAaf,QAAQ2B,wBAAwBC,MAC7CH,EAAeI,QACf,GACF/U,OAAQF,OAAOG,YAAc,KAE/BmU,EACEH,EAAaf,QAAQ2B,wBAAwBC,MAC3CH,EAAeI,YAKvB,CAACb,EAAYrJ,IAYf,OATAS,qBAAU,KACRxL,OAAOmL,iBAAiB,YAAayJ,GACrC5U,OAAOmL,iBAAiB,UAAWoJ,GAC5B,KACLvU,OAAOkV,oBAAoB,YAAaN,GACxC5U,OAAOkV,oBAAoB,UAAWX,MAEvC,CAACK,EAAQL,IAEL/S,EACLmL,eAAA,OACEC,MAAO,CACLuI,QAAS,QACTnJ,SAAA,CAEFF,cAAA,OACEc,MAAO,CACL1M,OAAQ,QACRkV,UAAW,SACXC,UAAW,UACXrJ,SAEFF,cAAA,OACEpL,GAAG,gBACHkM,MAAO,CACLgH,SACA0B,UAAW,OACXjC,OACsB,YAApBS,EAAgC,oBAAsB,QACxD9H,SAEFF,cAACqB,EAAY,CACXjO,KAAK,UACLuL,QAASA,EACTG,cAAgB0B,GAAMyH,EAAmBzH,GACzC5B,UAAWA,EACXC,QAASA,EACThG,WAAYA,EACZa,UAAWA,EACXoH,MAAOA,EACPY,gBAAiBA,EACjBjI,aAAcA,EACd/D,OAAQA,EACR4F,mBAAoBA,EACpB1C,aAAcA,EACdgE,gBAAiBA,EACjB8B,eAAgBA,EAChBgC,cAAeA,EACf9L,GAAI,UACJgM,aAAc+G,EACdlG,iBAAkBA,EAClB1C,UAAWA,EACXG,iBAAkBA,EAClBD,aAAcA,EACdD,eAAgBA,EAChB2C,YAAaA,EACbC,kBAAmBA,EACnBnH,eAAgBA,QAIrBiH,GACCb,eAAA,OACE4I,IAAKpB,EACLpI,UAAU,gBACVa,MAAO,CACL7M,MAAOwT,EAAgBxT,MAAQ,GAAK,KACpCuV,UAAW,QAEbE,YAAclJ,GAAMA,EAAEmJ,iBAAiBzJ,SAAA,CAEvCF,cAAA,OAAKC,UAAU,wBAAwByJ,YAAad,IACpD5I,cAAA,OAAKC,UAAU,wBAAuBC,SACpCF,cAAA,OACEpL,GAAG,kBACHkM,MAAO,CACLgH,SACAP,OACsB,cAApBS,EACI,oBACA,QACN9H,SAEFF,cAACqB,EAAY,CACXjO,KAAK,YACLuL,QAASA,EACTG,cAAgB0B,GAAMyH,EAAmBzH,GACzC9G,UAAWA,EACXoH,MAAOA,EACPY,gBAAiBA,EACjBjI,aAAcA,EACd/D,OAAQ+R,EACRnM,mBAAoBA,EACpB1C,aAAcA,EACdgE,gBAAiBA,EACjBgC,UAAWA,EACXC,QAASA,EACThG,WAAYA,EACZ6F,eAAgBA,EAChBgC,cAAeA,EACf9L,GAAI,YACJgM,aAAcA,EACda,iBAAkBA,EAClB1C,UAAW2I,EACXxI,iBAAkBA,EAClBD,aAAcA,EACdD,eAAgBA,EAChB2C,YAAaA,EACbC,kBAAmBA,EACnBnH,eAAgBA,cAQ5BuF,cAAAoB,WAAA,K,sFChNJ,MAAMwI,EAAeC,GACZ7J,cAAC8J,IAAK,CAACC,UAAW,KAAOF,IAkFnBG,MAhFa/M,IAUrB,IAVsB,QAC3BgN,EAAO,MACPC,EAAK,MACLC,EAAK,aACLC,EAAY,cACZ1J,EAAa,eACb2J,EAAc,aACdC,EAAY,SACZC,EAAQ,YACRC,GACDvN,EACC,MAAOwN,EAAqBC,GAA0BjL,oBAAS,GAC/D,IAAIkL,EAAazI,iBAAO,MAExBxC,qBAAU,KACRgL,GAAuB,KACtB,CAAChK,IAUJ,OACEV,cAAA,OACEyJ,IAAKkB,EACLC,aAAcA,KACZF,GAAuB,IACvBxK,SAEFF,cAAC6K,IAAY,CACXC,WAhBiBtK,KACH,KAAdA,EAAEuK,SAEmB,KAAdvK,EAAEuK,UADXL,GAAuB,IAerBM,eAAe,EACfC,aAAc,QACdC,SAAUA,CAACjV,EAAGkV,KACZf,EAAae,IAEfC,WAAS,EACTb,WAAUA,EACVhV,KAAMkV,EACNR,QAAS,IAAIA,GACboB,OAAQA,KACNX,GAAuB,IAEzBE,aAAcA,KACZD,EAAWrD,QAAQzE,SAErByI,UAAWA,KACTZ,GAAuB,IAEzB7L,QAASA,KACP6L,GAAuB,IAEzBR,MAAOA,EACPqB,aAActB,EAAQ/N,MAAMsP,GAAMA,EAAE,KACpCC,eAAgB7B,EAChBS,eAAgBA,GAAkBA,EAClCC,aAAcA,GAAgBA,EAC9BE,YACEA,GAEKkB,IACC1L,cAAC2L,IAAS,IACJD,EACJvB,MAAOA,EACPyB,QAAQ,WACR/M,QAASA,KACP6L,GAAwBD,Y,gDCzD/BoB,YAAO/B,IAAP+B,EAAc5O,IAAA,IAAC,MAAE6O,GAAO7O,EAAA,MAAM,CACvC8O,gBAAwC,SAAvBD,EAAME,QAAQpW,KAAkB,UAAY,UAC1DkW,EAAMG,WAAWC,MACpBC,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXzZ,MAAOkZ,EAAME,QAAQjR,KAAKuR,cAuPfC,OApPAzO,IAkBR,IAlBS,iBACZ0O,EAAgB,UAChB9S,EAAS,eACT+S,EAAc,mBACdC,EAAkB,gBAClBhL,EAAe,oBACfiL,EAAmB,aACnB/L,EAAY,mBACZgM,EAAkB,aAClBnT,EAAY,gBACZmD,EAAe,kBACfiQ,EAAiB,aACjBjU,EAAY,mBACZ0C,EAAkB,sBAClBwR,EAAqB,cACrBpM,EAAa,YACbiB,EAAW,gBACXoL,GACHjP,EACOkP,EAAU9K,oBACTlF,EAAUiQ,GAAexN,mBAAS,KAClCyN,EAAaC,GAAkB1N,oBAAS,GAE7CC,qBAAU,KACN3O,EAAa,mBAAmBO,MAAMqS,IAAS,IAADC,EAC1CqJ,GAAe,OAAHtJ,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKxS,YAAI,IAAAyS,OAAN,EAAHA,EAAWwJ,OAAQ,SAEpC,IASH,OACIpN,cAACqN,IAAG,CAACC,GAAI,CAAEC,SAAU,GAAIrN,SACrBW,eAAC2M,IAAI,CACDC,WAAS,EACTrB,QAAS,EACTtL,MAAO,CAAEjN,SAAU,QAASsY,QAAS,QAASjM,SAAA,CAE9CF,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbF,cAACwN,IAAI,CAACC,WAAS,EAACrB,QAAS,EAAElM,SACvBF,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,GAAGxN,SACdF,cAACgK,EAAmB,CAChBC,QAASjN,EACTkN,MAAOtN,EACPuN,MAAO,UACPC,aAAcuC,EACdjM,cAAeA,UAK/BV,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbW,eAAC2M,IAAI,CAACC,WAAS,EAACrB,QAAS,EAAElM,SAAA,CACvBF,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbF,cAAC2N,IAAgB,CACbC,QACI5N,cAAC6N,IAAM,CACHC,SAAgC,OAAtBlN,EAAarM,KACvBwZ,QAASzS,EACT4P,SAAW1K,IACPsM,EACItM,EAAEwN,OAAOD,YAKzB5D,MAAM,UAGdnK,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbW,eAACoN,IAAW,CACRrC,QAAQ,OACR,aAAW,oBAAmB1L,SAAA,CAE9BF,cAACkO,IAAM,CACHjO,UAAS,OAAA5O,OACS,SAAdqI,EACM,cACA,IAEVmF,QAASA,IACL2N,EAAiB,eACpBtM,SPwlBjCW,eAAA,OACIsN,MAAM,6BACNC,QAAQ,YACRna,MAAM,KACNG,OAAO,KACPia,KAAK,eAAcnO,SAAA,CAEnBF,cAAA,QAAM2G,EAAE,yGACR3G,cAAA,QAAM2G,EAAE,oCACR3G,cAAA,QAAM2G,EAAE,wGACR3G,cAAA,QAAM2G,EAAE,yCO9lBgB3G,cAACkO,IAAM,CACHjO,UAAS,OAAA5O,OACS,SAAdqI,EACM,cACA,IAEVmF,QAASA,IAAM2N,EAAiB,QAAQtM,SP6lBxEF,cAAA,OACImO,MAAM,6BACNC,QAAQ,YACRna,MAAM,KACNG,OAAO,KAAI8L,SAEXF,cAAA,KAAGqO,KAAK,OAAOC,OAAO,eAAe,iBAAe,SAAQpO,SACxDF,cAAA,QAAM2G,EAAE,0FO9lBI3G,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,EAAErO,SACbF,cAACgK,EAAmB,CAChBC,QAAS,CAAC,IAAK,EAAG,EAAG,EAAG,GACxBC,MAAOtR,EACPuR,MAAO,MACPC,aAAcyC,EACdnM,cAAeA,EACf2J,eAAiBmE,GACNA,MAInBxO,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbF,cAACgK,EAAmB,CAChBC,QAAS3V,EACT4V,MAAOtJ,EACPuJ,MAAO,OACPC,aAAcwC,EACdlM,cAAeA,EACf2J,eAAiBmE,GACNA,EAAe,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQja,KAAO,OAI3CyL,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbF,cAACgK,EAAmB,CAChBC,QAASxU,EACTyU,MAAOzQ,EACP0Q,MAAO,WACPC,aAAcqC,EACd/L,cAAeA,EACf2J,eAAiBmE,GACNA,EAAe,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQja,KAAO,OAI3CyL,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbF,cAACkO,IAAM,CACHrP,QAASA,KAAO,IAADL,EACXkO,GAAoBhL,GAIf,QAHLlD,EAAAW,SACKC,cACG,mCACH,IAAAZ,GAHLA,EAIMqE,SAEV5C,UAAS,OAAA5O,OACLqQ,EAAkB,cAAgB,IACnCxB,SACN,sBAMbF,cAACwN,IAAI,CAACtK,MAAI,EAACwK,GAAI,EAAExN,SACbW,eAAC2M,IAAI,CAACC,WAAS,EAACrB,QAAS,EAAElM,SAAA,CACvBF,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,GAAGrO,SACG,WAAhByB,EACG3B,cAACiO,IAAW,CACRrC,QAAQ,OACR,aAAW,oBAAmB1L,SAE9BW,eAAAO,WAAA,CAAAlB,SAAA,CACIF,cAACyO,IAAI,CACD3N,MAAO,CAAEuI,QAAS,QAClBI,IAAKuD,EACLgB,OAAQ,SACRU,GAAG,WAGP1O,cAACkO,IAAM,CACHrP,QAASA,KACLmO,EAAQ1F,QAAQzE,SAEpB/B,MAAO,CAAElO,MAAO,SAAUsN,SAEzB,YAKbF,cAAAoB,WAAA,MAGRpB,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,EAAErO,SACbF,cAAC2O,IAAU,CAAC9P,QAhKhB+P,KACX1B,GAAaH,EAAgB,KAC9BG,GAAaH,EAAgB,GAEjCI,GAAgBD,IA4JsCta,MAAM,UAASsN,SAC7CF,cAAC6O,IAAQ,mB,qDCzNlC,SAASC,GAAqBtW,EAAGvG,EAAG8c,GACzC,OAAK,OAAD9c,QAAC,IAADA,OAAC,EAADA,EAAI8c,KAAY,OAADvW,QAAC,IAADA,OAAC,EAADA,EAAIuW,KACb,GAEL,OAAD9c,QAAC,IAADA,OAAC,EAADA,EAAI8c,KAAY,OAADvW,QAAC,IAADA,OAAC,EAADA,EAAIuW,IACd,EAEF,E,4FCiDMC,OArDM/R,IAWd,IAADgS,EAAA,IAXgB,IACpBC,EAAG,MACHC,EAAK,cACLzO,EAAa,kBACb0O,EAAiB,aACjBxO,EAAY,6BACZyO,EAA4B,oBAC5BC,EAAmB,mBACnB1C,EAAkB,iBAClB1N,EAAgB,eAChBzE,GACDwC,EACC,OAAOiS,GAAOxO,EACZG,eAAC0O,KAAQ,CACPtP,UAAWiP,EAAI3a,OAASmM,EAAcnM,KAAO,mBAAqB,GAClEib,OAAQN,EAAI3a,OAASmM,EAAcnM,KAEnCsK,QAASA,KACP+N,EAAmBhM,GACnByO,EAA6BF,GAC7BC,EAAkBF,GAClBI,EAAoBH,IAEtBM,MAAOP,EAAI3a,OAASmM,EAAcnM,KAAK2L,SAAA,CAEvCF,cAAC0P,KAAS,CAACC,MAAO,SAASzP,SAAEgP,EAAI3a,OACjCyL,cAAC0P,KAAS,CAACC,MAAO,SAASzP,UACrB,OAAHgP,QAAG,IAAHA,GAAY,QAATD,EAAHC,EAAKhO,eAAO,IAAA+N,OAAT,EAAHA,EAAcpV,SAAUqV,EAAIhO,QAAQ,KAEvClB,cAAC0P,KAAS,CAACC,MAAO,SAASzP,UAAK,OAAHgP,QAAG,IAAHA,OAAG,EAAHA,EAAKjO,cAAe,MACjDjB,cAAC0P,KAAS,CAACC,MAAO,SAASzP,SAAEgP,EAAIU,aACjC5P,cAAC0P,KAAS,CAACC,MAAO,SAASzP,SAAEU,EAAarM,OACzCkG,EAAevE,KAAI,CAACC,EAAGC,KAAC,IAAAyZ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACtB,OAADra,QAAC,IAADA,GAAO,QAAN0Z,EAAD1Z,EAAGhF,YAAI,IAAA0e,GAAa,QAAbC,EAAPD,EAAa,OAAHX,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAAub,OAAnB,EAADA,EAAsB5F,QACU,UAA/B,OAAD/T,QAAC,IAADA,GAAO,QAAN4Z,EAAD5Z,EAAGhF,YAAI,IAAA4e,GAAa,QAAbC,EAAPD,EAAa,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAAyb,OAAnB,EAADA,EAAsB9F,OACpBrJ,eAAC6O,KAAS,CAASC,MAAO,SAASzP,SAAA,CACA,UAA/B,OAAD/J,QAAC,IAADA,GAAO,QAAN8Z,EAAD9Z,EAAGhF,YAAI,IAAA8e,GAAa,QAAbC,EAAPD,EAAa,OAAHf,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAA2b,OAAnB,EAADA,EAAsBhG,QAClB,OAAD/T,QAAC,IAADA,GAAO,QAANga,EAADha,EAAGhF,YAAI,IAAAgf,GAAa,QAAbC,EAAPD,EAAa,OAAHjB,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAA6b,OAAnB,EAADA,EAAsBlG,OAAQ,KAC9B,IAC4B,UAA9B,OAAD/T,QAAC,IAADA,GAAO,QAANka,EAADla,EAAGhF,YAAI,IAAAkf,GAAa,QAAbC,EAAPD,EAAa,OAAHnB,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAA+b,OAAnB,EAADA,EAAsBhO,MAClB,OAADnM,QAAC,IAADA,GAAO,QAANoa,EAADpa,EAAGhF,YAAI,IAAAof,GAAa,QAAbC,EAAPD,EAAa,OAAHrB,QAAG,IAAHA,OAAG,EAAHA,EAAK3a,aAAK,IAAAic,OAAnB,EAADA,EAAsBlO,KACtB,MANUlM,GAShB4J,cAAAoB,WAAA,SA5BC+N,GAiCPnP,cAAAoB,WAAA,KC4DWqP,OApGQxT,IAgBhB,IAhBiB,OACtB7I,EAAM,kBACNsc,EAAiB,iBACjBxR,EAAgB,QAChB6P,EAAO,kBACP4B,EAAiB,MACjBC,EAAK,6BACLvB,EAA4B,cAC5B3O,EAAa,mBACbkM,EAAkB,kBAClBwC,EAAiB,oBACjBE,EAAmB,aACnB1O,EAAY,OACZiQ,EAAM,UACNC,EAAS,eACTrW,GACDwC,EACC,OACE+C,cAAC+Q,KAAc,CACbzD,GAAI,CACF0D,UAAW5c,EAAS,GAAK,GACzBtC,OAAQ,WACRyX,UAAW,QACXrJ,SAEFW,eAACoQ,KAAK,CACJ3D,GAAI,CAAE4D,SAAU,SAChBzH,IAAKiH,EACLS,cAAY,EACZ,aAAW,eAAcjR,SAAA,CAEzBF,cAACoR,KAAS,CAAAlR,SACRF,cAACuP,KAAQ,CAAArP,SACN,CACC,CAAEiK,MAAO,SAAUkH,SAAS,GAC5B,CAAElH,MAAO,UAAWkH,SAAS,GAC7B,CAAElH,MAAO,cAAekH,SAAS,GACjC,CAAElH,MAAO,cAAekH,SAAS,GACjC,CAAElH,MAAO,OAAQkH,SAAS,OACR,OAAd5W,QAAc,IAAdA,OAAc,EAAdA,EAAgBZ,QAChB,IAAI,IAAIyX,IAAI7W,EAAevE,KAAKgN,GAASA,EAAK3O,SAAQ2B,KACnDC,IACQ,CACLgU,MAAOhU,EACPkb,SAAS,MAIf,IACJnb,KAAI,CAACqb,EAAQpC,IACbnP,cAAC0P,KAAS,CACRpC,GAAI,CAAE4D,SAAU,SAEhBvB,OAAO4B,EAAOF,QAAU,UACxBG,cAAezC,IAAYwC,EAAOpH,OAAQyG,EAAc1Q,SAExDW,eAAC4Q,KAAc,CACbjC,OAAQT,IAAYwC,EAAOpH,MAC3BuH,UAAW3C,IAAYwC,EAAOpH,MAAQyG,EAAQ,MAC9C/R,QAAS8R,EAAkBY,EAAOpH,OAAOjK,SAAA,CAExCqR,EAAOpH,MACP4E,IAAYwC,EAAO3c,GAClBoL,cAACqN,IAAG,CAACsE,UAAU,OAAOrE,GAAIsE,KAAe1R,SAC5B,SAAV0Q,EACG,oBACA,qBAEJ,SAhBDzB,SAsBbnP,cAAC6R,KAAS,CAAA3R,SACP2Q,EAAO3a,KAAI,CAACgZ,EAAKC,IAEdnP,cAACgP,GAAY,CAEXE,IAAKA,EACLC,MAAOA,EACPzO,cAAeA,EACf0O,kBAAmBA,EACnBE,oBAAqBA,EACrB1O,aAAcA,EACdyO,6BAA8BA,EAC9ByB,UAAWA,EACXD,OAAQA,EACRjE,mBAAoBA,EACpB1N,iBAAkBA,EAClBzE,eAAgBA,GAZX0U,aC7ErB,MAAM2C,GAAO9R,cAAC+R,KAAwB,CAAC/Q,SAAS,UAC1CgR,GAAchS,cAACiS,KAAY,CAACjR,SAAS,UAqS5BkR,OAnSGjV,IAqBX,IArBY,kBACfmS,EAAiB,cACjB1O,EAAa,OACbmQ,EAAM,UACNC,EAAS,OACT1c,EAAM,kBACNsc,EAAiB,6BACjBrB,EAA4B,iBAC5B5N,EAAgB,oBAChB0Q,EAAmB,mBACnBvF,EAAkB,UAClB7N,EAAS,OACTrJ,EAAM,gBACNqX,EAAe,aACf9N,EAAY,gBACZyC,EAAe,iBACfxC,EAAgB,oBAChBkT,EAAmB,gBACnB3K,EAAe,mBACfC,EAAkB,eAClBjN,GACHwC,EACG,MAAOwG,EAAY4O,GAAiB5S,mBAAS,KACtC6S,EAAYC,GAAiB9S,mBAAS,KACtC+S,EAAoBlD,GAAuB7P,mBAAS,IACpDhB,EAAQuD,GAAavC,oBAAS,IAC9BmB,EAAc6R,GAAmBhT,mBAAS,CAC7ClL,KAAM,KACNC,KAAM,QACNC,GAAI,QAGRiL,qBAAU,KACNsC,GAAU,GACVjR,EAAa,qBACRO,MAAMqS,IAAS,IAADC,EAAA8O,GACJ,OAAH/O,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKxS,YAAI,IAAAyS,GAAM,QAAN8O,EAAT9O,EAAWwJ,YAAI,IAAAsF,OAAZ,EAAHA,EAAiB7Y,UACjB0Y,EAAc5O,EAAIxS,KAAKic,MAAQ,IAC/B+E,EAAoBxO,EAAIxS,KAAKic,KAAK,KAEtCpL,GAAU,MAEbzQ,OAAM,KACHyQ,GAAU,MAGlBjR,EAAa,6BACRO,MAAMqS,IAAS,IAADE,EACXwO,GAAiB,OAAH1O,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAKxS,YAAI,IAAA0S,OAAN,EAAHA,EAAWuJ,OAAQ,IACjCpL,GAAU,MAEbzQ,OAAM,KACHyQ,GAAU,QAEnB,IAEHtC,qBAAU,KACN3O,EAAa,oBAAsB0Q,GAAkBnQ,MAAMqS,IAAS,IAADgP,EAAAC,EAC/D9B,GAAa,OAAHnN,QAAG,IAAHA,GAAS,QAANgP,EAAHhP,EAAKxS,YAAI,IAAAwhB,OAAN,EAAHA,EAAWvF,OAAQ,IAC7BkC,EAAoB,GACpBF,EAAqB,OAAHzL,QAAG,IAAHA,GAAS,QAANiP,EAAHjP,EAAKxS,YAAI,IAAAyhB,OAAN,EAAHA,EAAWxF,KAAK,SAGvC,CAAC3L,IAEJ,MAAMoR,EAAiBrS,IACD,KAAdA,EAAEuK,SACF6B,EAAmBhM,GACnBwO,EAAkByB,EAAO2B,EAAqB,IAC9ClD,EAAoBkD,EAAqB,GACzCnD,EAA6BmD,EAAqB,IAC7B,KAAdhS,EAAEuK,UACT6B,EAAmBhM,GACnBwO,EAAkByB,EAAO2B,EAAqB,IAC9ClD,EAAoBkD,EAAqB,GACzCnD,EAA6BmD,EAAqB,MAInD5B,EAAOkC,GAAYpK,IAAMjJ,SAAS,QAClCsP,EAASgE,GAAcrK,IAAMjJ,SAAS,UACvCkR,EAAqBqC,GAAc1T,IACrC2T,EAAkB3T,EAAO0T,IAEvBC,EAAoBA,CAAC3T,EAAO0T,KAC9B,MAAME,EAAQnE,IAAYiE,GAAsB,QAAVpC,EACtCkC,EAASI,EAAQ,OAAS,OAC1BH,EAAWC,GAEXlC,EHzFD,SAAoBxY,EAAO6a,GAChC,MAAMC,EAAiB9a,EAAMpC,KAAI,CAACmd,EAAIlE,IAAU,CAACkE,EAAIlE,KAQrD,OAPAiE,EAAeE,MAAK,CAAC9a,EAAGvG,KACtB,MAAM2e,EAAQuC,EAAW3a,EAAE,GAAIvG,EAAE,IACjC,OAAc,IAAV2e,EACKA,EAEFpY,EAAE,GAAKvG,EAAE,MAEXmhB,EAAeld,KAAKmd,GAAOA,EAAG,KGiF3BE,CACI1C,EAAO3a,KAAKC,IACR,IAAIqd,EAAM,GAMV,OALAtU,EAAiB5C,SAAQ,CAACmX,EAAGrd,KAAO,IAADsd,EAAAC,EAAAC,EAC/B,IAAI5hB,EAAkB,OAAdyI,QAAc,IAAdA,GAAmB,QAALiZ,EAAdjZ,EAAiBrE,UAAE,IAAAsd,GAAM,QAANC,EAAnBD,EAAqBviB,YAAI,IAAAwiB,GAAU,QAAVC,EAAzBD,EAA4Bxd,EAAE5B,aAAK,IAAAqf,OAArB,EAAdA,EAAqCtR,KAC7CkR,EAAIC,GAAKzhB,EAAI,IAAI0J,KAAK1J,GAAK,QAGxB,IACAmE,EACH0d,OAAQ1d,EAAE5B,KACVuf,QAAS3d,EAAE+K,QAAQ,GACnB6S,YAAa5d,EAAE8K,YACf+S,KAAMpT,EAAarM,QAChBif,MH9GpB,SAAuB5C,EAAO7B,EAAS7P,GAC5C,MAAiB,SAAV0R,EACH,CAACpY,EAAGvG,IAAM6c,GAAqBtW,EAAGvG,EAAG8c,GACrC,CAACvW,EAAGvG,KAAO6c,GAAqBtW,EAAGvG,EAAG8c,GG8G5BkF,CACIf,EAAQ,OAAS,MACjBF,MAOV3Q,EAAQ6R,mBAAQ,IAEdrT,eAAC2M,IAAI,CAACC,WAAS,EAAC3M,MAAO,CAAEhP,OAAQ,WAAYoO,SAAA,CACzCW,eAAC2M,IAAI,CAACC,WAAS,EAACvK,MAAI,EAACqL,GAAI,GAAI4F,GAAI,GAAIzG,GAAI,GAAItB,QAAS,EAAElM,SAAA,CACpDF,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,EAAG4F,GAAI,EAAGzG,GAAI,EAAExN,SAC3BF,cAACgK,EAAmB,CAChBC,QAASqI,EACTpI,MAAOzI,EACP0I,MAAO,cACPC,aAAc+H,EACdzR,cAAeA,MAGvBV,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,EAAG4F,GAAI,EAAGzG,GAAI,EAAExN,SAC3BF,cAACgK,EAAmB,CAChBC,QAAS3V,EACT4V,MAAOtJ,EACPuJ,MAAO,OACPC,aAAee,IACXsH,EAAgBtH,GAChByB,EAAmBzB,IAEvBzK,cAAeA,EACf2J,eAAiBmE,GACNA,EAAe,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQja,KAAO,OAI3CyL,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,EAAG4F,GAAI,EAAGzG,GAAI,EAAExN,SAC3BF,cAACgK,EAAmB,CAChBC,QAASxG,EACTyG,MAAOhL,EACPiL,MAAM,aACNC,aAAeoB,IACPA,GAAKA,EAAE3R,OACPuY,EAAoB,IAAI5G,IAExB4G,EAAoB,KAG5B1R,cAAeA,EACf6J,UAAU,EACVD,aAAcA,CAACT,EAAO2E,EAAQiF,KAC1B,IAAIW,EAAY,OAADX,QAAC,IAADA,OAAC,EAADA,EAAGW,SAClB,OACIvT,eAAA,SAAQgJ,EAAK3J,SAAA,CACTF,cAACqU,KAAQ,CACLvC,KAAMA,GACNE,YAAaA,GACbjE,QAASqG,IAEZ5F,aAQzBxO,cAACwN,IAAI,CAACtK,MAAI,EAACqL,GAAI,GAAI4F,GAAI,GAAIzG,GAAI,GAAGxN,SAC9BF,cAAA,OAAK8K,WAAY+H,EAAc3S,SAC3BF,cAACyQ,GAAc,CACXrc,OAAQA,EACRsc,kBAAmBA,EACnBxR,iBAAkBA,EAClB6P,QAASA,EACT4B,kBAAmBA,EACnBC,MAAOA,EACPvB,6BACIA,EAEJ3O,cAAeA,EACfkM,mBAAoBA,EACpBwC,kBAAmBA,EACnBE,oBAAqBA,EACrB1O,aAAcA,EACdiQ,OAAQA,EACRC,UAAWA,EACXrW,eAAgBA,YAOrC,CACCoW,EACAnQ,EACAkQ,EACA7B,EACAtN,EACA6Q,EACAzB,EACAjQ,EACA1B,EACAzE,EACAgJ,EACAhJ,EAAeZ,SAIbya,EAAapS,iBAAO,OACnBoG,EAAYC,GAAiB9I,oBAAS,GAEvCqJ,EAASJ,IAAMC,aAChBI,IACG,GAAIT,EAAY,CACZ,IAAIU,EACA9U,OAAOC,YACNmgB,EAAWhN,QAAQ2B,wBAAwBC,MACxCH,EAAeI,SACnB,GAEAzH,IACAsH,EAAIvQ,KAAK8b,MAAMvL,EAAI,IAGvBjK,EAAU,IACHrJ,EACHzB,MAAO+U,EACP5U,OAAQF,OAAOG,YAAc,KAEjCqT,EAAmB,IAAKD,EAAiBxT,MAAO+U,IAChD+D,EACIuH,EAAWhN,QAAQ2B,wBAAwBC,MACvCH,EAAeI,YAK/B,CAACb,IAGCG,EAAeC,IAAMC,aAAY,KACnCJ,GAAc,KACf,IACGK,EAAgBF,IAAMC,aAAaE,IACrCN,GAAc,KACf,IAkBH,OAhBA7I,qBAAU,KACNxL,OAAOmL,iBAAiB,YAAayJ,GACrC5U,OAAOmL,iBAAiB,UAAWoJ,GAC5B,KACHvU,OAAOkV,oBAAoB,YAAaN,GACxC5U,OAAOkV,oBAAoB,UAAWX,MAE3C,CAACK,EAAQL,IAEZ/I,qBAAU,KACNxL,OAAOmL,iBAAiB,UAAWwT,GAC5B,KACH3e,OAAOkV,oBAAoB,UAAWyJ,OAK1ChS,eAAA,OACI4I,IAAK6K,EACLrU,UAAU,cACVa,MAAO,CACH7M,MAAOgL,EAAe,KACtB7K,OAAO,gBAAD/C,OAAkB,GAAE,OAE9BqY,YAAclJ,GAAMA,EAAEmJ,iBAAiBzJ,SAAA,CAEtCzB,EAASuB,cAAA,OAAKC,UAAU,oBAA2BD,cAAAoB,WAAA,IACpDpB,cAAA,OAAKC,UAAU,sBAAsByJ,YAAad,IAClD5I,cAAA,OAAKC,UAAU,sBAAsBa,MAAO,CAAEyI,UAAW,QAASrJ,SAC7DmC,QCnSjB,MAAMmS,GAAYC,aAAW,MACzBhH,UAAYxO,IACD,CAAEhL,MAAM,eAAD5C,OAAiB4N,EAAY,aA0KpCyV,OAtKf,SAAYzX,GAAmB,IAAlB,YAAE0E,GAAa1E,EACxB,MAAO4T,EAAQC,GAAarR,mBAAS,KAC9BR,EAAc8N,GAAmBtN,mBAAS,GAC3CkV,EAAUH,GAAUvV,IACnBvF,EAAWkb,GAAgBnV,mBAAS,gBACpCgC,EAAkB0Q,GAAuB1S,mBAAS,UAClDnE,EAAoBwR,GAAyBrN,oBAAS,IACtDiC,EAAiBgL,GAAsBjN,oBAAS,IAChD/J,EAAQqJ,GAAaU,mBAAS,IAAK7N,IACpC8e,EAAoBxO,iBAAO,OAC1BxB,EAAemU,GAAkBpV,mBAAS,QAC1C7C,EAAiBkY,GAAsBrV,mBAAS,OAChDhF,EAAgBmH,GAAqBnC,mBAAS,KAC9CmB,EAAcmU,GAAiBtV,mBAAS,CAC3ClL,KAAM,KACNE,GAAI,MACJD,KAAM,WAEHiT,EAAiBC,GAAsBjI,mBAAS,IAChD/J,EACHzB,MAAO,MACPG,OAAQF,OAAOG,YAAc,MAE1BoF,EAAc2I,GAAmB3C,mBAAS9K,IAC1CiE,EAAcoc,GAAmBvV,mBAAS,IAC1CP,EAAkBkT,GAAuB3S,mBAAS,IAMzDiJ,IAAMhJ,WAAU,KAcZxL,OAAOmL,iBAAiB,UAbxB,WAIO,IAADb,EAFE9I,EAAOzB,QAAUC,OAAOC,WAAa,IACrCuB,EAAOtB,SAAWF,OAAOG,YAAc,KAEW,QAAlDmK,EAAAW,SAASC,cAAc,mCAA2B,IAAAZ,GAAlDA,EAAoDqE,QACpD9D,EAAU,IACHrJ,EACHzB,MAAOC,OAAOC,WAAa,GAC3BC,OAAQF,OAAOG,YAAc,WAM1C,CAACH,OAAOC,WAAYD,OAAOG,cAE9B,MAMM+a,EAAqB/M,IACvBwS,EAAexS,IAGbuK,EAAsBtK,IACL,QAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM/N,OACNuY,GAAsB,GAE1BiI,EAAczS,IAyBlB,OACIzB,eAAA,OAAKZ,UAAU,gBAAeC,SAAA,CAC1BW,eAAA,OAAKZ,UAAW0U,EAAQlH,UAAY,aAAavN,SAAA,CAC7CF,cAACuM,GAAM,CACHG,mBAAoBA,EACpBhL,gBAAiBA,EACjB8K,iBAnEUpZ,IACtBwhB,EAAaxhB,IAmEDsG,UAAWA,EACX+S,eA9BQwI,IACpB7S,EAAgB6S,IA8BJlI,gBAAiBA,EACjBrM,cAAeA,EACf0O,kBAAmBA,EACnBzC,oBAnDa3Q,IACzB8Y,EAAmB9Y,GACnBoW,EAAoB,IACpBxQ,EAAkB,KAiDNhB,aAAcA,EACdgM,mBAAoBA,EACpBnT,aAAcA,EACdmD,gBAAiBA,EACjBiQ,kBAnCWrB,IACvBwJ,EAAgBxJ,IAmCJ5S,aAAcA,EACd0C,mBAAoBA,EACpBwR,sBAAuBA,EACvBnL,YAAaA,IAEjB3B,cAAA,OACIc,MAAO,CACH1M,OAAQ,QACRkV,UAAW,UACbpJ,SAEFF,cAACwH,EAAa,CACV9R,OAAQA,EACRgM,gBAAiBA,EACjBhI,UAAWA,EACXD,aAAcA,EACd6B,mBAAoBA,EACpB1C,aAAcA,EACdgE,gBAAiBA,EACjB8D,cAAeA,EACf3B,UAAWA,EACX6B,aAAcA,EACda,iBAAkBA,EAClBvC,iBAAkBA,EAClBD,aAAcA,EACdwI,gBAAiBA,EACjBC,mBAAoBA,EACpB/F,YAAaA,EACbC,kBAAmBA,EACnBnH,eAAgBA,SAK5BuF,cAACkS,GAAS,CACNxR,cAAeA,EACf0O,kBAAmBA,EACnByB,OAAQA,EACRC,UAAWA,EACX1c,OAAQsB,EAAOtB,OACfsc,kBAAmBA,EACnBrB,6BAzE0BF,IAClC,MAEM+F,EACFC,IAHqB,GAIrBhG,EACJuB,EAAkBpJ,QAAQ8N,SAASF,EAAgB,IAoE3CzT,iBAAkBA,EAClB0Q,oBAAqBA,EACrBvF,mBAAoBA,EACpB7N,UAAWA,EACXrJ,OAAQA,EACRqX,gBAAiBA,EACjB9N,aAAcA,EACdyC,gBAAiBA,EACjBxC,iBAAkBA,EAClBkT,oBA1E0BqB,IAClCrB,EAAoB,IAAIqB,IACxBqB,EAAmB,OAyEXrN,gBAAiBA,EACjBC,mBAAoBA,EACpBjN,eAAgBA,QCpKjB4a,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,+BAAqBjkB,MAAK2L,IAAkD,IAAjD,OAAEuY,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS3Y,EACpEuY,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2CCNd,IAAIO,GAAU,UAEP,MAAM/J,GAAQgK,aACnBC,aAAa,CACX/J,QAAS,CACP6J,QAAS,CAAEG,KAAMH,GAASI,MAAO,aACjC3J,UAAW,CAAE0J,KAAM,cAErB/J,WAAY,CACVjL,SAAU,GACVkV,WAAY,QACZC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,IAClBC,GAAI,CACFtV,SAAU,GACVuV,UAAW,aAEbC,GAAI,CACFxV,SAAU,GACVuV,UAAW,aAEbE,GAAI,CACFzV,SAAU,GACVuV,UAAW,aAEbG,GAAI,CACF1V,SAAU,GACVuV,UAAW,aAEbI,GAAI,CACF3V,SAAU,GACVuV,UAAW,aAEbK,GAAI,CACF5V,SAAU,GACVuV,UAAW,aAEbM,UAAW,CACT7V,SAAU,GACV8V,WAAY,OACZP,UAAW,aAEbQ,UAAW,CACTR,UAAW,aAEbS,MAAO,CACLT,UAAW,aAEbrK,MAAO,CACLlL,SAAU,GACVuV,UAAW,cAGf1M,MAAO,CACLoN,aAAc,CACZrL,QAAS,WACT9Z,OAAQ,OAEVolB,WAAY,CAAEC,UAAW,SAAUC,OAAO,IAE5CC,UAAW,CACTC,SAAU,CACRC,MAAO,CACLvW,SAAU,KAGdwW,cAAe,CACbC,KAAM,CACJzW,SAAU,KAGdkW,WAAY,CACVQ,QAAS,CACP1W,SAAU,OACVpO,MAAO,QACPmZ,gBAAiB8J,IAEnBuB,MAAO,CACLxkB,MAAOijB,GACP9J,gBAAiB,UAGrB4L,YAAa,CACXC,eAAgB,CACd,YAAa,CACXhlB,MAAOijB,MAIbgC,aAAc,CACZJ,KAAM,CACJtL,QAAS,MACTnL,SAAU,OACVkQ,SAAU,OACV4G,SAAU,OACV7jB,MAAO,QAET8jB,KAAM,CACJC,WAAY,UACZplB,MAAO,QACPse,SAAU,OACV4G,SAAU,OACV7jB,MAAO,a,aC/FjBgkB,IAASC,OACLlY,cAAC0I,IAAMyP,WAAU,CAAAjY,SACbF,cAACoY,KAAoB,CAACC,aAAW,EAAAnY,SAC7BF,cAACsY,KAAa,CAACxM,MAAOA,GAAM5L,SACxBF,cAACuY,IAAa,CAAArY,SACVW,eAAC2X,KAAM,CAAAtY,SAAA,CACHF,cAACyY,KAAK,CAACC,KAAK,IAAIC,QAAS3Y,cAAC0U,GAAG,CAAC/S,YAAa,OAC3C3B,cAACyY,KAAK,CACFC,KAAK,SACLC,QAAS3Y,cAAC0U,GAAG,CAAC/S,YAAa,wBAOnDxC,SAASyZ,eAAe,SAG5BvD,M","file":"static/js/main.e91f34ae.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint, method, data) => {\n  if (method === \"post\") {\n    return await axios\n      .post(`${endpoint}`, data)\n      .then((data) => {\n        return data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  return await axios\n    .get(`${endpoint}`)\n    .then((data) => {\n      return data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","export const initialLayout = {\n  dragmode: \"pan\",\n  margin: {\n    r: 10,\n    t: 25,\n    b: 40,\n    l: 20,\n  },\n  hovermode: \"x\",\n  showlegend: true,\n  legend: {\n    x: 0,\n    y: 1,\n    traceorder: \"normal\",\n    font: {\n      family: \"sans-serif\",\n      size: 12,\n      color: \"#000\",\n    },\n    bgcolor: \"#E2E2E211\",\n    bordercolor: \"#FFFFFF\",\n  },\n  xaxis: {\n    domain: [0, 1],\n    rangeslider: {\n      visible: false,\n    },\n    autorange: false,\n    type: \"category\",\n    tickmode: \"array\",\n    showspikes: true,\n    spikemode: \"toaxis+across+marker\",\n    spikesnap: \"cursor\",\n    spikethickness: 1,\n    spikecolor: \"black\",\n    spikedash: \"dot\",\n  },\n  yaxis: {\n    domain: [0, 1],\n    autorange: true,\n    rangeslider: {\n      visible: false,\n    },\n    position: 1,\n    side: \"bottom\",\n    type: \"linear\",\n    showspikes: true,\n    spikemode: \"toaxis+across+marker\",\n    spikesnap: \"cursor\",\n    spikethickness: 1,\n    spikecolor: \"black\",\n    spikedash: \"dot\",\n  },\n  opacity: 0.2,\n  autosize: true,\n  width: window.innerWidth - 10,\n  height: window.innerHeight - 80,\n};\n\nexport const times = [\n  { name: \"1h\", desc: \"1 Hour\", ms: 3600000 * 1 },\n  { name: \"2h\", desc: \"2 Hour\", ms: 3600000 * 2 },\n  { name: \"4h\", desc: \"4 Hour\", ms: 3600000 * 4 },\n  { name: \"6h\", desc: \"6 Hour\", ms: 3600000 * 6 },\n  { name: \"8h\", desc: \"8 Hour\", ms: 3600000 * 8 },\n  { name: \"12h\", desc: \"12 Hour\", ms: 3600000 * 12 },\n  { name: \"18h\", desc: \"18 Hour\", ms: 3600000 * 18 },\n  { name: \"1d\", desc: \"1 Day\", ms: 86400000 * 1 },\n  { name: \"2d\", desc: \"2 Day\", ms: 86400000 * 2 },\n  { name: \"3d\", desc: \"3 Day\", ms: 86400000 * 3 },\n  { name: \"1wk\", desc: \"1 Week\", ms: 604800000 },\n  { name: \"2wk\", desc: \"2 Week\", ms: 604800000 * 2 },\n  { name: \"1mo\", desc: \"1 Month\", ms: 2629746000 * 1 },\n];\n\nexport const rightMargin = 23;\n\nexport const months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const T0 = {\n  id: 0,\n  name: \"T0\",\n  merged: {},\n  separate: {},\n};\n\nexport const dummy = {\n  x: [],\n  name: \"main\",\n  close: [],\n  decreasing: {\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  hoverinfo: \"x\",\n};\n\nexport const templates = [\n  {\n    name: \"T0\",\n    id: 0,\n    merged: {},\n    separate: {},\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0, 1] },\n    },\n  },\n  {\n    name: \"T1\",\n    id: 1,\n    merged: {\n      EMA0: {\n        data: [],\n        xaxis: \"x\",\n        name: `EMA 20`,\n        yaxis: \"y\",\n        mode: \"line\",\n        type: \"scatter\",\n        marker: {\n          size: 4,\n          color: \"blue\",\n        },\n        hoverinfo: \"x\",\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA 22\",\n        xaxis: \"x\",\n        type: \"scatter\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA 26\",\n        type: \"scatter\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n    },\n    separate: {\n      \"Volume EMA\": {\n        data: [],\n        name: \"Volume\",\n        marker: {\n          color: \"#9fa5c5\",\n        },\n        yaxis: \"y2\",\n        hoverinfo: \"x\",\n        type: \"bar\",\n        markerFn: (_, data) => {\n          return {\n            color: data.open.map((m, i) =>\n              m < data.close[i] ? \"green\" : \"red\"\n            ),\n          };\n        },\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.3, 1] },\n      yaxis2: { ...initialLayout.yaxis, domain: [0, 0.25] },\n    },\n  },\n  {\n    name: \"T2\",\n    id: 2,\n    merged: {\n      EMA0: {\n        data: [],\n        xaxis: \"x\",\n        name: `EMA 10`,\n        yaxis: \"y\",\n        mode: \"line\",\n        type: \"scatter\",\n        marker: {\n          size: 4,\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA 11\",\n        xaxis: \"x\",\n        type: \"scatter\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA 13\",\n        type: \"scatter\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA3: {\n        data: [],\n        xaxis: \"x\",\n        yaxis: \"y\",\n        name: \"EMA 20\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA4: {\n        data: [],\n        name: \"EMA 22\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA5: {\n        data: [],\n        name: \"EMA 26\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n    },\n    separate: {},\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0, 1] },\n    },\n  },\n  {\n    name: \"T3\",\n    id: 3,\n    merged: {\n      donchian_price0: {\n        data: [],\n        name: \"DONCHIAN AVG\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n          size: 12,\n        },\n        line: {\n          width: 1,\n        },\n      },\n      donchian_min0: {\n        data: [],\n        name: \"DONCHAIN MIN\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        line: {\n          width: 2,\n        },\n      },\n      donchian_max0: {\n        data: [],\n        name: \"DONCHAIN MAX\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        line: {\n          width: 2,\n        },\n      },\n      ema_10: {\n        data: [],\n        name: \"EMA 10\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        line: {\n          width: 2,\n        },\n      },\n    },\n    separate: {\n      \"%R0\": {\n        data: [],\n        name: \"%R(5)\",\n        type: \"bar\",\n        marker: {\n          color: \"blue\",\n        },\n        yaxis: \"y2\",\n      },\n      \"%R1\": {\n        data: [],\n        name: \"%R(20)\",\n        type: \"bar\",\n        marker: {\n          color: \"red\",\n        },\n        yaxis: \"y3\",\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.55, 1] },\n      yaxis2: { ...initialLayout.yaxis, domain: [0.25, 0.5] },\n      yaxis3: { ...initialLayout.yaxis, domain: [0, 0.25] },\n      xaxis: { ...initialLayout.xaxis },\n    },\n  },\n  {\n    name: \"T4\",\n    id: 4,\n    merged: {\n      SMA0: {\n        data: [],\n        name: \"MMA 20\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(255,173,89)\",\n        },\n      },\n      SMA1: {\n        data: [],\n        name: \"MMA 50\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(253,91,252)\",\n        },\n      },\n      SMA2: {\n        data: [],\n        name: \"MMA 100\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(172,91,170)\",\n        },\n      },\n      SMA3: {\n        data: [],\n        name: \"MMA 200\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(89,89,89)\",\n        },\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.5, 1] },\n      yaxis2: {\n        ...initialLayout.yaxis,\n        domain: [0.3, 0.45],\n        range: [-5, 5],\n        autorange: false,\n      },\n      yaxis3: { ...initialLayout.yaxis, domain: [0.15, 0.3] },\n      yaxis4: { ...initialLayout.yaxis, domain: [0, 0.15] },\n      xaxis: { ...initialLayout.xaxis },\n    },\n    separate: {\n      MACD0: {\n        data: [],\n        name: \"MACD LINE\",\n        marker: {\n          color: \"blue\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y2\",\n      },\n      MACDSIGNAL0: {\n        data: [],\n        name: \"MACD SIGNAL\",\n        xaxis: \"x\",\n        yaxis: \"y2\",\n        marker: {\n          color: \"black\",\n        },\n      },\n      MACDHIST0: {\n        data: [],\n        name: \"MACD HIST\",\n        type: \"bar\",\n        xaxis: \"x\",\n        yaxis: \"y3\",\n        markerFn: (MACDHIST0) => {\n          return {\n            color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\n          };\n        },\n      },\n      stochd0: {\n        data: [],\n        name: \"stochd\",\n        marker: {\n          color: \"rgb(153,42,173)\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y4\",\n      },\n\n      stochk0: {\n        data: [],\n        name: \"stochk\",\n        xaxis: \"x\",\n        yaxis: \"y4\",\n        marker: {\n          color: \"rgb(13,0,255)\",\n        },\n      },\n      line1: {\n        customLine: 20,\n        data: [],\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          dash: \"dash\",\n          width: 2,\n          color: \"red\",\n        },\n      },\n      line2: {\n        data: [],\n        customLine: 80,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line3: {\n        data: [],\n        customLine: 10,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line4: {\n        data: [],\n        customLine: 90,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n    },\n  },\n  {\n    name: \"T5\",\n    id: 5,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA 20\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA 50\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(255,0,56)\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA 100\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"rgb(13,190,58)\",\n        },\n      },\n      EMA3: {\n        data: [],\n        name: \"EMA 200\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n    },\n    separate: {\n      MACD0: {\n        data: [],\n        name: \"MACD LINE\",\n        marker: {\n          color: \"blue\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y2\",\n      },\n      MACDSIGNAL0: {\n        data: [],\n        name: \"MACD SIGNAL\",\n        xaxis: \"x\",\n        yaxis: \"y2\",\n        marker: {\n          color: \"black\",\n        },\n      },\n      MACDHIST0: {\n        data: [],\n        name: \"MACDHIST\",\n        type: \"bar\",\n        xaxis: \"x\",\n        yaxis: \"y3\",\n        markerFn: (MACDHIST0) => {\n          return {\n            color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\n          };\n        },\n      },\n      stochd0: {\n        data: [],\n        name: \"stochd\",\n        marker: {\n          color: \"rgb(153,42,173)\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y4\",\n      },\n      stochk0: {\n        data: [],\n        name: \"stochk\",\n        xaxis: \"x\",\n        yaxis: \"y4\",\n        marker: {\n          color: \"rgb(13,0,255)\",\n        },\n      },\n      line1: {\n        customLine: 20,\n        data: [],\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          dash: \"dash\",\n          width: 2,\n          color: \"red\",\n        },\n      },\n      line2: {\n        customLine: 80,\n        data: [],\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line3: {\n        data: [],\n        customLine: 10,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line4: {\n        data: [],\n        customLine: 90,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y4\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.5, 1] },\n      yaxis2: { ...initialLayout.yaxis, domain: [0.3, 0.45] },\n      yaxis3: { ...initialLayout.yaxis, domain: [0.15, 0.3] },\n      yaxis4: { ...initialLayout.yaxis, domain: [0, 0.15] },\n      xaxis: { ...initialLayout.xaxis },\n    },\n  },\n  {\n    name: \"T6\",\n    id: 6,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA 10\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA1: {\n        data: [],\n        name: \"EMA 11\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA2: {\n        data: [],\n        name: \"EMA 13\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      EMA3: {\n        data: [],\n        name: \"EMA 20\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA4: {\n        data: [],\n        name: \"EMA 22\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n      EMA5: {\n        data: [],\n        name: \"EMA 26\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"red\",\n        },\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.35, 1] },\n      yaxis2: { ...initialLayout.yaxis, domain: [0, 0.3] },\n      xaxis: { ...initialLayout.xaxis },\n    },\n    separate: {\n      HIST0: {\n        data: [],\n        type: \"bar\",\n        name: \"HIST0\",\n        markerFn: (HIST0) => {\n          return {\n            color: HIST0.map((m, i) =>\n              m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\n            ), //\"black\",\n          };\n        },\n        xaxis: \"x\",\n        yaxis: \"y2\",\n      },\n    },\n  },\n  {\n    name: \"T7\",\n    id: 7,\n    merged: {\n      EMA0: {\n        data: [],\n        name: \"EMA 5\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n      },\n      MA0: {\n        data: [],\n        name: \"MA 10\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n      MA1: {\n        data: [],\n        name: \"MA 30\",\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"black\",\n        },\n      },\n    },\n    separate: {\n      RSI0: {\n        data: [],\n        name: \"RSI(14)\",\n        marker: {\n          color: \"blue\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y2\",\n      },\n      line1: {\n        customLine: 60,\n        data: [],\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y2\",\n        line: {\n          dash: \"dashdot\",\n          width: 2,\n          color: \"green\",\n        },\n      },\n      line2: {\n        customLine: 40,\n        data: [],\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y2\",\n        line: {\n          color: \"red\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n\n      stochd0: {\n        data: [],\n        name: \"stochd\",\n        marker: {\n          color: \"rgb(153,42,173)\",\n        },\n        xaxis: \"x\",\n        yaxis: \"y3\",\n      },\n      stochk0: {\n        data: [],\n        name: \"stochk\",\n        xaxis: \"x\",\n        yaxis: \"y3\",\n        marker: {\n          color: \"rgb(13,0,255)\",\n        },\n      },\n      line3: {\n        data: [],\n        customLine: 10,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y3\",\n        line: {\n          color: \"blue\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line4: {\n        data: [],\n        customLine: 90,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y3\",\n        line: {\n          color: \"blue\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line5: {\n        data: [],\n        customLine: 20,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y3\",\n        line: {\n          color: \"blue\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n      line6: {\n        data: [],\n        customLine: 80,\n        mode: \"lines\",\n        xaxis: \"x\",\n        showlegend: false,\n        yaxis: \"y3\",\n        line: {\n          color: \"blue\",\n          dash: \"dash\",\n          width: 2,\n        },\n      },\n    },\n    layout: {\n      yaxis: { ...initialLayout.yaxis, domain: [0.55, 1] },\n      yaxis2: {\n        ...initialLayout.yaxis,\n        domain: [0.25, 0.5],\n        range: [20, 80],\n        autorange: false,\n      },\n      yaxis3: {\n        ...initialLayout.yaxis,\n        domain: [0, 0.25],\n      },\n      xaxis: { ...initialLayout.xaxis },\n    },\n  },\n];\n\n// export const strategies = [\n//   { value: \"double-close\", name: \"Double close\", columns: [\"Double close\"] },\n// ];\n","import axios from \"axios\";\n\nimport { getAllStocks } from \"../services/api\";\nimport { dummy, months, rightMargin } from \"./defaults\";\n\nfunction arrayMax(array) {\n    return array.reduce(function (a, b) {\n        return Math.max(a, b);\n    });\n}\n\nfunction arrayMin(array) {\n    return array.reduce(function (a, b) {\n        return Math.min(a, b);\n    });\n}\n\nexport const drawConfirmHighAndLow = (switchToggle, data, pointIndex) => {\n    return [\n        ...(switchToggle\n            ? [\n                  {\n                      x: data?.x,\n                      y: data?.ConfrimHigh.map((m, i) => {\n                          if (!m) return null;\n                          else return data.high[i];\n                      }),\n                      showlegend: false,\n                      name: data?.ConfrimHigh.map((m, i) => {\n                          if (!m) return null;\n                          else return \"Confirm High \" + data.high[pointIndex];\n                      }),\n                      mode: \"markers\",\n                      marker: {\n                          color: data?.ConfrimHigh.map((m, i) => {\n                              if (!m) return null;\n                              else {\n                                  if (data.is_closed_based[i]) return \"red\";\n                                  if (data.real_condition[i]) return \"black\";\n                                  if (data.insertion_condition[i])\n                                      return \"green\";\n                                  if (data.modified_condition[i])\n                                      return \"purple\";\n                                  else return null;\n                              }\n                          }),\n                          symbol: \"diamond\",\n                      },\n                      hoverinfo: \"skip\",\n                  },\n              ]\n            : []),\n        ...(switchToggle\n            ? [\n                  {\n                      x: data?.x,\n                      y: data.ConfrimLow.map((m, i) => {\n                          if (!m) return null;\n                          else return data.low[i];\n                      }),\n                      showlegend: false,\n                      name: \"Confirm Low \" + data.low[pointIndex],\n                      mode: \"markers\",\n                      marker: {\n                          color: data?.ConfrimLow.map((m, i) => {\n                              if (!m) return null;\n                              else {\n                                  if (data.is_closed_based[i]) return \"red\";\n                                  if (data.real_condition[i]) return \"black\";\n                                  if (data.insertion_condition[i])\n                                      return \"green\";\n                                  if (data.modified_condition[i])\n                                      return \"purple\";\n                                  else return null;\n                              }\n                          }),\n                          symbol: \"diamond\",\n                      },\n                      hoverinfo: \"skip\",\n                  },\n              ]\n            : []),\n    ];\n};\n\nexport const getMetaIndicatorColorName = (data, i, metaIndicator) => {\n    if (data?.[metaIndicator]?.[i]) {\n        if (data.is_closed_based[i]) return \"Closed Based\";\n        if (data.real_condition[i]) return \"Real Condition\";\n        if (data.insertion_condition[i]) return \"Insertion Condition\";\n        if (data.modified_condition[i]) return \"Modified Condition\";\n        return null;\n    }\n    return null;\n};\n\nexport const drawMergedChart = (selectedTemp, data, a, graphType) => {\n    let mergedCandles = [];\n    if (selectedTemp.id === 6) {\n        mergedCandles = [\n            {\n                ...dummy,\n                type: graphType,\n                name: \"Red price\",\n                high:\n                    data.elder_impulse_system &&\n                    data.elder_impulse_system.length\n                        ? data.realHigh &&\n                          data.realHigh.map((f_, iindex) => {\n                              if (!data.elder_impulse_system[iindex]) return f_;\n                              if (\n                                  data.elder_impulse_system[iindex].is_red === 1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : data.realHigh,\n                low: data.low,\n                open: data.open,\n                close: data.close,\n                decreasing: {\n                    fillcolor: \"red\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"red\" : \"black\",\n                        width: 1,\n                    },\n                },\n                increasing: {\n                    fillcolor: \"red\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"red\" : \"black\",\n                        width: 1,\n                    },\n                },\n                x: data.x,\n                ConfrimHigh: data.ConfrimHigh,\n                ConfrimLow: data.ConfrimLow,\n                patternData: data.patternData,\n            },\n            {\n                ...dummy,\n                type: graphType,\n                name: \"Green price\",\n                high:\n                    data.elder_impulse_system &&\n                    data.elder_impulse_system.length\n                        ? data.realHigh &&\n                          data.realHigh.map((f_, iindex) => {\n                              if (!data.elder_impulse_system[iindex]) return f_;\n                              if (\n                                  data.elder_impulse_system[iindex].is_green ===\n                                  1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : data.realHigh,\n                low: data.low,\n                open: data.open,\n                close: data.close,\n                decreasing: {\n                    fillcolor: \"green\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"green\" : \"black\",\n                        width: 1,\n                    },\n                },\n                increasing: {\n                    fillcolor: \"green\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"green\" : \"black\",\n                        width: 1,\n                    },\n                },\n                x: data.x,\n                ConfrimHigh: data.ConfrimHigh,\n                ConfrimLow: data.ConfrimLow,\n                patternData: data.patternData,\n            },\n        ];\n    }\n    return selectedTemp.merged && Object.keys(selectedTemp.merged).length\n        ? [\n              ...mergedCandles,\n              ...Object.keys(selectedTemp.merged).map((key) => {\n                  return {\n                      ...selectedTemp.merged[key],\n                      x: data?.x,\n                      y: selectedTemp.merged[key].data.map((m) => {\n                          if (!m) return null;\n                          else return m;\n                      }),\n                      name: `${selectedTemp.merged[key].name} ${selectedTemp.merged[key].data[a]}`,\n                      hoverinfo: \"x\",\n                  };\n              }),\n          ]\n        : [];\n};\n\nexport const drawSeparateChart = (selectedTemp, data, pointIndex) => {\n    return selectedTemp.separate && Object.keys(selectedTemp.separate).length\n        ? [\n              ...Object.keys(selectedTemp.separate).map((key) => {\n                  return {\n                      ...selectedTemp.separate[key],\n                      x: data?.x,\n                      y: selectedTemp.separate[key].data.map((m) => {\n                          if (!m) return null;\n                          else return m;\n                      }),\n                      ...(selectedTemp.separate[key].markerFn\n                          ? {\n                                marker: selectedTemp.separate[key].markerFn(\n                                    selectedTemp.separate[key].data,\n                                    data\n                                ),\n                            }\n                          : {}),\n                      name: `${selectedTemp.separate[key].name} ${selectedTemp.separate[key].data[pointIndex]}`,\n                      hoverinfo: \"x\",\n                  };\n              }),\n          ]\n        : [];\n};\n\nexport const drawStrategiesBar = (strategiesData, data) => {\n    let dateIndex =\n        strategiesData &&\n        data.patternData.findLastIndex((f) => {\n            return Object.values(f).includes(1);\n        });\n\n    return strategiesData && dateIndex >= 0\n        ? [\n              {\n                  type: \"rect\",\n                  text: \"ddd\",\n                  x0: dateIndex - 0.5,\n                  y0: 0,\n                  x1: dateIndex + 0.5,\n                  yref: \"paper\",\n                  y1: 1,\n                  line: {\n                      color: \"#ffff00\",\n                      width: 1.5,\n                  },\n                  hoverinfo: \"x\",\n                  fillcolor: \"#ffff00\",\n                  opacity: 0.6,\n              },\n          ]\n        : [];\n};\n\nexport const drawFirstDateLine = (toggleFirstDayLine, data) => {\n    return toggleFirstDayLine\n        ? data.x\n              .slice(0, data.x.length - rightMargin)\n              .map((dateStr, dateIndex) => {\n                  let date_ = new Date(dateStr);\n                  let date1 = date_.getDate();\n                  let date2 = new Date(data.x[dateIndex - 1]).getDate();\n                  let date3 = new Date(data.x[dateIndex - 2]).getDate();\n\n                  if (\n                      date1 === 1 ||\n                      (date1 === 2 && date2 !== 1) ||\n                      (date1 === 3 && date3 !== 1 && date2 !== 2)\n                  ) {\n                      return {\n                          type: \"line\",\n                          text: \"ddd\",\n                          x0: String(dateStr),\n                          y0: 0,\n                          x1: String(dateStr),\n                          yref: \"paper\",\n                          y1: 1,\n                          line: {\n                              color: \"grey\",\n                              width: 1.5,\n                              dash: \"dot\",\n                          },\n                          hoverinfo: \"x\",\n                      };\n                  }\n                  return null;\n              })\n        : [];\n};\n\nexport function getDataRequestService(\n    selectedCategory,\n    setLoader,\n    layout,\n    setSelectedTemp,\n    setGraphData,\n    setLayout,\n    graphType,\n    enableDualChart,\n    sidebarWidth,\n    dataBaseUrl,\n    selectedStrategy,\n    setStrategiesData,\n    strategiesData\n) {\n    return async (\n        stock,\n        time,\n        template,\n        pattern,\n        meta_trader_indicator,\n        data\n    ) => {\n        document.querySelector('[data-title=\"Autoscale\"]')?.click();\n        let strategiesLength = selectedStrategy?.length;\n\n        if (strategiesLength) {\n            let currStrategy = selectedStrategy[strategiesLength - 1];\n            setLoader(true);\n            let stra = await axios.get(\n                `stocks/get_strategy_watchlist?watch_list=${selectedCategory}&interval=${time.name}&strategy_name=${currStrategy}`\n            );\n            setLoader(false);\n\n            setStrategiesData(\n                [\n                    ...new Map(\n                        [\n                            ...strategiesData,\n                            { data: stra.data.data, name: currStrategy },\n                        ].map((item) => [item[\"name\"], item])\n                    ).values(),\n                ].filter((f) => selectedStrategy.includes(f.name))\n            );\n        } else {\n            setStrategiesData(\n                strategiesData.filter((f) => {\n                    return selectedStrategy.find((ii) => ii === f.name);\n                })\n            );\n        }\n\n        if (!selectedCategory || !stock?.name || stock?.selectedSource) {\n            return;\n        }\n        setLoader(true);\n\n        let url =\n            strategiesLength > 0\n                ? `stocks/strategy_data_against_symbol`\n                : `stocks${\n                      dataBaseUrl || \"\"\n                  }?category=${selectedCategory}&symbol=${stock.name?.toLowerCase()}&source=${\n                      stock?.selectedSource ||\n                      (stock?.sources?.length && stock.sources[0])\n                  }&interval=${time.name}`;\n\n        if (strategiesLength <= 0) {\n            if (template && template?.id > 0) {\n                url = url + `&template=${template.id}`;\n            }\n            if (pattern?.length) {\n                url = url + `&pattern=${pattern}`;\n            }\n            if (meta_trader_indicator) {\n                url = url + `&meta_template=${meta_trader_indicator}`;\n            }\n        }\n\n        await getAllStocks(url, strategiesLength ? \"post\" : null, {\n            watch_list: selectedCategory,\n            interval: time.name,\n            symbol: stock.name?.toLowerCase(),\n            strategies: selectedStrategy,\n            source:\n                stock?.selectedSource ||\n                (stock?.sources?.length && stock.sources[0]),\n        })\n            .then((res) => {\n                setLoader(false);\n                let pattern_name_list = res.data?.patterns_list;\n                let responseData = [...res?.data?.data];\n\n                let high = [];\n                let low = [];\n                let open = [];\n                let close = [];\n                let x = [];\n                let patternData = [];\n                let patternTrigger = [];\n\n                let elder_impulse_system = [];\n                let ConfrimHigh = [];\n                let ConfrimLow = [];\n                let real_condition = [];\n                let is_closed_based = [];\n                let insertion_condition = [];\n                let modified_condition = [];\n\n                let tempMerged = template && template.merged;\n                let resMerged = tempMerged;\n\n                Object.keys(tempMerged).length &&\n                    Object.keys(tempMerged).forEach((key) => {\n                        resMerged[key].data = [];\n                    });\n\n                let tempSeparate = template && template.separate;\n                let resSeparate = tempSeparate;\n\n                Object.keys(tempSeparate).length &&\n                    Object.keys(tempSeparate).forEach((key) => {\n                        resSeparate[key].data = [];\n                    });\n\n                responseData?.forEach((_m, ith) => {\n                    let m = _m;\n                    high.push(m.high);\n                    low.push(m.low);\n                    open.push(m.open);\n                    close.push(m.close);\n                    x.push(new Date(m.date).toUTCString());\n\n                    if (meta_trader_indicator) {\n                        ConfrimHigh.push(m[\"meta-indicators\"][\"Confrim High\"]);\n                        ConfrimLow.push(m[\"meta-indicators\"][\"Confrim Low\"]);\n                        insertion_condition.push(m[\"insertion_condition\"]);\n                        is_closed_based.push(m[\"is_closed_based\"]);\n                        real_condition.push(m[\"real_condition\"]);\n                        modified_condition.push(m[\"modified_condition\"]);\n                    }\n\n                    if (\n                        (m[pattern]?.pattern_end !== undefined ||\n                            m[pattern]?.trigger_value !== undefined) &&\n                        m[pattern]?.trigger !== undefined &&\n                        pattern !== \"All High/Low Patterns\"\n                    ) {\n                        let patternObj = {\n                            trigger: m[pattern]?.trigger,\n                            trigger_value: m[pattern]?.trigger_value,\n                            trigger_value_max: m[pattern]?.trigger_value_max,\n                            trigger_value_min: m[pattern]?.trigger_value_min,\n                        };\n                        if (m[pattern]?.trigger_failure) {\n                            patternObj = {\n                                ...patternObj,\n                                trigger_failure: m[pattern]?.trigger_failure,\n                                trigger_failure_value:\n                                    m[pattern]?.trigger_failure_value,\n                            };\n                        }\n                        if (\n                            pattern === \"All Failure Patterns\" ||\n                            isT3Pattern(pattern)\n                        ) {\n                            patternData.push(m[pattern]);\n                        } else {\n                            patternData.push(m[pattern]?.pattern_end);\n                        }\n                        patternTrigger.push(patternObj);\n                    } else if (m[pattern] !== undefined) {\n                        patternData.push(m[pattern]);\n                    }\n\n                    if (selectedStrategy.length) {\n                        let arrowPattern = {};\n                        let crossPattern = {};\n                        pattern_name_list.forEach((straIns) => {\n                            if (\n                                (m[straIns]?.pattern_end !== undefined ||\n                                    m[straIns]?.trigger_value !== undefined) &&\n                                m[straIns]?.trigger !== undefined\n                            ) {\n                                crossPattern[straIns] = {\n                                    trigger: m[straIns]?.trigger,\n                                    trigger_value: m[straIns]?.trigger_value,\n                                    trigger_value_max:\n                                        m[straIns]?.trigger_value_max,\n                                    trigger_value_min:\n                                        m[straIns]?.trigger_value_min,\n                                };\n                                arrowPattern[straIns] = m[straIns]?.pattern_end;\n                            }\n                        });\n                        patternData.push({\n                            ...arrowPattern,\n                            // ...(addPreviousStrategy ? data.patternData[ith] : []),\n                        });\n                        patternTrigger.push({\n                            ...crossPattern,\n                            // ...(addPreviousStrategy ? data.patternTrigger[ith] : []),\n                        });\n                    }\n\n                    if (template) {\n                        tempMerged &&\n                            Object.keys(tempMerged).length &&\n                            Object.keys(tempMerged).forEach((key) => {\n                                resMerged[key].data = [\n                                    ...resMerged[key].data,\n                                    m.indicators[key],\n                                ];\n                            });\n\n                        tempSeparate &&\n                            Object.keys(tempSeparate).length &&\n                            Object.keys(tempSeparate).forEach((key) => {\n                                resSeparate[key].data = [\n                                    ...resSeparate[key].data,\n                                    resSeparate[key].customLine\n                                        ? resSeparate[key].customLine\n                                        : m.indicators[key],\n                                ];\n                            });\n\n                        if (template.id === 6) {\n                            elder_impulse_system.push(\n                                m.indicators?.elder_impulse_system\n                            );\n                        }\n                    }\n                });\n                let tempLayout = { ...layout, ...template.layout };\n                for (let i = 0; i < rightMargin; i++) {\n                    high.push(null);\n                    low.push(null);\n                    open.push(null);\n                    close.push(null);\n                    x.push(\n                        new Date(\n                            Date.now(x[x.length - 1]) + (i + 1) * time.ms\n                        ).toUTCString()\n                    );\n                    if (template) {\n                        tempMerged &&\n                            Object.keys(tempMerged).forEach((key) => {\n                                resMerged[key].data = [\n                                    ...resMerged[key].data,\n                                    null,\n                                ];\n                            });\n\n                        tempSeparate &&\n                            Object.keys(tempSeparate).forEach((key) => {\n                                resSeparate[key].data = [\n                                    ...resSeparate[key].data,\n                                    null,\n                                ];\n                            });\n                    }\n                }\n\n                if (template) {\n                    setSelectedTemp({\n                        ...template,\n                        merged: resMerged,\n                        separate: resSeparate,\n                    });\n                }\n\n                setGraphData({\n                    ...dummy,\n                    realHigh: high,\n                    high: elder_impulse_system.length\n                        ? high.map((f_, iindex) => {\n                              if (!elder_impulse_system[iindex]) return f_;\n                              if (\n                                  elder_impulse_system[iindex].is_red !== 1 ||\n                                  elder_impulse_system[iindex].is_green !== 1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : high,\n                    low,\n                    open,\n                    close,\n                    x,\n                    hovertext: high,\n                    increasing:\n                        template.id === 6\n                            ? {\n                                  fillcolor: \"blue\",\n                                  line: {\n                                      color:\n                                          graphType === \"ohlc\"\n                                              ? \"blue\"\n                                              : \"black\",\n                                      width: 1,\n                                  },\n                              }\n                            : dummy.increasing,\n                    decreasing:\n                        template.id === 6\n                            ? {\n                                  fillcolor: \"blue\",\n                                  line: {\n                                      color:\n                                          graphType === \"ohlc\"\n                                              ? \"blue\"\n                                              : \"black\",\n                                      width: 1,\n                                  },\n                              }\n                            : dummy.decreasing,\n                    ConfrimHigh,\n                    ConfrimLow,\n                    patternData,\n                    patternTrigger,\n                    pattern_name_list:\n                        selectedStrategy.length > 0\n                            ? [\n                                  ...(data?.pattern_name_list || []),\n                                  ...(pattern_name_list || []),\n                              ]\n                            : null,\n                    strategiesData: selectedStrategy.length ? true : false,\n                    elder_impulse_system,\n                    max: arrayMax(high),\n                    min: arrayMin(low.filter((f) => f !== 0 && f !== null)),\n                    insertion_condition,\n                    is_closed_based,\n                    real_condition,\n                    modified_condition,\n                });\n                setLayout({\n                    ...tempLayout,\n                    width: enableDualChart\n                        ? (window.innerWidth - sidebarWidth) / 2\n                        : window.innerWidth - sidebarWidth,\n                    dualChartSet: enableDualChart,\n                    height: window.innerHeight - 80,\n                    xaxis: {\n                        ...layout.xaxis,\n                        rangeslider: {\n                            visible: false,\n                        },\n                        autorange: false,\n                        range: [x.length - 280, x.length - 1],\n                        tickvals: [\n                            ...x.filter((f, i) => {\n                                return i % 15 === 0;\n                            }),\n                        ],\n                        ticktext: [\n                            ...x\n                                .filter((f, i) => {\n                                    return i % 15 === 0;\n                                })\n                                .map((m) => {\n                                    let d = new Date(m);\n                                    return (\n                                        months[d.getMonth()] +\n                                        \" \" +\n                                        d.getUTCFullYear()\n                                    );\n                                }),\n                        ],\n                    },\n                    shapes: [\n                        ...high.map((shp, i) => {\n                            if (patternData[i]) {\n                                let lowP = Math.min(\n                                    ...[low[i], high[i], open[i], close[i]]\n                                );\n                                let highP = Math.max(\n                                    ...[low[i], high[i], open[i], close[i]]\n                                );\n                                let x0 = String(\n                                    new Date(x[i - 1]).toUTCString()\n                                );\n                                let x1 = String(\n                                    new Date(x[i + 1]).toUTCString()\n                                );\n                                return {\n                                    type: \"rect\",\n                                    xref: \"x\",\n                                    yref: \"y\",\n                                    x0: x0,\n                                    y0: lowP,\n                                    x1,\n                                    width: 1,\n                                    y1: highP,\n                                    fillcolor: \"yellow\",\n                                    opacity: 0.6,\n                                    rightMargin: 3,\n                                    line: {\n                                        width: 2,\n                                        color:\n                                            open[i] < close[i]\n                                                ? \"green\"\n                                                : \"red\",\n                                        opacity: 1,\n                                    },\n                                    hoverinfo: \"x\",\n                                };\n                            }\n                            return null;\n                        }),\n                    ],\n                });\n            })\n            .catch((err) => {\n                console.log(\"err\", err);\n                setLoader(false);\n                setGraphData(null);\n            });\n    };\n}\n\nexport const OHLC_ICON = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 28 28\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"currentColor\"\n    >\n        <path d=\"M17 11v6h3v-6h-3zm-.5-1h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5z\"></path>\n        <path d=\"M18 7h1v3.5h-1zm0 10.5h1V21h-1z\"></path>\n        <path d=\"M9 8v12h3V8H9zm-.5-1h4a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5z\"></path>\n        <path d=\"M10 4h1v3.5h-1zm0 16.5h1V24h-1z\"></path>\n    </svg>\n);\n\nexport const BAR_ICON = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 28 28\"\n        width=\"24\"\n        height=\"24\"\n    >\n        <g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\">\n            <path d=\"M10.5 7.5v15M7.5 20.5H10M13.5 11.5H11M19.5 6.5v15M16.5 9.5H19M22.5 16.5H20\"></path>\n        </g>\n    </svg>\n);\n\nexport const getTimeforSecondaryGraph = (time) => {\n    switch (time.name) {\n        case \"1d\":\n        case \"2d\":\n        case \"3d\":\n            return { name: \"1wk\", desc: \"1 Week\", ms: 604800000 };\n        case \"1wk\":\n        case \"2wk\":\n            return { name: \"1mo\", desc: \"1 Month\", ms: 2629746000 * 1 };\n        default:\n            return { name: \"1d\", desc: \"1 Day\", ms: 86400000 * 1 };\n    }\n};\n\nexport const getOccuredReversalPatterns = (\n    patternData,\n    pointIndex,\n    pattern,\n    data\n) => {\n    let keys =\n        patternData &&\n        patternData.length &&\n        Object.keys(patternData[0]).filter((f) => {\n            return ![\n                \"trigger\",\n                \"trigger_failure\",\n                \"trigger_failure_value\",\n                \"trigger_value\",\n            ].find((t) => t === f);\n        });\n    let occured = \"\";\n    patternData.length &&\n        Array.isArray(keys) &&\n        keys.forEach((key, i) => {\n            if (\n                isT3Pattern(pattern)\n                    ? patternData?.[pointIndex]?.[\"pattern_end\"] &&\n                      patternData?.[pointIndex]?.[key] &&\n                      key !== \"pattern_end\"\n                    : patternData?.[pointIndex]?.[key]\n            ) {\n                if (occured.length > 0) occured += \", \";\n                occured += key;\n            }\n        });\n    return (\n        (isT3Pattern(pattern) && occured ? `${pattern} - ` : \"\") +\n        occured +\n        (pattern === \"All Failure Patterns\" && occured\n            ? data.close[pointIndex] > data.open[pointIndex]\n                ? \" - Bullish\"\n                : \" - Bearish\"\n            : \"\")\n    );\n};\n\nexport const isT3Pattern = (pattern) => {\n    const T3Patterns = [\n        \"T3 Down\",\n        \"T3 Up\",\n        \"T3 Sell\",\n        \"T3 Buy\",\n        \"T3 Turn Down\",\n        \"T3 Turn Up\",\n        \"T3 Rev Up\",\n        \"T3 Rev Down\",\n        \"T3 Bull Now\",\n        \"T3 Bear Now\",\n        \"T3 Up Down\",\n        \"T3 Down Up\",\n    ];\n\n    return T3Patterns.includes(pattern);\n};\n","import { isT3Pattern } from \"./utils\";\n\nexport const drawPatternData = (data, selectedPattern, strategiesData) => {\n    if (selectedPattern === \"All Failure Patterns\") {\n        return [];\n    }\n    let patterns = data.patternData;\n    if (\n        selectedPattern === \"All Reversal Patterns\" ||\n        isT3Pattern(selectedPattern) ||\n        selectedPattern === \"All High/Low Patterns\" ||\n        strategiesData\n    ) {\n        patterns = data.patternData && data.patternData[0];\n        let keys =\n            data?.pattern_name_list ||\n            (patterns && Object.keys(patterns))?.filter((f) => {\n                return ![\n                    \"trigger\",\n                    \"trigger_failure\",\n                    \"trigger_failure_value\",\n                    \"trigger_value\",\n                ].find((t) => t === f);\n            });\n        patterns = data.patternData.map((m) => {\n            let ans = 0;\n            if (Array.isArray(keys)) {\n                for (let key of keys) {\n                    if (m[key]) {\n                        ans = isT3Pattern(selectedPattern)\n                            ? m?.[\"pattern_end\"]\n                            : 1;\n                        break;\n                    }\n                }\n            }\n            return ans;\n        });\n    }\n    return patterns?.length\n        ? [\n              {\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      let perc10 = ((data.max - data.min) / 100) * 2.5;\n                      if (m) {\n                          if (data.close[i] > data.open[i]) {\n                              return Number(data.low[i]) - perc10;\n                          } else {\n                              return Number(data.high[i]) + perc10;\n                          }\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m) {\n                              if (selectedPattern === \"All High/Low Patterns\") {\n                                  return \"red\";\n                              }\n                              if (data.close[i] < data.open[i]) {\n                                  return \"red\";\n                              }\n                              return \"green\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m) {\n                              if (selectedPattern === \"All High/Low Patterns\") {\n                                  return \"x\";\n                              }\n                              if (data.close[i] < data.open[i]) {\n                                  return \"triangle-down\";\n                              }\n                              return \"triangle-up\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n          ]\n        : [];\n};\n\nexport const drawPatternTriggers = (data, strategiesData) => {\n    let patterns = data.patternTrigger;\n\n    if (strategiesData) {\n        let keys =\n            data.pattern_name_list ||\n            (patterns && Object.keys(patterns))?.filter((f) => {\n                return ![\n                    \"trigger\",\n                    \"trigger_failure\",\n                    \"trigger_failure_value\",\n                    \"trigger_value\",\n                ].find((t) => t === f);\n            });\n        patterns = data.patternTrigger.map((m) => {\n            let ans = null;\n            if (Array.isArray(keys)) {\n                for (let key of keys) {\n                    if (m[key]?.trigger) {\n                        ans = m[key];\n                        break;\n                    }\n                }\n            }\n            return ans;\n        });\n    }\n\n    return patterns?.length\n        ? [\n              {\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      if (m?.trigger) {\n                          return Number(m.trigger_value);\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m?.trigger) {\n                              return \"red\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m?.trigger) {\n                              return \"x\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n              {\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      let perc10 = ((data.max - data.min) / 100) * 2.5;\n                      if (m?.trigger_failure) {\n                          if (data.close[i] > data.open[i]) {\n                              return m?.trigger_failure_value - perc10;\n                          } else {\n                              return m.trigger_failure_value + perc10;\n                          }\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m?.trigger_failure) {\n                              if (data.close[i] < data.open[i]) {\n                                  return \"red\";\n                              }\n                              return \"green\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m?.trigger_failure) {\n                              if (data.close[i] < data.open[i]) {\n                                  return \"triangle-down\";\n                              }\n                              return \"triangle-up\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n          ]\n        : [];\n};\n","import * as Plotly from \"plotly.js\";\nimport React, { useEffect, useState } from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nimport { drawFirstDateLine, drawStrategiesBar } from \"../Utils/utils\";\n\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({\n  data,\n  layout,\n  templates,\n  loader,\n  separateGraphs,\n  onHover,\n  onUnhover,\n  onClick,\n  toggleFirstDayLine,\n  onDoubleClick,\n  id,\n  setLayout,\n  dualChartWidth,\n  sidebarWidth,\n  selectedStrategy,\n}) => {\n  document\n    .querySelector('[data-title=\"Autoscale\"]')\n    ?.addEventListener(\"onclick\", function (event) {});\n  let [bottomTemplate, setBottomTemplates] = useState([]);\n  useEffect(() => {\n    let temp = [];\n    separateGraphs?.length &&\n      separateGraphs.forEach((spG) => {\n        temp.push(spG);\n        spG?.templates?.length &&\n          spG.templates?.forEach((t) => {\n            temp.push(t);\n          });\n      });\n    setBottomTemplates(temp);\n  }, [separateGraphs]);\n\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        id={id}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        onHover={onHover}\n        onUnhover={onUnhover}\n        data={[data, ...(templates || []), ...bottomTemplate]}\n        layout={{\n          ...layout,\n          shapes: [\n            ...drawFirstDateLine(toggleFirstDayLine, data),\n            ...(selectedStrategy.length < 2\n              ? drawStrategiesBar(data.strategiesData, data)\n              : []),\n          ],\n        }}\n        config={{\n          scrollZoom: true,\n        }}\n        useResizeHandler={true}\n        onRelayout={(e) => {\n          if (e[\"xaxis.autorange\"]) {\n            setLayout({\n              ...layout,\n              xaxis: {\n                ...layout.xaxis,\n                autorange: false,\n                range: [data.x.length - 280, data.x.length - 1],\n              },\n              width: window.innerWidth - dualChartWidth - sidebarWidth,\n              shapes: [\n                ...drawFirstDateLine(toggleFirstDayLine, data),\n                ...drawStrategiesBar(data.strategiesData, data),\n              ],\n            });\n          }\n        }}\n      />\n    );\n};\n","import React from \"react\";\n\nconst InfoLines = ({\n  selectedStock,\n  ohlc: { high, low, open, close, ConfrimLow, ConfrimHigh },\n  selectedPattern,\n  selectedTime,\n  patternTrigger,\n}) => {\n  return (\n    <div style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\n      {selectedStock && (\n        <div>\n          {selectedStock.name} - {selectedStock.description || \"description\"}\n          {\" - \"}\n          {selectedStock.sources.length &&\n            String(selectedStock.sources[0]).toUpperCase()}\n          {\" - \"}\n          {selectedTime.desc}\n        </div>\n      )}\n      <div>\n        Open: {open} High: {high} Low: {low} Close: {close}\n      </div>\n      {selectedPattern || patternTrigger ? (\n        <div>Pattern: {selectedPattern}</div>\n      ) : (\n        <></>\n      )}\n      {ConfrimLow ? (\n        <div>\n          Confirm Low: {ConfrimLow} - {low}\n        </div>\n      ) : (\n        <></>\n      )}\n      {ConfrimHigh ? (\n        <div>\n          Confirm High: {ConfrimHigh} - {high}\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default InfoLines;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { dummy } from \"../Utils/defaults\";\nimport { drawPatternData, drawPatternTriggers } from \"../Utils/patternUtils\";\nimport {\n    drawConfirmHighAndLow,\n    drawMergedChart,\n    drawSeparateChart,\n    getDataRequestService,\n    getMetaIndicatorColorName,\n    getOccuredReversalPatterns,\n    isT3Pattern,\n} from \"../Utils/utils\";\nimport { Graph } from \"./Graph\";\nimport InfoLines from \"./InfoLines\";\n\nexport function DefaultChart({\n    onHover,\n    onUnhover,\n    onClick,\n    pointIndex,\n    graphType,\n    style,\n    layout,\n    toggleFirstDayLine,\n    switchToggle,\n    selectedTemp,\n    selectedPattern,\n    type,\n    onDoubleClick,\n    selectedStock,\n    selectedTime,\n    selectedCategory,\n    id,\n    setLayout,\n    selectedStrategy,\n    enableDualChart,\n    sidebarWidth,\n    dualChartWidth,\n    dataBaseUrl,\n    setStrategiesData,\n    strategiesData,\n}) {\n    const [data, setGraphData] = useState({ ...dummy });\n    const [currentSelectedTemp, setCurrentSelectedTemp] =\n        useState(selectedTemp);\n\n    useEffect(() => {\n        setCurrentSelectedTemp(selectedTemp);\n    }, [selectedTemp]);\n\n    const [loader, setLoader] = useState(false);\n    const prevCountRef = useRef();\n\n    const getDataRequest = getDataRequestService(\n        selectedCategory,\n        setLoader,\n        layout,\n        setCurrentSelectedTemp,\n        setGraphData,\n        setLayout,\n        graphType,\n        enableDualChart,\n        sidebarWidth,\n        dataBaseUrl,\n        selectedStrategy,\n        setStrategiesData,\n        strategiesData\n    );\n\n    useEffect(() => {\n        let addPreviousStrategy = true;\n        if (selectedStock !== prevCountRef.current) {\n            addPreviousStrategy = false;\n        }\n        prevCountRef.current = selectedStock;\n\n        selectedTime &&\n            getDataRequest(\n                selectedStock,\n                selectedTime,\n                currentSelectedTemp,\n                selectedPattern,\n                switchToggle,\n                data,\n                addPreviousStrategy\n            );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        selectedStock,\n        selectedTime,\n        selectedCategory,\n        selectedPattern,\n        switchToggle,\n        currentSelectedTemp.id,\n        graphType,\n        enableDualChart,\n        selectedStrategy,\n    ]);\n\n    return data && data?.x?.length ? (\n        <>\n            <InfoLines\n                selectedStock={selectedStock}\n                ohlc={{\n                    high: data.high[pointIndex],\n                    low: data.low[pointIndex],\n                    open: data.open[pointIndex],\n                    close: data.close[pointIndex],\n                    ConfrimHigh: getMetaIndicatorColorName(\n                        data,\n                        pointIndex,\n                        \"ConfrimHigh\"\n                    ),\n                    ConfrimLow: getMetaIndicatorColorName(\n                        data,\n                        pointIndex,\n                        \"ConfrimLow\"\n                    ),\n                }}\n                selectedPattern={\n                    (data.patternData[pointIndex]\n                        ? selectedPattern === \"All Reversal Patterns\" ||\n                          selectedPattern === \"All Failure Patterns\" ||\n                          isT3Pattern(selectedPattern) ||\n                          selectedPattern === \"All High/Low Patterns\" ||\n                          data.strategiesData\n                            ? getOccuredReversalPatterns(\n                                  data.patternData,\n                                  pointIndex,\n                                  selectedPattern,\n                                  data\n                              )\n                            : selectedPattern\n                        : undefined) ||\n                    (data?.patternTrigger[pointIndex]?.trigger_failure\n                        ? selectedPattern\n                        : undefined)\n                }\n                patternTrigger={\n                    data?.patternTrigger[pointIndex]?.trigger_failure\n                }\n                selectedTime={selectedTime}\n                pointIndex={pointIndex}\n                data={data}\n            />\n            <Graph\n                id={id}\n                onHover={onHover}\n                onUnhover={onUnhover}\n                onClick={onClick}\n                onDoubleClick={() => onDoubleClick(type)}\n                style={{ ...style, border: \"1px solid red\" }}\n                data={{ ...data, type: graphType }}\n                layout={layout}\n                toggleFirstDayLine={toggleFirstDayLine}\n                templates={[\n                    ...drawMergedChart(\n                        currentSelectedTemp,\n                        data,\n                        pointIndex,\n                        graphType\n                    ), //templates T1 , T2 , T3\n                    ...drawConfirmHighAndLow(switchToggle, data, pointIndex), //0 1 2 3\n                    ...(drawPatternData(\n                        data,\n                        selectedPattern,\n                        data.strategiesData\n                    ) || []),\n                    ...(drawPatternTriggers(data, data.strategiesData) || []),\n                ]}\n                separateGraphs={[\n                    ...drawSeparateChart(\n                        currentSelectedTemp,\n                        data,\n                        pointIndex,\n                        graphType\n                    ),\n                ]}\n                loader={loader}\n                setLayout={setLayout}\n                dualChartWidth={dualChartWidth}\n                sidebarWidth={sidebarWidth}\n                selectedStrategy={selectedStrategy}\n            />\n        </>\n    ) : (\n        <></>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { getTimeforSecondaryGraph } from \"../Utils/utils\";\nimport { DefaultChart } from \"./DefaultChart\";\n\nconst style = { width: \"100%\", height: \"100%\" };\n\nconst GraphRenderer = ({\n  layout,\n  enableDualChart,\n  graphType,\n  selectedTemp,\n  separateGraphs,\n  toggleFirstDayLine,\n  switchToggle,\n  selectedPattern,\n  setLayout,\n  selectedStock,\n  selectedTime,\n  selectedCategory,\n  selectedStrategy,\n  sidebarWidth,\n  secondaryLayout,\n  setSecondaryLayout,\n  dataBaseUrl,\n  setStrategiesData,\n  strategiesData,\n}) => {\n  const [secondaryChartTime, setSecondayChartTime] = useState(null);\n\n  useEffect(() => {\n    let t = getTimeforSecondaryGraph(selectedTime);\n    setSecondayChartTime(enableDualChart ? t : selectedTime);\n  }, [selectedTime, enableDualChart]);\n\n  const [cursor, setCursor] = useState(\"crosshair\");\n  const [currentSelected, setCurrentSelected] = useState(\"\");\n  const [pointIndex, setPointIndex] = useState(1);\n\n  const onHover = ({ points: [point] }) => {\n    setPointIndex(point.pointIndex);\n    setCursor(\"crosshair\");\n  };\n  const onUnhover = () => {\n    setCursor(\"crosshair\");\n  };\n  const onClick = () => {\n    setCursor(\"grabbing\");\n  };\n\n  const dualChartRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [dualChartWidth, setDualChartWidth] = useState(0);\n\n  const stopResizing = React.useCallback(() => {\n    setIsResizing(false);\n  }, []);\n  const startResizing = React.useCallback((mouseDownEvent) => {\n    setIsResizing(true);\n  }, []);\n\n  const resize = React.useCallback(\n    (mouseMoveEvent) => {\n      if (isResizing) {\n        document.querySelector('[data-title=\"Autoscale\"]')?.click();\n        let w =\n          window.innerWidth -\n          (dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX) -\n          10;\n\n        setLayout({\n          ...layout,\n          width: w,\n          height: window.innerHeight - 80,\n        });\n        setSecondaryLayout({\n          ...secondaryLayout,\n          width:\n            dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX -\n            10,\n          height: window.innerHeight - 80,\n        });\n        setDualChartWidth(\n          dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX\n        );\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isResizing, sidebarWidth]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", resize);\n    window.addEventListener(\"mouseup\", stopResizing);\n    return () => {\n      window.removeEventListener(\"mousemove\", resize);\n      window.removeEventListener(\"mouseup\", stopResizing);\n    };\n  }, [resize, stopResizing]);\n\n  return layout ? (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          height: \"100vh\",\n          overflowY: \"hidden\",\n          overflowX: \"hidden\",\n        }}\n      >\n        <div\n          id=\"default-chart\"\n          style={{\n            cursor,\n            marginTop: \"52px\",\n            border:\n              currentSelected === \"default\" ? \"4px solid #438695\" : \"none\",\n          }}\n        >\n          <DefaultChart\n            type=\"default\"\n            onHover={onHover}\n            onDoubleClick={(e) => setCurrentSelected(e)}\n            onUnhover={onUnhover}\n            onClick={onClick}\n            pointIndex={pointIndex}\n            graphType={graphType}\n            style={style}\n            enableDualChart={enableDualChart}\n            selectedTemp={selectedTemp}\n            layout={layout}\n            toggleFirstDayLine={toggleFirstDayLine}\n            switchToggle={switchToggle}\n            selectedPattern={selectedPattern}\n            separateGraphs={separateGraphs}\n            selectedStock={selectedStock}\n            id={\"default\"}\n            selectedTime={secondaryChartTime}\n            selectedCategory={selectedCategory}\n            setLayout={setLayout}\n            selectedStrategy={selectedStrategy}\n            sidebarWidth={sidebarWidth}\n            dualChartWidth={dualChartWidth}\n            dataBaseUrl={dataBaseUrl}\n            setStrategiesData={setStrategiesData}\n            strategiesData={strategiesData}\n          />\n        </div>\n      </div>\n      {enableDualChart && (\n        <div\n          ref={dualChartRef}\n          className=\"app-dualchart\"\n          style={{\n            width: secondaryLayout.width + 10 + \"px\",\n            marginTop: \"52px\",\n          }}\n          onMouseDown={(e) => e.preventDefault()}\n        >\n          <div className=\"app-dualchart-resizer\" onMouseDown={startResizing} />\n          <div className=\"app-dualchart-content\">\n            <div\n              id=\"secondary-chart\"\n              style={{\n                cursor,\n                border:\n                  currentSelected === \"secondary\"\n                    ? \"4px solid #438695\"\n                    : \"none\",\n              }}\n            >\n              <DefaultChart\n                type=\"secondary\"\n                onHover={onHover}\n                onDoubleClick={(e) => setCurrentSelected(e)}\n                graphType={graphType}\n                style={style}\n                enableDualChart={enableDualChart}\n                selectedTemp={selectedTemp}\n                layout={secondaryLayout}\n                toggleFirstDayLine={toggleFirstDayLine}\n                switchToggle={switchToggle}\n                selectedPattern={selectedPattern}\n                onUnhover={onUnhover}\n                onClick={onClick}\n                pointIndex={pointIndex}\n                separateGraphs={separateGraphs}\n                selectedStock={selectedStock}\n                id={\"secondary\"}\n                selectedTime={selectedTime}\n                selectedCategory={selectedCategory}\n                setLayout={setSecondaryLayout}\n                selectedStrategy={selectedStrategy}\n                sidebarWidth={sidebarWidth}\n                dualChartWidth={dualChartWidth}\n                dataBaseUrl={dataBaseUrl}\n                setStrategiesData={setStrategiesData}\n                strategiesData={strategiesData}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default GraphRenderer;\n","import { Autocomplete, Paper, TextField } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst CustomPaper = (props) => {\n  return <Paper elevation={8} {...props} />;\n};\nconst AutocompleteWrapper = ({\n  options,\n  value,\n  label,\n  handleChange,\n  selectedStock,\n  getOptionLabel,\n  renderOption,\n  multiple,\n  renderInput,\n}) => {\n  const [openPatternDropdown, setOpenPatternDropdown] = useState(false);\n  let patternRef = useRef(null);\n\n  useEffect(() => {\n    setOpenPatternDropdown(false);\n  }, [selectedStock]);\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 38) {\n      setOpenPatternDropdown(false);\n    } else if (e.keyCode === 40) {\n      setOpenPatternDropdown(false);\n    }\n  };\n\n  return (\n    <div\n      ref={patternRef}\n      onMouseLeave={() => {\n        setOpenPatternDropdown(false);\n      }}\n    >\n      <Autocomplete\n        onKeyPress={handleKeyDown}\n        selectOnFocus={false}\n        blurOnSelect={\"touch\"}\n        onChange={(_, newValue) => {\n          handleChange(newValue);\n        }}\n        fullWidth\n        multiple={multiple ? true : false}\n        open={openPatternDropdown}\n        options={[...options]}\n        onBlur={() => {\n          setOpenPatternDropdown(false);\n        }}\n        onMouseLeave={() => {\n          patternRef.current.click();\n        }}\n        onKeyDown={() => {\n          setOpenPatternDropdown(true);\n        }}\n        onClick={() => {\n          setOpenPatternDropdown(true);\n        }}\n        value={value}\n        defaultValue={options.find((v) => v[0])}\n        PaperComponent={CustomPaper}\n        getOptionLabel={getOptionLabel && getOptionLabel}\n        renderOption={renderOption && renderOption}\n        renderInput={\n          renderInput\n            ? renderInput\n            : (params) => (\n                <TextField\n                  {...params}\n                  label={label}\n                  variant=\"standard\"\n                  onClick={() => {\n                    setOpenPatternDropdown(!openPatternDropdown);\n                  }}\n                />\n              )\n        }\n      />\n    </div>\n  );\n};\n\nexport default AutocompleteWrapper;\n","import { FormControlLabel, Switch } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport { getAllStocks } from \"../services/api\";\nimport { templates, times } from \"../Utils/defaults\";\nimport { BAR_ICON, OHLC_ICON } from \"../Utils/utils\";\nimport AutocompleteWrapper from \"./AutocompleteWrapper\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport { IconButton } from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"../App.css\";\n\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n}));\n\nconst Header = ({\n    handleGrapthType,\n    graphType,\n    templateChange,\n    setEnableDualChart,\n    enableDualChart,\n    handlePatternChange,\n    selectedTime,\n    hanldeSelectedTime,\n    selectedTemp,\n    selectedPattern,\n    handlSwitchToggle,\n    switchToggle,\n    toggleFirstDayLine,\n    setToggleFirstDayLine,\n    selectedStock,\n    dataBaseUrl,\n    setSidebarWidth,\n}) => {\n    let linkRef = useRef();\n    let [patterns, setPatterns] = useState([]);\n    let [sidebarOpen, setSidebarOpen] = useState(false);\n\n    useEffect(() => {\n        getAllStocks(\"stocks/patterns\").then((res) => {\n            setPatterns(res?.data?.list || []);\n        });\n    }, []);\n\n    const openSidebar = () => {\n        if (!sidebarOpen) setSidebarWidth(500);\n        if (sidebarOpen) setSidebarWidth(6);\n\n        setSidebarOpen(!sidebarOpen);\n    };\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <Grid\n                container\n                spacing={2}\n                style={{ position: \"fixed\", padding: \"10px\" }}\n            >\n                <Grid item xs={2}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <AutocompleteWrapper\n                                options={patterns}\n                                value={selectedPattern}\n                                label={\"Pattern\"}\n                                handleChange={handlePatternChange}\n                                selectedStock={selectedStock}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={5}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={2}>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        disabled={selectedTime.name !== \"1d\"}\n                                        checked={toggleFirstDayLine}\n                                        onChange={(e) => {\n                                            setToggleFirstDayLine(\n                                                e.target.checked\n                                            );\n                                        }}\n                                    />\n                                }\n                                label=\"1st\"\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <ButtonGroup\n                                variant=\"text\"\n                                aria-label=\"text button group\"\n                            >\n                                <Button\n                                    className={`btn ${\n                                        graphType !== \"ohlc\"\n                                            ? \"templateBtn\"\n                                            : \"\"\n                                    }`}\n                                    onClick={() =>\n                                        handleGrapthType(\"candlestick\")\n                                    }\n                                >\n                                    {OHLC_ICON()}\n                                </Button>\n                                <Button\n                                    className={`btn ${\n                                        graphType === \"ohlc\"\n                                            ? \"templateBtn\"\n                                            : \"\"\n                                    }`}\n                                    onClick={() => handleGrapthType(\"ohlc\")}\n                                >\n                                    {BAR_ICON()}\n                                </Button>\n                            </ButtonGroup>\n                        </Grid>\n                        <Grid item md={2}>\n                            <AutocompleteWrapper\n                                options={[\"0\", 1, 2, 3, 4]}\n                                value={switchToggle}\n                                label={\"MT4\"}\n                                handleChange={handlSwitchToggle}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option;\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <AutocompleteWrapper\n                                options={times}\n                                value={selectedTime}\n                                label={\"Time\"}\n                                handleChange={hanldeSelectedTime}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option ? option?.name : \"\";\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <AutocompleteWrapper\n                                options={templates}\n                                value={selectedTemp}\n                                label={\"Template\"}\n                                handleChange={templateChange}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option ? option?.name : \"\";\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button\n                                onClick={() => {\n                                    setEnableDualChart(!enableDualChart);\n                                    document\n                                        .querySelector(\n                                            '[data-title=\"Autoscale\"]'\n                                        )\n                                        ?.click();\n                                }}\n                                className={`btn ${\n                                    enableDualChart ? \"templateBtn\" : \"\"\n                                }`}\n                            >\n                                Dual Chart\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={5}>\n                    <Grid container spacing={2}>\n                        <Grid item md={11}>\n                            {dataBaseUrl !== \"/db_v1\" ? (\n                                <ButtonGroup\n                                    variant=\"text\"\n                                    aria-label=\"text button group\"\n                                >\n                                    <>\n                                        <Link\n                                            style={{ display: \"none\" }}\n                                            ref={linkRef}\n                                            target={\"_blank\"}\n                                            to=\"/db_v1\"\n                                        ></Link>\n\n                                        <Button\n                                            onClick={() => {\n                                                linkRef.current.click();\n                                            }}\n                                            style={{ color: \"white\" }}\n                                        >\n                                            {\"__\"}\n                                        </Button>\n                                    </>\n                                </ButtonGroup>\n                            ) : (\n                                <></>\n                            )}\n                        </Grid>\n                        <Grid item md={1}>\n                            <IconButton onClick={openSidebar} color=\"primary\">\n                                <MenuIcon />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n\n        //     </Grid>\n        //     <Grid container spacing={2} md={4} style={{ padding: \"10px\" }}>\n        //         <Grid item md={11}></Grid>\n        //         <Grid item md={1}>\n        //             {dataBaseUrl !== \"/db_v1\" ? (\n        //                 <ButtonGroup\n        //                     fullWidth\n        //                     variant=\"text\"\n        //                     aria-label=\"text button group\"\n        //                 >\n        //                     <>\n        //                         <Link\n        //                             style={{ display: \"none\" }}\n        //                             ref={linkRef}\n        //                             target={\"_blank\"}\n        //                             to=\"/db_v1\"\n        //                         ></Link>\n\n        //                         <Button\n        //                             fullWidth\n        //                             onClick={() => {\n        //                                 linkRef.current.click();\n        //                             }}\n        //                             style={{ color: \"white\" }}\n        //                         >\n        //                             {\"__\"}\n        //                         </Button>\n        //                     </>\n        //                 </ButtonGroup>\n        //             ) : (\n        //                 <></>\n        //             )}\n        //         </Grid>\n        //     </Grid>\n\n        //     <Grid container spacing={2} md={1} style={{ padding: \"10px\" }}>\n        //         <Grid item md={12}>\n        //             <IconButton onClick={openSidebar} color=\"primary\">\n        //                 <MoreVertIcon />\n        //             </IconButton>\n        //         </Grid>\n        //     </Grid>\n        // </Grid>\n    );\n};\n\nexport default Header;\n","export function descendingComparator(a, b, orderBy) {\n  if (b?.[orderBy] < a?.[orderBy]) {\n    return -1;\n  }\n  if (b?.[orderBy] > a?.[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy, selectedStrategy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy, selectedStrategy)\n    : (a, b) => -descendingComparator(a, b, orderBy, selectedStrategy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n","import { TableCell, TableRow } from \"@mui/material\";\nimport React from \"react\";\n\nconst WatchListRow = ({\n  row,\n  index,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  placeSelectedItemInTheMiddle,\n  setSelectStockIndex,\n  hanldeSelectedTime,\n  selectedStrategy,\n  strategiesData,\n}) => {\n  return row && selectedStock ? (\n    <TableRow\n      className={row.name === selectedStock.name ? \"selectedRowStyle\" : \"\"}\n      active={row.name === selectedStock.name}\n      key={index}\n      onClick={() => {\n        hanldeSelectedTime(selectedTime);\n        placeSelectedItemInTheMiddle(index);\n        handleStockChange(row);\n        setSelectStockIndex(index);\n      }}\n      focus={row.name === selectedStock.name}\n    >\n      <TableCell align={\"center\"}>{row.name}</TableCell>\n      <TableCell align={\"center\"}>\n        {row?.sources?.length && row.sources[0]}\n      </TableCell>\n      <TableCell align={\"center\"}>{row?.description || \"-\"}</TableCell>\n      <TableCell align={\"center\"}>{row.sectorName}</TableCell>\n      <TableCell align={\"center\"}>{selectedTime.name}</TableCell>\n      {strategiesData.map((m, i) =>\n        m?.data?.[row?.name]?.value &&\n        m?.data?.[row?.name]?.value !== \"temp\" ? (\n          <TableCell key={i} align={\"center\"}>\n            {m?.data?.[row?.name]?.value !== \"temp\"\n              ? m?.data?.[row?.name]?.value + \", \"\n              : \" \"}\n            {m?.data?.[row?.name]?.time !== \"temp\"\n              ? m?.data?.[row?.name]?.time\n              : \" \"}\n          </TableCell>\n        ) : (\n          <></>\n        )\n      )}\n    </TableRow>\n  ) : (\n    <></>\n  );\n};\n\nexport default WatchListRow;\n","import { Box, TableSortLabel } from \"@mui/material\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport React from \"react\";\n\nimport WatchListRow from \"./WatchListRow\";\n\nconst WatchListTable = ({\n  height,\n  scrollableListRef,\n  selectedStrategy,\n  orderBy,\n  createSortHandler,\n  order,\n  placeSelectedItemInTheMiddle,\n  selectedStock,\n  hanldeSelectedTime,\n  handleStockChange,\n  setSelectStockIndex,\n  selectedTime,\n  stocks,\n  setStocks,\n  strategiesData,\n}) => {\n  return (\n    <TableContainer\n      sx={{\n        maxHeight: height - 20 - 25,\n        margin: \"10px 0px\",\n        overflowX: \"auto\",\n      }}\n    >\n      <Table\n        sx={{ minWidth: \"300px\" }}\n        ref={scrollableListRef}\n        stickyHeader\n        aria-label=\"sticky table\"\n      >\n        <TableHead>\n          <TableRow>\n            {[\n              { label: \"Symbol\", numeric: false },\n              { label: \"Sources\", numeric: false },\n              { label: \"Description\", numeric: false },\n              { label: \"Sector Name\", numeric: false },\n              { label: \"Time\", numeric: false },\n              ...(strategiesData?.length\n                ? [...new Set(strategiesData.map((item) => item.name))].map(\n                    (m) => {\n                      return {\n                        label: m,\n                        numeric: false,\n                      };\n                    }\n                  )\n                : []),\n            ].map((column, index) => (\n              <TableCell\n                sx={{ minWidth: \"100px\" }}\n                key={index}\n                align={column.numeric ? \"center\" : \"center\"}\n                sortDirection={orderBy === column.label ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === column.label}\n                  direction={orderBy === column.label ? order : \"asc\"}\n                  onClick={createSortHandler(column.label)}\n                >\n                  {column.label}\n                  {orderBy === column.id ? (\n                    <Box component=\"span\" sx={visuallyHidden}>\n                      {order === \"desc\"\n                        ? \"sorted descending\"\n                        : \"sorted ascending\"}\n                    </Box>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stocks.map((row, index) => {\n            return (\n              <WatchListRow\n                key={index}\n                row={row}\n                index={index}\n                selectedStock={selectedStock}\n                handleStockChange={handleStockChange}\n                setSelectStockIndex={setSelectStockIndex}\n                selectedTime={selectedTime}\n                placeSelectedItemInTheMiddle={placeSelectedItemInTheMiddle}\n                setStocks={setStocks}\n                stocks={stocks}\n                hanldeSelectedTime={hanldeSelectedTime}\n                selectedStrategy={selectedStrategy}\n                strategiesData={strategiesData}\n              />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default WatchListTable;\n","import CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport { Checkbox, Grid } from \"@mui/material\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\n\nimport { getAllStocks } from \"../services/api\";\nimport { times } from \"../Utils/defaults\";\nimport { getComparator, stableSort } from \"../Utils/sorting\";\nimport AutocompleteWrapper from \"./AutocompleteWrapper\";\nimport WatchListTable from \"./WatchListTable\";\n\nimport \"../App.css\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst WatchList = ({\n    handleStockChange,\n    selectedStock,\n    stocks,\n    setStocks,\n    height,\n    scrollableListRef,\n    placeSelectedItemInTheMiddle,\n    selectedCategory,\n    setSelectedCategory,\n    hanldeSelectedTime,\n    setLayout,\n    layout,\n    setSidebarWidth,\n    sidebarWidth,\n    enableDualChart,\n    selectedStrategy,\n    setSelectedStrategy,\n    secondaryLayout,\n    setSecondaryLayout,\n    strategiesData,\n}) => {\n    const [strategies, setStrategies] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedStockIndex, setSelectStockIndex] = useState(0);\n    const [loader, setLoader] = useState(false);\n    const [selectedTime, setSelectedTime] = useState({\n        name: \"1d\",\n        desc: \"1 Day\",\n        ms: 86400000 * 1,\n    });\n\n    useEffect(() => {\n        setLoader(true);\n        getAllStocks(\"/stocks/watchlish\")\n            .then((res) => {\n                if (res?.data?.list?.length) {\n                    setCategories(res.data.list || []);\n                    setSelectedCategory(res.data.list[0]);\n                }\n                setLoader(false);\n            })\n            .catch(() => {\n                setLoader(false);\n            });\n\n        getAllStocks(\"/stocks/active_strategies\")\n            .then((res) => {\n                setStrategies(res?.data?.list || []);\n                setLoader(false);\n            })\n            .catch(() => {\n                setLoader(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        getAllStocks(\"stocks/watchlish/\" + selectedCategory).then((res) => {\n            setStocks(res?.data?.list || []);\n            setSelectStockIndex(0);\n            handleStockChange(res?.data?.list[0]);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedCategory]);\n\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 38) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange(stocks[selectedStockIndex - 1]);\n            setSelectStockIndex(selectedStockIndex - 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex - 1);\n        } else if (e.keyCode === 40) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange(stocks[selectedStockIndex + 1]);\n            setSelectStockIndex(selectedStockIndex + 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex + 1);\n        }\n    };\n\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Symbol\");\n    const createSortHandler = (property) => (event) => {\n        handleRequestSort(event, property);\n    };\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n\n        setStocks(\n            stableSort(\n                stocks.map((m) => {\n                    let obj = {};\n                    selectedStrategy.forEach((s, i) => {\n                        let t = strategiesData?.[i]?.data?.[m.name]?.time;\n                        obj[s] = t ? new Date(t) : null;\n                    });\n\n                    return {\n                        ...m,\n                        Symbol: m.name,\n                        Sources: m.sources[0],\n                        Description: m.description,\n                        Time: selectedTime.name,\n                        ...obj,\n                    };\n                }),\n                getComparator(\n                    isAsc ? \"desc\" : \"asc\",\n                    property,\n                    selectedStrategy\n                )\n            )\n        );\n    };\n\n    const stock = useMemo(() => {\n        return (\n            <Grid container style={{ margin: \"0px 6px\" }}>\n                <Grid container item md={12} sm={12} xs={12} spacing={2}>\n                    <Grid item md={3} sm={3} xs={3}>\n                        <AutocompleteWrapper\n                            options={categories}\n                            value={selectedCategory}\n                            label={\"Categrories\"}\n                            handleChange={setSelectedCategory}\n                            selectedStock={selectedStock}\n                        />\n                    </Grid>\n                    <Grid item md={2} sm={2} xs={2}>\n                        <AutocompleteWrapper\n                            options={times}\n                            value={selectedTime}\n                            label={\"Time\"}\n                            handleChange={(newValue) => {\n                                setSelectedTime(newValue);\n                                hanldeSelectedTime(newValue);\n                            }}\n                            selectedStock={selectedStock}\n                            getOptionLabel={(option) => {\n                                return option ? option?.name : \"\";\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={7} sm={7} xs={7}>\n                        <AutocompleteWrapper\n                            options={strategies}\n                            value={selectedStrategy}\n                            label=\"Strategies\"\n                            handleChange={(v) => {\n                                if (v && v.length) {\n                                    setSelectedStrategy([...v]);\n                                } else {\n                                    setSelectedStrategy([]);\n                                }\n                            }}\n                            selectedStock={selectedStock}\n                            multiple={true}\n                            renderOption={(props, option, s) => {\n                                let selected = s?.selected;\n                                return (\n                                    <li {...props}>\n                                        <Checkbox\n                                            icon={icon}\n                                            checkedIcon={checkedIcon}\n                                            checked={selected}\n                                        />\n                                        {option}\n                                    </li>\n                                );\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid item md={12} sm={12} xs={12}>\n                    <div onKeyPress={handleKeyDown}>\n                        <WatchListTable\n                            height={height}\n                            scrollableListRef={scrollableListRef}\n                            selectedStrategy={selectedStrategy}\n                            orderBy={orderBy}\n                            createSortHandler={createSortHandler}\n                            order={order}\n                            placeSelectedItemInTheMiddle={\n                                placeSelectedItemInTheMiddle\n                            }\n                            selectedStock={selectedStock}\n                            hanldeSelectedTime={hanldeSelectedTime}\n                            handleStockChange={handleStockChange}\n                            setSelectStockIndex={setSelectStockIndex}\n                            selectedTime={selectedTime}\n                            stocks={stocks}\n                            setStocks={setStocks}\n                            strategiesData={strategiesData}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        stocks,\n        selectedStock,\n        order,\n        orderBy,\n        selectedCategory,\n        categories,\n        stocks,\n        selectedTime,\n        selectedStrategy,\n        strategiesData,\n        strategies,\n        strategiesData.length,\n        // selectedStrategy.length,\n    ]);\n\n    const sidebarRef = useRef(null);\n    const [isResizing, setIsResizing] = useState(false);\n\n    const resize = React.useCallback(\n        (mouseMoveEvent) => {\n            if (isResizing) {\n                let w =\n                    window.innerWidth -\n                    (sidebarRef.current.getBoundingClientRect().right -\n                        mouseMoveEvent.clientX) -\n                    10;\n\n                if (enableDualChart) {\n                    w = Math.floor(w / 2);\n                }\n\n                setLayout({\n                    ...layout,\n                    width: w,\n                    height: window.innerHeight - 80,\n                });\n                setSecondaryLayout({ ...secondaryLayout, width: w });\n                setSidebarWidth(\n                    sidebarRef.current.getBoundingClientRect().right -\n                        mouseMoveEvent.clientX\n                );\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [isResizing]\n    );\n\n    const stopResizing = React.useCallback(() => {\n        setIsResizing(false);\n    }, []);\n    const startResizing = React.useCallback((mouseDownEvent) => {\n        setIsResizing(true);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener(\"mousemove\", resize);\n        window.addEventListener(\"mouseup\", stopResizing);\n        return () => {\n            window.removeEventListener(\"mousemove\", resize);\n            window.removeEventListener(\"mouseup\", stopResizing);\n        };\n    }, [resize, stopResizing]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    });\n\n    return (\n        <div\n            ref={sidebarRef}\n            className=\"app-sidebar\"\n            style={{\n                width: sidebarWidth + \"px\",\n                height: `calc(100vh - ${52}px`,\n            }}\n            onMouseDown={(e) => e.preventDefault()}\n        >\n            {loader ? <div className=\"watchListLoader\"></div> : <></>}\n            <div className=\"app-sidebar-resizer\" onMouseDown={startResizing} />\n            <div className=\"app-sidebar-content\" style={{ overflowX: \"clip\" }}>\n                {stock}\n            </div>\n        </div>\n    );\n};\n\nexport default WatchList;\n","import { makeStyles } from \"@mui/styles\";\nimport React, { useRef, useState } from \"react\";\n\nimport GraphRenderer from \"./Components/GraphRenderer\";\nimport Header from \"./Components/Header\";\nimport WatchList from \"./Components/WatchList\";\nimport { initialLayout, T0 } from \"./Utils/defaults\";\n\nimport \"./App.css\";\n\nconst useStyles = makeStyles(() => ({\n    container: (sidebarWidth) => {\n        return { width: `calc(100% - ${sidebarWidth}px)` };\n    },\n}));\n\nfunction App({ dataBaseUrl }) {\n    const [stocks, setStocks] = useState([]);\n    const [sidebarWidth, setSidebarWidth] = useState(6);\n    const classes = useStyles(sidebarWidth);\n    const [graphType, setGraphType] = useState(\"candlestick\");\n    const [selectedCategory, setSelectedCategory] = useState(\"FOREX\");\n    const [toggleFirstDayLine, setToggleFirstDayLine] = useState(true);\n    const [enableDualChart, setEnableDualChart] = useState(false);\n    const [layout, setLayout] = useState({ ...initialLayout });\n    const scrollableListRef = useRef(null);\n    const [selectedStock, setSelectStock] = useState(\"MMM\");\n    const [selectedPattern, setSelectedPattern] = useState(null);\n    const [strategiesData, setStrategiesData] = useState([]);\n    const [selectedTime, setSelectTime] = useState({\n        name: \"1d\",\n        ms: 86400000,\n        desc: \"1 Day\",\n    });\n    const [secondaryLayout, setSecondaryLayout] = useState({\n        ...layout,\n        width: \"50%\",\n        height: window.innerHeight - 80,\n    });\n    const [selectedTemp, setSelectedTemp] = useState(T0);\n    const [switchToggle, setSwitchToggle] = useState(0);\n    const [selectedStrategy, setSelectedStrategy] = useState([]);\n\n    const handleGrapthType = (type) => {\n        setGraphType(type);\n    };\n\n    React.useEffect(() => {\n        function handleResize() {\n            if (\n                layout.width !== window.innerWidth - 10 ||\n                layout.height !== window.innerHeight - 80\n            ) {\n                document.querySelector('[data-title=\"Autoscale\"]')?.click();\n                setLayout({\n                    ...layout,\n                    width: window.innerWidth - 10,\n                    height: window.innerHeight - 80,\n                });\n            }\n        }\n        window.addEventListener(\"resize\", handleResize);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.innerWidth, window.innerHeight]);\n\n    const handlePatternChange = (pattern) => {\n        setSelectedPattern(pattern);\n        setSelectedStrategy([]);\n        setStrategiesData([]);\n    };\n\n    const handleStockChange = (stock) => {\n        setSelectStock(stock);\n    };\n\n    const hanldeSelectedTime = (time) => {\n        if (time?.name !== \"1d\") {\n            setToggleFirstDayLine(false);\n        }\n        setSelectTime(time);\n    };\n\n    const templateChange = (tempData) => {\n        setSelectedTemp(tempData);\n    };\n\n    const handlSwitchToggle = (v) => {\n        setSwitchToggle(v);\n    };\n\n    const placeSelectedItemInTheMiddle = (index) => {\n        const LIST_ITEM_HEIGHT = 21;\n        const NUM_OF_VISIBLE_LIST_ITEMS = 15;\n        const amountToScroll =\n            LIST_ITEM_HEIGHT * NUM_OF_VISIBLE_LIST_ITEMS +\n            index * LIST_ITEM_HEIGHT;\n        scrollableListRef.current.scrollTo(amountToScroll, 0);\n    };\n\n    const handleChangeSelectedStrategy = (s) => {\n        setSelectedStrategy([...s]);\n        setSelectedPattern(null);\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className={classes.container + \" app-frame\"}>\n                <Header\n                    setEnableDualChart={setEnableDualChart}\n                    enableDualChart={enableDualChart}\n                    handleGrapthType={handleGrapthType}\n                    graphType={graphType}\n                    templateChange={templateChange}\n                    setSidebarWidth={setSidebarWidth}\n                    selectedStock={selectedStock}\n                    handleStockChange={handleStockChange}\n                    handlePatternChange={handlePatternChange}\n                    selectedTime={selectedTime}\n                    hanldeSelectedTime={hanldeSelectedTime}\n                    selectedTemp={selectedTemp}\n                    selectedPattern={selectedPattern}\n                    handlSwitchToggle={handlSwitchToggle}\n                    switchToggle={switchToggle}\n                    toggleFirstDayLine={toggleFirstDayLine}\n                    setToggleFirstDayLine={setToggleFirstDayLine}\n                    dataBaseUrl={dataBaseUrl}\n                />\n                <div\n                    style={{\n                        height: \"100vh\",\n                        overflowY: \"hidden\",\n                    }}\n                >\n                    <GraphRenderer\n                        layout={layout}\n                        enableDualChart={enableDualChart}\n                        graphType={graphType}\n                        selectedTemp={selectedTemp}\n                        toggleFirstDayLine={toggleFirstDayLine}\n                        switchToggle={switchToggle}\n                        selectedPattern={selectedPattern}\n                        selectedStock={selectedStock}\n                        setLayout={setLayout}\n                        selectedTime={selectedTime}\n                        selectedCategory={selectedCategory}\n                        selectedStrategy={selectedStrategy}\n                        sidebarWidth={sidebarWidth}\n                        secondaryLayout={secondaryLayout}\n                        setSecondaryLayout={setSecondaryLayout}\n                        dataBaseUrl={dataBaseUrl}\n                        setStrategiesData={setStrategiesData}\n                        strategiesData={strategiesData}\n                    />\n                </div>\n            </div>\n\n            <WatchList\n                selectedStock={selectedStock}\n                handleStockChange={handleStockChange}\n                stocks={stocks}\n                setStocks={setStocks}\n                height={layout.height}\n                scrollableListRef={scrollableListRef}\n                placeSelectedItemInTheMiddle={placeSelectedItemInTheMiddle}\n                selectedCategory={selectedCategory}\n                setSelectedCategory={setSelectedCategory}\n                hanldeSelectedTime={hanldeSelectedTime}\n                setLayout={setLayout}\n                layout={layout}\n                setSidebarWidth={setSidebarWidth}\n                sidebarWidth={sidebarWidth}\n                enableDualChart={enableDualChart}\n                selectedStrategy={selectedStrategy}\n                setSelectedStrategy={handleChangeSelectedStrategy}\n                secondaryLayout={secondaryLayout}\n                setSecondaryLayout={setSecondaryLayout}\n                strategiesData={strategiesData}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, adaptV4Theme } from \"@mui/material/styles\";\nlet primary = \"#901f61\";\n\nexport const theme = createTheme(\n  adaptV4Theme({\n    palette: {\n      primary: { main: primary, light: \"#901f6117\" },\n      secondary: { main: \"#829ae621\" },\n    },\n    typography: {\n      fontSize: 12,\n      fontFamily: \"Arial\",\n      fontWeightLight: 400,\n      fontWeightRegular: 500,\n      fontWeightMedium: 600,\n      h1: {\n        fontSize: 26,\n        wordBreak: \"break-all\",\n      },\n      h2: {\n        fontSize: 24,\n        wordBreak: \"break-all\",\n      },\n      h3: {\n        fontSize: 22,\n        wordBreak: \"break-all\",\n      },\n      h4: {\n        fontSize: 20,\n        wordBreak: \"break-all\",\n      },\n      h5: {\n        fontSize: 18,\n        wordBreak: \"break-all\",\n      },\n      h6: {\n        fontSize: 18,\n        wordBreak: \"break-all\",\n      },\n      subtitle1: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        wordBreak: \"break-all\",\n      },\n      subtitle2: {\n        wordBreak: \"break-all\",\n      },\n      body1: {\n        wordBreak: \"break-all\",\n      },\n      body2: {\n        fontSize: 13,\n        wordBreak: \"break-all\",\n      },\n    },\n    props: {\n      MuiTextField: {\n        variant: \"standard\",\n        margin: \"8px\",\n      },\n      MuiTooltip: { placement: \"bottom\", arrow: true },\n    },\n    overrides: {\n      MuiInput: {\n        input: {\n          fontSize: 12,\n        },\n      },\n      MuiInputLabel: {\n        root: {\n          fontSize: 12,\n        },\n      },\n      MuiTooltip: {\n        tooltip: {\n          fontSize: \"10px\",\n          color: \"white\",\n          backgroundColor: primary,\n        },\n        arrow: {\n          color: primary,\n          backgroundColor: \"white\",\n        },\n      },\n      MuiCheckbox: {\n        colorSecondary: {\n          \"&$checked\": {\n            color: primary,\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {\n          padding: \"8px\",\n          fontSize: \"12px\",\n          minWidth: \"10px\",\n          maxWidth: \"10px\",\n          width: \"10px\",\n        },\n        head: {\n          background: \"#484848\",\n          color: \"white\",\n          minWidth: \"10px\",\n          maxWidth: \"10px\",\n          width: \"10px\",\n        },\n      },\n    },\n  })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StyledEngineProvider, ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"./theme\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <BrowserRouter>\n                    <Routes>\n                        <Route path=\"/\" element={<App dataBaseUrl={\"\"} />} />\n                        <Route\n                            path=\"/db_v1\"\n                            element={<App dataBaseUrl={\"/db_v1\"} />}\n                        />\n                    </Routes>\n                </BrowserRouter>\n            </ThemeProvider>\n        </StyledEngineProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}