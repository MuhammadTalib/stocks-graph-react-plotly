{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","className","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","handlePatternChange","selectedTime","hanldeSelectedTime","selectedTemp","selectedPattern","handlSwitchToggle","switchToggle","useState","stocks","setStocks","patterns","setPatterns","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","onChange","event","newValue","fullWidth","disableClearable","options","onClose","value","defaultValue","find","v","renderInput","params","TextField","label","variant","InputProps","type","ButtonGroup","Button","onClick","Switch","checked","e","target","size","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","color","templateType","subGraphs","mergedGraphs","high","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","line","width","increasing","months","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","orientation","domain","rangeslider","visible","tickmode","autorange","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectedPattern","setSelectTime","setSelectedTemp","setSwitchToggle","setGraphData","getDataRequest","stock","time","pattern","meta_trader_indicator","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","EMA3","EMA4","EMA5","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","SMA0","SMA1","SMA2","SMA3","stochd0","stochk0","MA0","MA1","RSI0","R0","R1","donchian0","donchian_price0","donchian_min0","donchian_max0","HIST0","HIST1","patternData","ConfrimHigh","ConfrimLow","forEach","push","indicators","undefined","Date","date","now","mode","symbol","tickvals","filter","f","ticktext","d","getMonth","getUTCFullYear","shapes","shp","lowP","Math","min","highP","max","x0","String","x1","xref","yref","y0","y1","rightMargin","err","tempData","dtick","tickformat","ticklen","nticks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6bf9039.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\r\nimport React from \"react\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport \"../App.css\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport const Graph = ({ style, data, layout, templates, loader }) => {\r\n  const config = { responsive: true };\r\n  if (loader) {\r\n    return <div className=\"loadingLabel\">Loading...</div>;\r\n  } else\r\n    return (\r\n      <Plot style={style} data={[data, ...(templates || [])]} layout={layout} />\r\n    );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\r\n\r\nexport const getAllStocks = async (endpoint) => {\r\n    return await axios\r\n      .get(`${endpoint}`)\r\n      .then(( data ) => {\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n       console.log(error)\r\n      });\r\n  };","export const times = [\r\n  { name: \"1h\", ms: 3600000 },\r\n  { name: \"1d\", ms: 86400000 },\r\n  { name: \"1wk\", ms: 604800000 },\r\n  { name: \"1mo\", ms: 2629746000 },\r\n];\r\n\r\nexport const templates = [\r\n  { name: \"T0\", id: 0 },\r\n  { name: \"T1\", id: 1 },\r\n  { name: \"T2\", id: 2 },\r\n  { name: \"T3\", id: 3 },\r\n  { name: \"T4\", id: 4 },\r\n  { name: \"T5\", id: 5 },\r\n  { name: \"T6\", id: 6 },\r\n  { name: \"T7\", id: 7 },\r\n  { name: \"T8\", id: 8 },\r\n  { name: \"T9\", id: 9 },\r\n];\r\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\r\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { getAllStocks } from \"../services/api\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport { times, templates } from \"../Utils/utils\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport \"../App.css\";\r\nconst Header = ({\r\n  handleGrapthType,\r\n  graphType,\r\n  templateChange,\r\n  templatesOptions,\r\n  data,\r\n  selectedStock,\r\n  handleStockChange,\r\n  handlePatternChange,\r\n  selectedTime,\r\n  hanldeSelectedTime,\r\n  selectedTemp,\r\n  selectedPattern,\r\n  handlSwitchToggle,\r\n  switchToggle,\r\n}) => {\r\n  let [stocks, setStocks] = useState([]);\r\n  let [patterns, setPatterns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStocks(\"stocks/available\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setStocks(res?.data?.list || []);\r\n    });\r\n\r\n    getAllStocks(\"stocks/patterns\").then((res) => {\r\n      console.log(\"res\", res);\r\n      setPatterns(res?.data?.list || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      textAlign=\"center\"\r\n      style={{ padding: \"10px\" }}\r\n    >\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handleStockChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={stocks}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedStock}\r\n          defaultValue={stocks.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Stock\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>{\" \"}\r\n      <Grid item xs={2}>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            handlePatternChange(newValue);\r\n          }}\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          disableClearable={true}\r\n          options={[...patterns]}\r\n          onClose={() => {\r\n            console.log(\"aytr\");\r\n          }}\r\n          value={selectedPattern}\r\n          defaultValue={patterns.find((v) => v[0])}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Pattern\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          <Button\r\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"candlestick\")}\r\n          >\r\n            <WaterfallChartIcon />\r\n          </Button>\r\n          <Button\r\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\r\n            onClick={() => handleGrapthType(\"ohlc\")}\r\n          >\r\n            <BarChartIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <Switch\r\n          checked={switchToggle}\r\n          onClick={(e) => {\r\n            console.log(\"console.log\", e.target.checked);\r\n            handlSwitchToggle(e.target.checked);\r\n          }}\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {times.map((t, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => hanldeSelectedTime(t)}\r\n              className={`btn ${\r\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\r\n              }`}\r\n            >\r\n              {t.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n          {templates.map((m, i) => (\r\n            <Button\r\n              key={i}\r\n              onClick={() => templateChange(m)}\r\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\r\n            >\r\n              {m.name}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const template1 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.low,\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 1,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.a,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"#90c7fc\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.high,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 1,\r\n          },\r\n          {\r\n            x: data.x,\r\n            y: data.open,\r\n            type: \"bar\",\r\n            marker: {\r\n              color: data.open.map((m, i) =>\r\n                m < data.close[i] ? \"green\" : \"red\"\r\n              ),\r\n            },\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            templateType: 1,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const template2 = (data) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"#90c7fc\",\r\n        },\r\n        templateType: 2,\r\n      },\r\n    ],\r\n    subGraphs: [],\r\n  };\r\n};\r\n\r\nexport const template3 = (data, axis) => {\r\n  return {\r\n    graph: [\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m + 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.low.map((m) => m - 10),\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        marker: {\r\n          color: \"blue\",\r\n        },\r\n        templateType: 3,\r\n      },\r\n    ],\r\n    subGraphs: [\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            type: \"scatter\",\r\n            marker: {\r\n              color: \"red\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        x: data.x,\r\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\r\n        type: \"bar\",\r\n        marker: {\r\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\r\n        },\r\n        xaxis: \"x\",\r\n        yaxis: \"y\",\r\n        templateType: 3,\r\n        mergedGraphs: [\r\n          {\r\n            x: data.x,\r\n            y: data.low,\r\n            xaxis: \"x\",\r\n            yaxis: \"y\",\r\n            marker: {\r\n              color: \"blue\",\r\n            },\r\n            templateType: 3,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\nexport const templatesOptions = (data) => [\r\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\r\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\r\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\r\n  // { name: \"T4\", id: 4, template: template1 },\r\n  // { name: \"T5\", id: 5, template: template1 },\r\n  // { name: \"T6\", id: 6, template: template1 },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Graph } from \"./Components/Graph\";\r\nimport Header from \"./Components/Header\";\r\nimport { getAllStocks } from \"./services/api\";\r\nimport { templatesOptions } from \"./templates/templates\";\r\n\r\nconst dummy = {\r\n  x: [],\r\n  name: \"main\",\r\n  close: [],\r\n  decreasing: {\r\n    fillcolor: \"black\",\r\n    line: { color: \"black\", width: 1 },\r\n  },\r\n  high: [],\r\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\r\n  line: { color: \"rgba(31,119,180,1)\" },\r\n  low: [],\r\n  open: [],\r\n  type: \"candlestick\",\r\n  xaxis: \"x\",\r\n  yaxis: \"y\",\r\n};\r\nconst rightMargin = 20;\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n// const candleDefault = 214 + rightMargin;\r\n\r\nfunction App() {\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [graphType, setGraphType] = useState(\"candlestick\");\r\n\r\n  const [mergedGraphs, setMergedGraphs] = useState([]);\r\n  const [separateGraphs, setSeparateGraphs] = useState([]);\r\n\r\n  const style = { width: \"100%\", height: \"100%\" };\r\n\r\n  const [layout, setLayout] = useState({\r\n    dragmode: \"zoom\",\r\n    margin: {\r\n      r: 10,\r\n      t: 25,\r\n      b: 40,\r\n      l: 20,\r\n    },\r\n    showlegend: true,\r\n    legend: { orientation: \"h\" },\r\n    xaxis: {\r\n      domain: [0, 1],\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      type: \"category\",\r\n      tickmode: \"array\",\r\n    },\r\n    yaxis: {\r\n      domain: [0, 1],\r\n      autorange: true,\r\n      rangeslider: {\r\n        visible: false,\r\n      },\r\n      position: 1,\r\n      side: \"bottom\",\r\n      type: \"linear\",\r\n    },\r\n    opacity: 0.2,\r\n\r\n    autosize: true,\r\n    height: 550,\r\n  });\r\n\r\n  const handleGrapthType = (type) => {\r\n    setGraphType(type);\r\n  };\r\n\r\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\r\n  const [selectedPattern, setSelectedPattern] = useState(\"\");\r\n\r\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\r\n  const [selectedTemp, setSelectedTemp] = useState(0);\r\n  const [switchToggle, setSwitchToggle] = useState(false);\r\n\r\n  const [data, setGraphData] = useState({ ...dummy });\r\n\r\n  const getDataRequest = (\r\n    stock,\r\n    time,\r\n    template,\r\n    pattern,\r\n    meta_trader_indicator\r\n  ) => {\r\n    console.log(\"meta_trader_indicator\", meta_trader_indicator);\r\n    setLoader(true);\r\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\r\n    if (template > 0) {\r\n      url = url + `&template=${template}`;\r\n    }\r\n    if (pattern?.length) {\r\n      url = url + `&pattern=${pattern}`;\r\n    }\r\n    if (meta_trader_indicator) {\r\n      url = url + `&meta_trader_indicator=${meta_trader_indicator}`;\r\n    }\r\n    setMergedGraphs([]);\r\n    getAllStocks(url)\r\n      .then((res) => {\r\n        console.log(\r\n          \"Total candles on time \",\r\n          time.name,\r\n          \" is \",\r\n          res?.data?.data.length\r\n        );\r\n        setLoader(false);\r\n        let responseData = [...res?.data?.data];\r\n\r\n        let high = [],\r\n          low = [],\r\n          open = [],\r\n          close = [],\r\n          x = [];\r\n\r\n        let EMA0 = [];\r\n        let EMA1 = [];\r\n        let EMA2 = [];\r\n        let EMA3 = [];\r\n        let EMA4 = [];\r\n        let EMA5 = [];\r\n\r\n        let MACD0 = [];\r\n        let MACD1 = [];\r\n        let MACD2 = [];\r\n        let MACDHIST0 = [];\r\n        let MACDHIST1 = [];\r\n        let MACDHIST2 = [];\r\n        let MACDSIGNAL0 = [];\r\n        let MACDSIGNAL1 = [];\r\n        let MACDSIGNAL2 = [];\r\n\r\n        let SMA0 = [];\r\n        let SMA1 = [];\r\n        let SMA2 = [];\r\n        let SMA3 = [];\r\n\r\n        let stochd0 = [];\r\n        let stochk0 = [];\r\n\r\n        let MA0 = [];\r\n        let MA1 = [];\r\n        let RSI0 = [];\r\n\r\n        let R0 = [];\r\n        let R1 = [];\r\n        let donchian0 = [];\r\n\r\n        let donchian_price0 = [];\r\n        let donchian_min0 = [];\r\n        let donchian_max0 = [];\r\n\r\n        let HIST0 = [];\r\n        let HIST1 = [];\r\n\r\n        let patternData = [];\r\n\r\n        let ConfrimHigh = [];\r\n        let ConfrimLow = [];\r\n\r\n        responseData?.forEach((m) => {\r\n          high.push(m.high);\r\n          low.push(m.low);\r\n          open.push(m.open);\r\n          close.push(m.close);\r\n\r\n          if (meta_trader_indicator) {\r\n            console.log(\"switchToggleswitchToggle\");\r\n            ConfrimHigh.push(m.indicators[\"Confrim High\"]);\r\n            ConfrimLow.push(m.indicators[\"Confrim Low\"]);\r\n          }\r\n\r\n          if (m[pattern] !== undefined) {\r\n            patternData.push(m[pattern]);\r\n          }\r\n          x.push(new Date(m.date));\r\n          if (template === 1) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n          } else if (template === 2) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n            EMA3.push(m.indicators?.EMA3);\r\n            EMA4.push(m.indicators?.EMA4);\r\n            EMA5.push(m.indicators?.EMA5);\r\n          } else if (template === 3 && m.indicators) {\r\n            R0.push(m.indicators[\"%R0\"]);\r\n            R1.push(m.indicators[\"%R1\"]);\r\n            donchian_price0.push(m.indicators[\"donchian_price0\"]);\r\n            donchian_min0.push(m.indicators[\"donchian_min0\"]);\r\n            donchian_max0.push(m.indicators[\"donchian_max0\"]);\r\n            donchian0.push(m.indicators?.donchian0);\r\n          } else if (template === 4) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACD1.push(m.indicators?.MACD1);\r\n            MACD2.push(m.indicators?.MACD2);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            MACDHIST0.push(m.indicators?.MACDHIST0);\r\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n            SMA0.push(m.indicators?.SMA0);\r\n            SMA1.push(m.indicators?.SMA1);\r\n            SMA2.push(m.indicators?.SMA2);\r\n            SMA3.push(m.indicators?.SMA3);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 5) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACD1.push(m.indicators?.MACD1);\r\n            MACD2.push(m.indicators?.MACD2);\r\n            MACDHIST0.push(m.indicators?.MACDHIST0);\r\n            MACDHIST1.push(m.indicators?.MACDHIST1);\r\n            MACDHIST2.push(m.indicators?.MACDHIST2);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\r\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n            EMA3.push(m.indicators?.EMA3);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 6) {\r\n          } else if (template === 7) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            MA0.push(m.indicators?.MA0);\r\n            MA1.push(m.indicators?.MA1);\r\n            RSI0.push(m.indicators?.RSI0);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 8) {\r\n            MACD0.push(m.indicators?.MACD0);\r\n            MACDHIST0.push(m.indicators?.MACDHIST0);\r\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\r\n            RSI0.push(m.indicators?.RSI0);\r\n            stochd0.push(m.indicators?.stochd0);\r\n            stochk0.push(m.indicators?.stochk0);\r\n          } else if (template === 9) {\r\n            EMA0.push(m.indicators?.EMA0);\r\n            EMA1.push(m.indicators?.EMA1);\r\n            EMA2.push(m.indicators?.EMA2);\r\n            EMA3.push(m.indicators?.EMA3);\r\n            EMA4.push(m.indicators?.EMA4);\r\n            EMA5.push(m.indicators?.EMA5);\r\n            HIST0.push(m.indicators?.HIST0);\r\n            HIST1.push(m.indicators?.HIST1);\r\n          }\r\n        });\r\n\r\n        // let lowLowest = Math.min(...low.filter((f) => f !== null));\r\n        // let closeLowest = Math.min(...close.filter((f) => f !== null));\r\n        // let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\r\n\r\n        // let highHighest = Math.min(...low.filter((f) => f !== null));\r\n        // let openHighest = Math.max(...close.filter((f) => f !== null));\r\n        // let highest = openHighest > highHighest ? openHighest : highHighest;\r\n\r\n        for (let i = 0; i < rightMargin; i++) {\r\n          high.push(null);\r\n          low.push(null);\r\n          open.push(null);\r\n          close.push(null);\r\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\r\n          if (template === 1) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n          } else if (template === 2) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n            EMA3.push(null);\r\n            EMA4.push(null);\r\n            EMA5.push(null);\r\n          } else if (template === 3) {\r\n            R0.push(null);\r\n            R1.push(null);\r\n            donchian0.push(null);\r\n            donchian_price0.push(null);\r\n            donchian_min0.push(null);\r\n            donchian_max0.push(null);\r\n          } else if (template === 4) {\r\n            MACD0.push(null);\r\n            MACD1.push(null);\r\n            MACD2.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            MACDHIST0.push(null);\r\n            MACDSIGNAL2.push(null);\r\n            SMA0.push(null);\r\n            SMA1.push(null);\r\n            SMA2.push(null);\r\n            SMA3.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 5) {\r\n            MACD0.push(null);\r\n            MACD1.push(null);\r\n            MACD2.push(null);\r\n            MACDHIST0.push(null);\r\n            MACDHIST1.push(null);\r\n            MACDHIST2.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            MACDSIGNAL1.push(null);\r\n            MACDSIGNAL2.push(null);\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n            EMA3.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 7) {\r\n            EMA0.push(null);\r\n            MA0.push(null);\r\n            MA1.push(null);\r\n            RSI0.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 6) {\r\n          } else if (template === 8) {\r\n            MACD0.push(null);\r\n            MACDHIST0.push(null);\r\n            MACDSIGNAL0.push(null);\r\n            RSI0.push(null);\r\n            stochd0.push(null);\r\n            stochk0.push(null);\r\n          } else if (template === 9) {\r\n            EMA0.push(null);\r\n            EMA1.push(null);\r\n            EMA2.push(null);\r\n            EMA3.push(null);\r\n            EMA4.push(null);\r\n            EMA5.push(null);\r\n            HIST0.push(null);\r\n            HIST1.push(null);\r\n          }\r\n        }\r\n\r\n        if (template === 0) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 1) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              xaxis: \"x\",\r\n              name: \"EMA0\",\r\n              yaxis: \"y\",\r\n              mode: \"line\",\r\n              type: \"scatter\",\r\n              marker: {\r\n                size: 4,\r\n                color: \"blue\",\r\n                symbol: \"diamond\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              type: \"scatter\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2.map((m) => {\r\n                if (!m) return null;\r\n                else return m;\r\n              }),\r\n              name: \"EMA2\",\r\n              type: \"scatter\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 2) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              name: \"EMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA3,\r\n              name: \"EMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA4,\r\n              name: \"EMA4\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA5,\r\n              name: \"EMA5\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 3) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: donchian_price0,\r\n              name: \"DONCHAIN\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n                size: 12,\r\n              },\r\n              line: {\r\n                width: 1,\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: donchian_min0,\r\n              name: \"donchian min\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              line: {\r\n                width: 2,\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: donchian_max0,\r\n              name: \"donchian max\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              line: {\r\n                width: 2,\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: R0,\r\n              name: \"%R0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: R1,\r\n              name: \"%R1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n        } else if (template === 4) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: SMA0,\r\n              name: \"SMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(255,173,89)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA1,\r\n              name: \"SMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(253,91,252)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA2,\r\n              name: \"SMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(172,91,170)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: SMA3,\r\n              name: \"SMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(89,89,89)\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACDHIST0,\r\n              name: \"MACD HIST\",\r\n              type: \"bar\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 5) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(255,0,56)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              name: \"EMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"rgb(13,190,58)\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA3,\r\n              name: \"EMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACDHIST0,\r\n              name: \"MACDHIST\",\r\n              type: \"bar\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 6) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([]);\r\n        } else if (template === 7) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: MA0,\r\n              name: \"MA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: MA1,\r\n              name: \"MA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: RSI0,\r\n              name: \"RSI0\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(153,42,173)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(13,0,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 8) {\r\n          setMergedGraphs([]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: RSI0,\r\n              name: \"RSI0\",\r\n              marker: {\r\n                color: \"rgb(126,87,194)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: stochd0,\r\n              name: \"stochd\",\r\n              marker: {\r\n                color: \"rgb(255,109,0)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: stochk0,\r\n                  name: \"stochk\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(43,97,255)\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              x: x,\r\n              y: MACD0,\r\n              name: \"MACD0\",\r\n              marker: {\r\n                color: \"rgb(43,97,255)\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              templates: [\r\n                {\r\n                  x: x,\r\n                  y: MACDSIGNAL0,\r\n                  name: \"MACD SIGNAL\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: \"rgb(255,109,0)\",\r\n                  },\r\n                },\r\n                {\r\n                  x: x,\r\n                  y: MACDHIST0,\r\n                  type: \"bar\",\r\n                  name: \"MACD HIST\",\r\n                  xaxis: \"x\",\r\n                  yaxis: \"y\",\r\n                  marker: {\r\n                    color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]);\r\n        } else if (template === 9) {\r\n          setMergedGraphs([\r\n            {\r\n              x: x,\r\n              y: EMA0,\r\n              name: \"EMA0\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA1,\r\n              name: \"EMA1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA2,\r\n              name: \"EMA2\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"blue\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA3,\r\n              name: \"EMA3\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA4,\r\n              name: \"EMA4\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n            {\r\n              x: x,\r\n              y: EMA5,\r\n              name: \"EMA5\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n              marker: {\r\n                color: \"red\",\r\n              },\r\n            },\r\n          ]);\r\n          setSeparateGraphs([\r\n            {\r\n              x: x,\r\n              y: HIST0,\r\n              type: \"bar\",\r\n              name: \"HIST0\",\r\n              marker: {\r\n                color: HIST0.map((m, i) =>\r\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\r\n                ), //\"black\",\r\n              },\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n            {\r\n              x: x,\r\n              y: HIST1,\r\n              type: \"bar\",\r\n              marker: {\r\n                color: HIST1.map((m, i) =>\r\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\r\n                ), //\"black\",\r\n              },\r\n              name: \"HIST1\",\r\n              xaxis: \"x\",\r\n              yaxis: \"y\",\r\n            },\r\n          ]);\r\n        }\r\n\r\n        setGraphData({\r\n          ...dummy,\r\n          high,\r\n          low,\r\n          open,\r\n          close,\r\n          x,\r\n          ConfrimHigh,\r\n          ConfrimLow,\r\n        });\r\n        setLayout({\r\n          ...layout,\r\n          xaxis: {\r\n            ...layout.xaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            autorange: true,\r\n            tickvals: [\r\n              ...x.filter((f, i) => {\r\n                let s = i % 15 === 0;\r\n                let d = new Date(f);\r\n                return i % 15 === 0; //d.getDate() === 15 || d.getDate() === 30;\r\n              }),\r\n            ],\r\n            ticktext: [\r\n              ...x\r\n                .filter((f, i) => {\r\n                  // let s = i % 15 === 0;\r\n                  // let d = new Date(f);\r\n                  return i % 15 === 0;\r\n                })\r\n                .map((m) => {\r\n                  let d = new Date(m);\r\n                  let datee = months[d.getMonth()] + \" \" + d.getUTCFullYear();\r\n                  return datee;\r\n                }),\r\n            ],\r\n          },\r\n          yaxis: {\r\n            ...layout.yaxis,\r\n            rangeslider: {\r\n              visible: false,\r\n            },\r\n            autorange: true,\r\n          },\r\n          shapes: [\r\n            ...high.map((shp, i) => {\r\n              if (patternData[i]) {\r\n                let lowP = Math.min(...[low[i], high[i], open[i], close[i]]);\r\n                let highP = Math.max(...[low[i], high[i], open[i], close[i]]);\r\n                let x0 = String(new Date(x[i - 1])); //- 0.5 * time.ms));\r\n                let x1 = String(new Date(x[i + 1])); //.getTime() + 0.5 * time.ms));\r\n\r\n                console.log(\"x0x1\", x0, x1);\r\n                return {\r\n                  type: \"rect\",\r\n                  xref: \"x\",\r\n                  yref: \"y\",\r\n                  x0: x0,\r\n                  y0: lowP,\r\n                  x1,\r\n                  width: 1,\r\n                  y1: highP,\r\n                  fillcolor: \"yellow\",\r\n                  opacity: 0.6,\r\n                  rightMargin: 3,\r\n                  line: {\r\n                    width: 2,\r\n                    color: open[i] < close[i] ? \"green\" : \"red\",\r\n                    opacity: 1,\r\n                  },\r\n                };\r\n              }\r\n              return null;\r\n            }),\r\n            // ...high.map((shp, i) => {\r\n            //   if (true && i % 10 == 0) {\r\n            //     return {\r\n            //       type: \"path\",\r\n            //       path:\r\n            //         \"M 150 100 L \" +\r\n            //         new Date(x[i].getTime() + 0.5 * time.ms) +\r\n            //         \" 300 L 200 70 Z\",\r\n            //       fillcolor: \"rgba(255, 140, 184, 0.5)\",\r\n            //       line: {\r\n            //         color: \"rgb(255, 140, 184)\",\r\n            //       },\r\n            //     };\r\n            //   }\r\n            // }),\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setMergedGraphs([]);\r\n        setSeparateGraphs([]);\r\n        setGraphData(null);\r\n      });\r\n  };\r\n\r\n  useState(() => {\r\n    getDataRequest(selectedStock, selectedTime);\r\n  }, []);\r\n\r\n  const handleStockChange = (stock) => {\r\n    setSelectStock(stock);\r\n    getDataRequest(\r\n      stock,\r\n      selectedTime,\r\n      selectedTemp.id,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const handlePatternChange = (pattern) => {\r\n    console.log(\"pattern\", pattern);\r\n    setSelectedPattern(pattern);\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      selectedTemp.id,\r\n      pattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const hanldeSelectedTime = (time) => {\r\n    setSelectTime(time);\r\n    getDataRequest(\r\n      selectedStock,\r\n      time,\r\n      selectedTemp.id,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const templateChange = (tempData) => {\r\n    setSelectedTemp(tempData);\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      tempData.id,\r\n      selectedPattern,\r\n      switchToggle\r\n    );\r\n  };\r\n\r\n  const handlSwitchToggle = (v) => {\r\n    getDataRequest(\r\n      selectedStock,\r\n      selectedTime,\r\n      selectedTemp.id,\r\n      selectedPattern,\r\n      v\r\n    );\r\n    setSwitchToggle(v);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? <div className=\"loader\"></div> : <></>}\r\n      <div style={{ padding: \"10px\" }}>\r\n        <Header\r\n          switchToggle={switchToggle}\r\n          handlSwitchToggle={handlSwitchToggle}\r\n          graphType={graphType}\r\n          handleGrapthType={handleGrapthType}\r\n          templateChange={templateChange}\r\n          templatesOptions={templatesOptions}\r\n          data={data}\r\n          selectedStock={selectedStock}\r\n          selectedTime={selectedTime}\r\n          hanldeSelectedTime={hanldeSelectedTime}\r\n          handleStockChange={handleStockChange}\r\n          selectedTemp={selectedTemp}\r\n          selectedPattern={selectedPattern}\r\n          handlePatternChange={handlePatternChange}\r\n        />\r\n\r\n        <div id=\"fullscreen\">\r\n          <Graph\r\n            style={style}\r\n            data={{ ...data, type: graphType }}\r\n            layout={layout}\r\n            templates={[\r\n              ...(mergedGraphs.length ? [...mergedGraphs] : []),\r\n              ...(switchToggle\r\n                ? [\r\n                    {\r\n                      x: data?.x.map((m) => {\r\n                        if (!m) return null;\r\n                        else return String(m);\r\n                      }),\r\n                      y: data?.ConfrimHigh.map((m, i) => {\r\n                        if (!m) return null;\r\n                        else return data.high[i];\r\n                      }),\r\n                      xaxis: \"x\",\r\n                      name: \"Confrim High\",\r\n                      yaxis: \"y\",\r\n                      mode: \"markers\",\r\n                      type: \"scatter\",\r\n                      marker: {\r\n                        size: 4,\r\n                        color: \"green\",\r\n                        symbol: \"diamond\",\r\n                      },\r\n                    },\r\n                  ]\r\n                : []),\r\n              ...(switchToggle\r\n                ? [\r\n                    {\r\n                      x: data.x.map((m) => {\r\n                        if (!m) return null;\r\n                        else return new Date(m);\r\n                      }),\r\n                      y: data.ConfrimLow.map((m, i) => {\r\n                        if (!m) return null;\r\n                        else return data.low[i];\r\n                      }),\r\n                      xaxis: \"x\",\r\n                      name: \"Confrim Low\",\r\n                      yaxis: \"y\",\r\n                      mode: \"markers\",\r\n                      marker: {\r\n                        size: 4,\r\n                        color: \"red\",\r\n                        symbol: \"diamond\",\r\n                      },\r\n                    },\r\n                  ]\r\n                : []),\r\n            ]}\r\n            loader={loader}\r\n          />\r\n          {!loader &&\r\n            separateGraphs.map((m, i) => (\r\n              <Graph\r\n                key={i + \"subGraph\"}\r\n                templates={m.templates}\r\n                style={{ width: \"100%\" }}\r\n                data={{ ...m }}\r\n                layout={{\r\n                  dragmode: \"zoom\",\r\n                  margin: {\r\n                    r: 10,\r\n                    t: 1,\r\n                    b: 40,\r\n                    l: 20,\r\n                  },\r\n                  showlegend: true,\r\n                  legend: { orientation: \"h\" },\r\n                  xaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    type: \"category\",\r\n                    dtick: 30 * 24 * 60 * 60 * 1000,\r\n                    tickformat: \"%d %B (%a)\\n %Y\",\r\n                    ticklen: 15,\r\n                    nticks: 10,\r\n                  },\r\n                  yaxis: {\r\n                    domain: [0, 1],\r\n                    autorange: true,\r\n                    rangeslider: {\r\n                      visible: false,\r\n                    },\r\n                    position: 1,\r\n                    side: \"bottom\",\r\n                  },\r\n                  opacity: 0.2,\r\n                  autosize: true,\r\n                  height: 190,\r\n                }}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}