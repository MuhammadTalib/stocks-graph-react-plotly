{"version":3,"sources":["Components/Graph.jsx","services/api.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","config","scrollZoom","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","Header","handleGrapthType","graphType","templateChange","templatesOptions","selectedStock","handleStockChange","selectedTime","hanldeSelectedTime","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","item","xs","Autocomplete","value","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","color","map","t","i","m","name","template1","graph","x","y","low","xaxis","yaxis","marker","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","id","template","dummy","decreasing","line","increasing","App","setGraphType","setSubGraphs","selectedTemplates","setSelectedTemplates","setTemplates","dragmode","margin","l","r","b","showlegend","domain","rangeslider","visible","title","autorange","autosize","height","setSelectStock","setSelectTime","setGraphData","toLowerCase","forEach","push","Date","date","tempData","indexOf","filter","f","time","stock","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67abbbeb.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates }) => {\n  return (\n    <Plot style={style} data={[data, ...(templates || [])]} layout={layout} \n    config={{\n      scrollZoom:true,\n    }}\n    />\n  );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\n\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  hanldeSelectedTime,\n}) => {\n  let [stocks, setStocks] = useState([]);\n  const times = [\"1h\", \"1d\", \"1wk\", \"1mo\"];\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res.data.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          value={selectedStock}\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          inputValue={selectedStock}\n          options={stocks}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button onClick={() => handleGrapthType(\"candlestick\")}>\n            <WaterfallChartIcon\n              color={graphType === \"candlestick\" ? \"primary\" : \"action\"}\n            />\n          </Button>\n          <Button onClick={() => handleGrapthType(\"ohlc\")}>\n            <BarChartIcon color={graphType !== \"ohlc\" ? \"primary\" : \"action\"} />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              color={selectedTime !== t ? \"primary\" : \"error\"}\n            >\n              {t}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item xs={5}>\n        {\" \"}\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templatesOptions(data).map((m, i) => (\n            <Button key={i} onClick={() => templateChange(m)}>\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(255,0,0,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  close: [],\n  decreasing: { line: { color: \"black\" } },\n  high: [],\n  increasing: { line: { color: \"black\" } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\n\nfunction App() {\n  const [graphType, setGraphType] = useState(\"candlestick\");\n  const [subGraphs, setSubGraphs] = useState([]);\n  const [selectedTemplates, setSelectedTemplates] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout] = useState({\n    dragmode: \"zoom\",\n    margin: { t: 0, l: 30, r: 0, b: 25 },\n    showlegend: false,\n    xaxis: {\n      domain: [0, 1],\n      rangeslider: {\n        visible: false,\n      },\n      title: \"Date\",\n      type: \"date\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      autorange: true,\n    },\n    autosize: true,\n    height: 600,\n    // xaxis2: { domain: [0, 1] },\n    // yaxis2: { anchor: \"y2\", domain: [0.18, 0.38], range: [-140, 140] },\n\n    // xaxis3: { domain: [0, 1] },\n    // yaxis3: { anchor: \"y3\", domain: [0, 0.18], range: [115, 140] },\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n  const addTemplate = (id, template) => {\n    console.log(\"Arr\", template.subGraphs);\n    if (selectedTemplates.indexOf(id) !== -1) {\n      setTemplates([...templates.filter((f) => f.templateType !== id)]);\n      setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\n\n      setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\n    } else {\n      setSelectedTemplates([...selectedTemplates, id]);\n\n      setTemplates([...templates, ...template.graph]);\n      setSubGraphs([...subGraphs, ...template.subGraphs]);\n    }\n  };\n  const templateChange = (tempData) => {\n    console.log(\"template.subGraphs\", tempData);\n    addTemplate(tempData.id, tempData.template);\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedTime, setSelectTime] = useState(\"1d\");\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  useState(() => {\n    getAllStocks(\n      `stocks?stock=${selectedStock?.toLowerCase()}&interval=${selectedTime}`\n    ).then((res) => {\n      let high = [],\n        low = [],\n        open = [],\n        close = [],\n        x = [];\n      res?.data?.data?.forEach((m) => {\n        high.push(m.high);\n        low.push(m.low);\n        open.push(m.open);\n        close.push(m.close);\n        x.push(new Date(m.date));\n      });\n      setGraphData({ ...dummy, high, low, open, close, x });\n    });\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    stock &&\n      getAllStocks(\n        `stocks?stock=${stock?.toLowerCase()}&interval=${selectedTime}`\n      ).then((res) => {\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n        res?.data?.data?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          x.push(new Date(m.date));\n        });\n        setGraphData({ ...dummy, high, low, open, close, x });\n      });\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    selectedStock &&\n      getAllStocks(\n        `stocks?stock=${selectedStock?.toLowerCase()}&interval=${selectedTime}`\n      ).then((res) => {\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n        res?.data?.data?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          x.push(new Date(m.date));\n        });\n        setGraphData({ ...dummy, high, low, open, close, x });\n      });\n  };\n  return (\n    <div>\n      <Header\n        graphType={graphType}\n        handleGrapthType={handleGrapthType}\n        templateChange={templateChange}\n        templatesOptions={templatesOptions}\n        data={data}\n        selectedStock={selectedStock}\n        selectedTime={selectedTime}\n        hanldeSelectedTime={hanldeSelectedTime}\n        handleStockChange={handleStockChange}\n      />\n\n      <div id=\"fullscreen\">\n        <Graph\n          style={style}\n          data={{ ...data, type: graphType }}\n          layout={layout}\n          templates={templates}\n        />\n        {subGraphs.map((m) => (\n          <Graph\n            key={m}\n            style={{ width: \"100%\" }}\n            data={{ ...m }}\n            layout={{ ...layout, autosize: true, height: 150 }}\n            templates={m.mergedGraphs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}