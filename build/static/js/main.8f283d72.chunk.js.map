{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","className","config","responsive","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","selectedTime","hanldeSelectedTime","selectedTemp","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","value","disableClearable","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","color","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","line","width","increasing","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","orientation","domain","range","rangeslider","visible","autorange","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectTime","setSelectedTemp","setGraphData","getDataRequest","stock","time","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","EMA3","EMA4","EMA5","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","SMA0","SMA1","SMA2","SMA3","stochd0","stochk0","MA0","MA1","RSI0","R0","R1","donchian0","forEach","push","Date","date","indicators","lowLowest","Math","min","filter","f","closeLowest","lowest","highHighest","openHighest","max","highest","now","err","tempData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f283d72.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates, loader }) => {\n  const config = { responsive: true };\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        style={style}\n        data={[data, ...(templates || [])]}\n        layout={layout}\n        config={config}\n      />\n    );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","export const times = [\n  { name: \"1h\", ms: 3600000 },\n  { name: \"1d\", ms: 86400000 },\n  { name: \"1wk\", ms: 604800000 },\n  { name: \"1mo\", ms: 2629746000 },\n];\n\nexport const templates = [\n  { name: \"T0\", id: 0 },\n  { name: \"T1\", id: 1 },\n  { name: \"T2\", id: 2 },\n  { name: \"T3\", id: 3 },\n  { name: \"T4\", id: 4 },\n  { name: \"T5\", id: 5 },\n  { name: \"T6\", id: 6 },\n  { name: \"T7\", id: 7 },\n  { name: \"T8\", id: 8 },\n];\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { times, templates } from \"../Utils/utils\";\nimport \"../App.css\";\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  hanldeSelectedTime,\n  selectedTemp,\n}) => {\n  let [stocks, setStocks] = useState([]);\n\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res?.data?.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      style={{ padding: \"10px\" }}\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          value={selectedStock}\n          disableClearable\n          // textInputProps={{ clearButtonMode: \"hidden\" }}\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          inputValue={selectedStock}\n          options={stocks}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"candlestick\")}\n          >\n            <WaterfallChartIcon />\n          </Button>\n          <Button\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"ohlc\")}\n          >\n            <BarChartIcon />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              className={`btn ${\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\n              }`}\n            >\n              {t.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item xs={5}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templates.map((m, i) => (\n            <Button\n              key={i}\n              onClick={() => templateChange(m)}\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\n            >\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  name: \"main\",\n  close: [],\n  decreasing: {\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\nconst rightMargin = 20;\n// const candleDefault = 214 + rightMargin;\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n\n  const [graphType, setGraphType] = useState(\"candlestick\");\n  // const [subGraphs, setSubGraphs] = useState([]);\n  // const [selectedTemplates, setSelectedTemplates] = useState([]);\n  // const [templates, setTemplates] = useState([]);\n\n  const [mergedGraphs, setMergedGraphs] = useState([]);\n  const [separateGraphs, setSeparateGraphs] = useState([]);\n\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout, setLayout] = useState({\n    dragmode: \"zoom\",\n    margin: {\n      r: 10,\n      t: 25,\n      b: 40,\n      l: 20,\n    },\n    showlegend: true,\n    legend: { orientation: \"h\" },\n    xaxis: {\n      domain: [0, 1],\n      range: [],\n      rangeslider: {\n        visible: false,\n      },\n      type: \"date\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      autorange: true,\n      rangeslider: {\n        visible: false,\n      },\n      position: 1,\n      side: \"bottom\",\n      type: \"linear\",\n    },\n    opacity: 0.2,\n\n    // shapes: [\n    //   {\n    //     type: \"rect\",\n    //     xref: \"x\",\n    //     yref: \"y\",\n    //     x0: \"2021-10-25\",\n    //     y0: 179,\n    //     x1: \"2021-10-26\",\n    //     y1: 180.5,\n    //     fillcolor: \"yellow\",\n    //     opacity: 0.6,\n    //     line: {\n    //       width: 1,\n    //       color: \"green\",\n    //       opacity: 1,\n    //     },\n    //   },\n    // ],\n    autosize: true,\n    height: 550,\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n  // const addTemplate = (id, template) => {\n  //   if (selectedTemplates.indexOf(id) !== -1) {\n  //     setTemplates([...templates.filter((f) => f.templateType !== id)]);\n  //     setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\n  //     setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\n  //   } else {\n  //     setSelectedTemplates([...selectedTemplates, id]);\n  //     setTemplates([...templates, ...template.graph]);\n  //     setSubGraphs([...subGraphs, ...template.subGraphs]);\n  //   }\n  // };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\n  const [selectedTemp, setSelectedTemp] = useState(0);\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const getDataRequest = (stock, time, template) => {\n    setLoader(true);\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\n    if (template > 0) {\n      url = url + `&template=${template}`;\n    }\n    getAllStocks(url)\n      .then((res) => {\n        console.log(\n          \"Total candles on time \",\n          time.name,\n          \" is \",\n          res?.data?.data.length\n        );\n        setLoader(false);\n        let responseData = [...res?.data?.data];\n\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n\n        let EMA0 = [];\n        let EMA1 = [];\n        let EMA2 = [];\n        let EMA3 = [];\n        let EMA4 = [];\n        let EMA5 = [];\n\n        let MACD0 = [];\n        let MACD1 = [];\n        let MACD2 = [];\n        let MACDHIST0 = [];\n        let MACDHIST1 = [];\n        let MACDHIST2 = [];\n        let MACDSIGNAL0 = [];\n        let MACDSIGNAL1 = [];\n        let MACDSIGNAL2 = [];\n\n        let SMA0 = [];\n        let SMA1 = [];\n        let SMA2 = [];\n        let SMA3 = [];\n\n        let stochd0 = [];\n        let stochk0 = [];\n\n        let MA0 = [];\n        let MA1 = [];\n        let RSI0 = [];\n\n        let R0 = [];\n        let R1 = [];\n        let donchian0 = [];\n\n        responseData?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          x.push(new Date(m.date));\n          if (template === 1) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n          } else if (template === 2) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            EMA4.push(m.indicators?.EMA4);\n            EMA5.push(m.indicators?.EMA5);\n          } else if (template === 3 && m.indicators) {\n            R0.push(m.indicators[\"%R0\"]);\n            R1.push(m.indicators[\"%R1\"]);\n            donchian0.push(m.indicators?.donchian0);\n          } else if (template === 4) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            SMA0.push(m.indicators?.SMA0);\n            SMA1.push(m.indicators?.SMA1);\n            SMA2.push(m.indicators?.SMA2);\n            SMA3.push(m.indicators?.SMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 5) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDHIST2.push(m.indicators?.MACDHIST2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            SMA0.push(m.indicators?.SMA0);\n            SMA1.push(m.indicators?.SMA1);\n            SMA2.push(m.indicators?.SMA2);\n            SMA3.push(m.indicators?.SMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 6) {\n          } else if (template === 7) {\n            EMA0.push(m.indicators?.EMA0);\n            MA0.push(m.indicators?.MA0);\n            MA1.push(m.indicators?.MA1);\n            RSI0.push(m.indicators?.RSI0);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 8) {\n            MACD0.push(m.indicators?.MACD0);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            RSI0.push(m.indicators?.RSI0);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          }\n        });\n\n        let lowLowest = Math.min(...low.filter((f) => f !== null));\n        let closeLowest = Math.min(...close.filter((f) => f !== null));\n        let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\n\n        let highHighest = Math.min(...low.filter((f) => f !== null));\n        let openHighest = Math.max(...close.filter((f) => f !== null));\n        let highest = openHighest > highHighest ? openHighest : highHighest;\n\n        console.log(\"lowest\", lowest, highest);\n\n        for (let i = 0; i < rightMargin; i++) {\n          high.push(null);\n          low.push(null);\n          open.push(null);\n          close.push(null);\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\n          if (template === 1) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n          } else if (template === 2) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            EMA4.push(null);\n            EMA5.push(null);\n          } else if (template === 3) {\n            R0.push(null);\n            R1.push(null);\n            donchian0.push(null);\n          } else if (template === 4) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDHIST1.push(null);\n            MACDSIGNAL2.push(null);\n            SMA0.push(null);\n            SMA1.push(null);\n            SMA2.push(null);\n            SMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 5) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDHIST0.push(null);\n            MACDHIST1.push(null);\n            MACDHIST2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDSIGNAL1.push(null);\n            MACDSIGNAL2.push(null);\n            SMA0.push(null);\n            SMA1.push(null);\n            SMA2.push(null);\n            SMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 7) {\n            EMA0.push(null);\n            MA0.push(null);\n            MA1.push(null);\n            RSI0.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 6) {\n          } else if (template === 8) {\n            MACD0.push(null);\n            MACDHIST0.push(null);\n            MACDSIGNAL0.push(null);\n            RSI0.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          }\n        }\n        if (template === 0) {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        } else if (template === 1) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              xaxis: \"x\",\n              name: \"EMA0\",\n              yaxis: \"y\",\n              type: \"scatter\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              name: \"EMA1\",\n              xaxis: \"x\",\n              type: \"scatter\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              name: \"EMA2\",\n              type: \"scatter\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 2) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              name: \"EMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              name: \"EMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA3,\n              name: \"EMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA4,\n              name: \"EMA4\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA5,\n              name: \"EMA5\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 3) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: donchian0,\n              name: \"DONCHAIN\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: R0,\n              name: \"%R0\",\n              type: \"bar\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: R1,\n              type: \"bar\",\n              name: \"%R1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n        } else if (template === 4) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: SMA0,\n              name: \"SMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(255,173,89)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA1,\n              name: \"SMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(253,91,252)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA2,\n              name: \"SMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(172,91,170)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA3,\n              name: \"SMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(89,89,89)\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACDHIST1,\n              name: \"MACD HIST\",\n              type: \"bar\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: MACDHIST1.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\n              },\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 5) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: SMA0,\n              name: \"SMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: SMA1,\n              name: \"SMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(255,0,56)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA2,\n              name: \"SMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(13,190,58)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA3,\n              name: \"SMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDHIST0,\n                  name: \"MACDHIST\",\n                  type: \"bar\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 6) {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        } else if (template === 7) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: MA0,\n              name: \"MA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n            {\n              x: x,\n              y: MA1,\n              name: \"MA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              name: \"RSI0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 8) {\n          setMergedGraphs([]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              name: \"RSI0\",\n              marker: {\n                color: \"rgb(126,87,194)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(255,109,0)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(43,97,255)\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"rgb(43,97,255)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(255,109,0)\",\n                  },\n                },\n                {\n                  x: x,\n                  y: MACDHIST0,\n                  type: \"bar\",\n                  name: \"MACD HIST\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\n                  },\n                },\n              ],\n            },\n          ]);\n        } else {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        }\n        setGraphData({ ...dummy, high, low, open, close, x });\n        setLayout({\n          ...layout,\n          xaxis: {\n            ...layout.xaxis,\n            // range: [\n            //   new Date(Date.now(x[x.length - 1]) - candleDefault * time.ms),\n            //   new Date(x[x.length - 1]),\n            //   // new Date(x[0]), // - candleDefault * time.ms),\n            //   // new Date(x[x.length - 1]),\n            // ],\n          },\n          yaxis: {\n            ...layout.yaxis,\n            rangeslider: {\n              visible: false,\n            },\n            autorange: true,\n            // range: [lowest, highest],\n          },\n        });\n      })\n      .catch((err) => {\n        setLoader(false);\n        setMergedGraphs([]);\n        setSeparateGraphs([]);\n        setGraphData(null);\n      });\n  };\n\n  useState(() => {\n    getDataRequest(selectedStock, selectedTime);\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    getDataRequest(stock, selectedTime, selectedTemp.id);\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    getDataRequest(selectedStock, time, selectedTemp.id);\n  };\n\n  const templateChange = (tempData) => {\n    setSelectedTemp(tempData);\n    getDataRequest(selectedStock, selectedTime, tempData.id);\n  };\n\n  return (\n    <>\n      {loader ? <div className=\"loader\"></div> : <></>}\n      <div style={{ padding: \"10px\" }}>\n        <Header\n          graphType={graphType}\n          handleGrapthType={handleGrapthType}\n          templateChange={templateChange}\n          templatesOptions={templatesOptions}\n          data={data}\n          selectedStock={selectedStock}\n          selectedTime={selectedTime}\n          hanldeSelectedTime={hanldeSelectedTime}\n          handleStockChange={handleStockChange}\n          selectedTemp={selectedTemp}\n        />\n\n        <div id=\"fullscreen\">\n          <Graph\n            style={style}\n            data={{ ...data, type: graphType }}\n            layout={layout}\n            templates={mergedGraphs.length ? [...mergedGraphs] : []}\n            loader={loader}\n          />\n          {!loader &&\n            separateGraphs.map((m) => (\n              <Graph\n                key={m}\n                templates={m.templates}\n                style={{ width: \"100%\" }}\n                data={{ ...m }}\n                layout={{\n                  dragmode: \"zoom\",\n                  margin: {\n                    r: 10,\n                    t: 1,\n                    b: 40,\n                    l: 20,\n                  },\n                  showlegend: true,\n                  legend: { orientation: \"h\" },\n                  xaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    type: \"date\",\n                  },\n                  yaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    position: 1,\n                    side: \"bottom\",\n                  },\n                  opacity: 0.2,\n                  autosize: true,\n                  height: 190,\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}