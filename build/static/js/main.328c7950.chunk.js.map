{"version":3,"sources":["services/api.js","Utils/defaults.js","Utils/utils.js","Utils/patternUtils.js","Components/Graph.jsx","Components/InfoLines.jsx","Components/DefaultChart.jsx","Components/GraphRenderer.jsx","Components/AutocompleteWrapper.jsx","Components/Header.jsx","Utils/sorting.js","Components/FilterPanelTable.jsx","Components/DateRangePickerWrapper.jsx","Components/PatternTriggers.jsx","Components/WatchListRow.jsx","Components/WatchListTable.jsx","Components/WatchList.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["axios","defaults","baseURL","getAllStocks","async","endpoint","method","data","post","concat","then","catch","error","console","log","get","initialLayout","dragmode","margin","r","t","b","l","hovermode","showlegend","legend","x","y","traceorder","font","family","size","color","bgcolor","bordercolor","xaxis","domain","rangeslider","visible","autorange","type","tickmode","showspikes","spikemode","spikesnap","spikethickness","spikecolor","spikedash","yaxis","position","side","opacity","autosize","width","window","innerWidth","height","innerHeight","times","name","desc","ms","rightMargin","months","dummy","close","decreasing","fillcolor","line","high","increasing","low","open","hoverinfo","templates","id","merged","separate","layout","EMA0","mode","marker","EMA1","EMA2","markerFn","_","map","m","i","yaxis2","EMA3","EMA4","EMA5","donchian_price0","donchian_min0","donchian_max0","ema_10","yaxis3","SMA0","SMA1","SMA2","SMA3","range","yaxis4","MACD0","MACDSIGNAL0","MACDHIST0","stochd0","stochk0","line1","customLine","dash","line2","line3","line4","HIST0","MA0","MA1","RSI0","line5","line6","arrayMin","array","reduce","a","Math","min","drawConfirmHighAndLow","switchToggle","pointIndex","ConfrimHigh","is_closed_based","real_condition","insertion_condition","modified_condition","symbol","ConfrimLow","getMetaIndicatorColorName","metaIndicator","_data$metaIndicator","drawMergedChart","selectedTemp","graphType","mergedCandles","elder_impulse_system","length","realHigh","f_","iindex","is_red","patternData","is_green","Object","keys","key","drawSeparateChart","drawStrategiesBar","strategiesData","dateIndex","findLastIndex","f","values","includes","text","x0","y0","x1","yref","y1","drawFirstDateLine","toggleFirstDayLine","slice","dateStr","date1","Date","getDate","date2","date3","String","getOccuredReversalPatterns","pattern","filter","find","occured","Array","isArray","forEach","_patternData$pointInd","_patternData$pointInd2","_patternData$pointInd3","_patternData$pointInd4","isT3Pattern","isT3FailurePattern","getPatternNameList","patterns","patternArr","drawPatternData","selectedPattern","_patterns","_drawX","_drawX2","_patterns2","_patterns3","drawX","is_combo_pattern","pattern_name_list","ans","perc10","max","Number","drawPatternTriggers","_patterns4","_patterns5","_patterns6","_patterns7","_patterns8","patternTrigger","_m$key","trigger","trigger_value","trigger_failure","trigger_failure_value","Plot","createPlotlyComponent","Plotly","Graph","_ref","_document$querySelect","loader","separateGraphs","onHover","onUnhover","onClick","onDoubleClick","setLayout","dualChartWidth","sidebarWidth","selectedStrategy","document","querySelector","addEventListener","event","bottomTemplate","setBottomTemplates","useState","useEffect","temp","spG","_spG$templates","_spG$templates2","push","_jsx","className","children","shapes","config","scrollZoom","useResizeHandler","onRelayout","e","InfoLines","selectedStock","ohlc","selectedTime","_jsxs","style","marginLeft","fontSize","description","sources","toUpperCase","_Fragment","DefaultChart","_data$x","_data$patternTrigger$","_data$patternTrigger$2","selectedCategory","enableDualChart","dataBaseUrl","setStrategiesData","setGraphData","currentSelectedTemp","setCurrentSelectedTemp","setLoader","prevCountRef","useRef","getDataRequest","setSelectedTemp","stock","time","template","meta_trader_indicator","_stock$name","_stock$sources","_stock$name2","_stock$sources2","click","strategiesLength","currStrategy","stra","Map","item","ii","selectedSource","url","toLowerCase","watch_list","interval","strategies","source","res","_res$data","_res$data2","patterns_list","responseData","tempMerged","resMerged","tempSeparate","resSeparate","_m","ith","_m$pattern","_m$pattern2","_m$pattern3","date","toUTCString","undefined","pattern_end","_m$pattern4","_m$pattern5","_m$pattern6","_m$pattern7","_m$pattern8","patternObj","trigger_value_max","trigger_value_min","_m$pattern9","_m$pattern10","_m$pattern11","arrowPattern","crossPattern","straIns","_m$straIns","_m$straIns2","_m$straIns3","_m$straIns4","_m$straIns5","_m$straIns6","_m$straIns7","_m$straIns8","_m$indicators","indicators","tempLayout","now","hovertext","dualChartSet","tickvals","ticktext","d","getMonth","getUTCFullYear","shp","lowP","highP","xref","err","getDataRequestService","addPreviousStrategy","current","border","GraphRenderer","secondaryLayout","setSecondaryLayout","secondaryChartTime","setSecondayChartTime","getTimeforSecondaryGraph","cursor","setCursor","currentSelected","setCurrentSelected","setPointIndex","_ref2","points","point","dualChartRef","isResizing","setIsResizing","setDualChartWidth","stopResizing","React","useCallback","startResizing","mouseDownEvent","resize","mouseMoveEvent","w","getBoundingClientRect","right","clientX","removeEventListener","display","overflowY","overflowX","marginTop","ref","onMouseDown","preventDefault","CustomPaper","props","Paper","elevation","AutocompleteWrapper","options","value","label","handleChange","getOptionLabel","renderOption","multiple","renderInput","limitTags","openPatternDropdown","setOpenPatternDropdown","patternRef","onMouseLeave","Autocomplete","onKeyPress","keyCode","selectOnFocus","blurOnSelect","onChange","newValue","fullWidth","onBlur","onKeyDown","defaultValue","v","PaperComponent","params","TextField","variant","Header","handleGrapthType","templateChange","setEnableDualChart","handlePatternChange","hanldeSelectedTime","handlSwitchToggle","setToggleFirstDayLine","setSidebarWidth","linkRef","setPatterns","sidebarOpen","setSidebarOpen","list","Box","sx","flexGrow","Grid","container","spacing","padding","xs","FormControlLabel","control","Switch","disabled","checked","target","ButtonGroup","Button","xmlns","viewBox","fill","stroke","strokeLinecap","md","option","isOptionEqualToValue","Link","to","IconButton","openSidebar","MenuIcon","descendingComparator","orderBy","getComparator","order","stableSort","comparator","stabilizedThis","el","index","sort","FilterPanelTable","scrollableListRef","placeSelectedItemInTheMiddle","handleStockChange","stocks","setStocks","symbolFilter","timeFilter","setSelectStockIndex","selectedStockIndex","tableData","setTableData","patternColumns","setPatternColumns","pagination","setPagination","pageSize","currentPage","total_count","total_pages","fetchTableData","handleKeyDown","join","tableDict","columns","col","datetime","processTableData","page","sectorName","setOrder","setOrderBy","TableContainer","maxHeight","Table","minWidth","stickyHeader","TableHead","TableRow","numeric","column","TableCell","align","sortDirection","TableSortLabel","active","direction","property","isAsc","obj","s","_strategiesData$i","_strategiesData$i$dat","_strategiesData$i$dat2","Symbol","Interval","component","visuallyHidden","TableBody","row","toString","focus","Pagination","justifyContent","count","DateRangePickerWrapper","selectedDate","setSelectedDate","icon","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","PatternTriggers","filtersColumns","createSortHandler","categories","setSelectedCategory","setSelectedTime","setSymbolFilter","setTimeFilter","sm","selected","Checkbox","WatchListRow","_row$sources","_m$data","_m$data$row$name","_m$data2","_m$data2$row$name","_m$data3","_m$data3$row$name","_m$data4","_m$data4$row$name","_m$data5","_m$data5$row$name","_m$data6","_m$data6$row$name","WatchListTable","Set","CustomTabPanel","other","role","hidden","WatchList","setSelectedStrategy","setStrategies","setCategories","_res$data$list","_res$data3","_res$data4","Sources","Description","Time","useMemo","filters","sidebarRef","floor","a11yProps","setValue","borderBottom","borderColor","Tabs","Tab","useStyles","makeStyles","App","classes","setGraphType","setSelectStock","setSelectedPattern","setSelectTime","setSwitchToggle","tempData","amountToScroll","LIST_ITEM_HEIGHT","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","primary","theme","createTheme","adaptV4Theme","palette","main","light","secondary","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","wordBreak","h2","h3","h4","h5","h6","subtitle1","fontWeight","subtitle2","body1","body2","MuiTextField","MuiTooltip","placement","arrow","overrides","MuiInput","input","MuiInputLabel","root","tooltip","backgroundColor","MuiCheckbox","colorSecondary","MuiTableCell","maxWidth","head","background","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","BrowserRouter","Routes","Route","path","element","getElementById"],"mappings":"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","file":"static/js/main.328c7950.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint, method, data) => {\n  if (method === \"post\") {\n    return await axios\n      .post(`${endpoint}`, data)\n      .then((data) => {\n        return data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  return await axios\n    .get(`${endpoint}`)\n    .then((data) => {\n      return data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","export const initialLayout = {\n    dragmode: \"pan\",\n    margin: {\n        r: 10,\n        t: 25,\n        b: 40,\n        l: 20,\n    },\n    hovermode: \"x\",\n    showlegend: true,\n    legend: {\n        x: 0,\n        y: 1,\n        traceorder: \"normal\",\n        font: {\n            family: \"sans-serif\",\n            size: 12,\n            color: \"#000\",\n        },\n        bgcolor: \"#E2E2E211\",\n        bordercolor: \"#FFFFFF\",\n    },\n    xaxis: {\n        domain: [0, 1],\n        rangeslider: {\n            visible: false,\n        },\n        autorange: false,\n        type: \"category\",\n        tickmode: \"array\",\n        showspikes: true,\n        spikemode: \"toaxis+across+marker\",\n        spikesnap: \"cursor\",\n        spikethickness: 1,\n        spikecolor: \"black\",\n        spikedash: \"dot\",\n    },\n    yaxis: {\n        domain: [0, 1],\n        autorange: true,\n        rangeslider: {\n            visible: false,\n        },\n        position: 1,\n        side: \"bottom\",\n        type: \"linear\",\n        showspikes: true,\n        spikemode: \"toaxis+across+marker\",\n        spikesnap: \"cursor\",\n        spikethickness: 1,\n        spikecolor: \"black\",\n        spikedash: \"dot\",\n    },\n    opacity: 0.2,\n    autosize: true,\n    width: window.innerWidth - 10,\n    height: window.innerHeight - 80,\n};\n\nexport const times = [\n    { name: \"5m\", desc: \"5 Minutes\", ms: 60000 * 5 },\n    { name: \"10m\", desc: \"10 Minutes\", ms: 60000 * 10 },\n    { name: \"15m\", desc: \"15 Minutes\", ms: 60000 * 15 },\n    { name: \"30m\", desc: \"30 Minutes\", ms: 60000 * 30 },\n    { name: \"1h\", desc: \"1 Hour\", ms: 3600000 * 1 },\n    { name: \"2h\", desc: \"2 Hour\", ms: 3600000 * 2 },\n    { name: \"4h\", desc: \"4 Hour\", ms: 3600000 * 4 },\n    { name: \"6h\", desc: \"6 Hour\", ms: 3600000 * 6 },\n    { name: \"8h\", desc: \"8 Hour\", ms: 3600000 * 8 },\n    { name: \"12h\", desc: \"12 Hour\", ms: 3600000 * 12 },\n    { name: \"18h\", desc: \"18 Hour\", ms: 3600000 * 18 },\n    { name: \"1d\", desc: \"1 Day\", ms: 86400000 * 1 },\n    { name: \"2d\", desc: \"2 Day\", ms: 86400000 * 2 },\n    { name: \"3d\", desc: \"3 Day\", ms: 86400000 * 3 },\n    { name: \"1wk\", desc: \"1 Week\", ms: 604800000 },\n    { name: \"2wk\", desc: \"2 Week\", ms: 604800000 * 2 },\n    { name: \"1mo\", desc: \"1 Month\", ms: 2629746000 * 1 },\n];\n\nexport const rightMargin = 23;\n\nexport const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n\nexport const T0 = {\n    name: \"T0\",\n    id: 0,\n    merged: {},\n    separate: {},\n    layout: {\n        yaxis: { ...initialLayout.yaxis, domain: [0, 1] },\n    },\n};\n\nexport const dummy = {\n    x: [],\n    name: \"main\",\n    close: [],\n    decreasing: {\n        fillcolor: \"black\",\n        line: { color: \"black\", width: 1 },\n    },\n    high: [],\n    increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n    low: [],\n    open: [],\n    type: \"candlestick\",\n    hoverinfo: \"x\",\n};\n\nexport const templates = [\n    {\n        name: \"T0\",\n        id: 0,\n        merged: {},\n        separate: {},\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0, 1] },\n        },\n    },\n    {\n        name: \"T1\",\n        id: 1,\n        merged: {\n            EMA0: {\n                data: [],\n                xaxis: \"x\",\n                name: `EMA 20`,\n                yaxis: \"y\",\n                mode: \"line\",\n                type: \"scatter\",\n                marker: {\n                    size: 4,\n                    color: \"blue\",\n                },\n                hoverinfo: \"x\",\n            },\n            EMA1: {\n                data: [],\n                name: \"EMA 22\",\n                xaxis: \"x\",\n                type: \"scatter\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA2: {\n                data: [],\n                name: \"EMA 26\",\n                type: \"scatter\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n        },\n        separate: {\n            \"Volume EMA\": {\n                data: [],\n                name: \"Volume\",\n                marker: {\n                    color: \"#9fa5c5\",\n                },\n                yaxis: \"y2\",\n                hoverinfo: \"x\",\n                type: \"bar\",\n                markerFn: (_, data) => {\n                    return {\n                        color: data.open.map((m, i) =>\n                            m < data.close[i] ? \"green\" : \"red\"\n                        ),\n                    };\n                },\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.3, 1] },\n            yaxis2: { ...initialLayout.yaxis, domain: [0, 0.25] },\n        },\n    },\n    {\n        name: \"T2\",\n        id: 2,\n        merged: {\n            EMA0: {\n                data: [],\n                xaxis: \"x\",\n                name: `EMA 10`,\n                yaxis: \"y\",\n                mode: \"line\",\n                type: \"scatter\",\n                marker: {\n                    size: 4,\n                    color: \"blue\",\n                },\n            },\n            EMA1: {\n                data: [],\n                name: \"EMA 11\",\n                xaxis: \"x\",\n                type: \"scatter\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA2: {\n                data: [],\n                name: \"EMA 13\",\n                type: \"scatter\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA3: {\n                data: [],\n                xaxis: \"x\",\n                yaxis: \"y\",\n                name: \"EMA 20\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n            EMA4: {\n                data: [],\n                name: \"EMA 22\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n            EMA5: {\n                data: [],\n                name: \"EMA 26\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n        },\n        separate: {},\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0, 1] },\n        },\n    },\n    {\n        name: \"T3\",\n        id: 3,\n        merged: {\n            donchian_price0: {\n                data: [],\n                name: \"DONCHIAN AVG\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                    size: 12,\n                },\n                line: {\n                    width: 1,\n                },\n            },\n            donchian_min0: {\n                data: [],\n                name: \"DONCHAIN MIN\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n                line: {\n                    width: 2,\n                },\n            },\n            donchian_max0: {\n                data: [],\n                name: \"DONCHAIN MAX\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n                line: {\n                    width: 2,\n                },\n            },\n            ema_10: {\n                data: [],\n                name: \"EMA 10\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n                line: {\n                    width: 2,\n                },\n            },\n        },\n        separate: {\n            \"%R0\": {\n                data: [],\n                name: \"%R(5)\",\n                type: \"bar\",\n                marker: {\n                    color: \"blue\",\n                },\n                yaxis: \"y2\",\n            },\n            \"%R1\": {\n                data: [],\n                name: \"%R(20)\",\n                type: \"bar\",\n                marker: {\n                    color: \"red\",\n                },\n                yaxis: \"y3\",\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.55, 1] },\n            yaxis2: { ...initialLayout.yaxis, domain: [0.25, 0.5] },\n            yaxis3: { ...initialLayout.yaxis, domain: [0, 0.25] },\n            xaxis: { ...initialLayout.xaxis },\n        },\n    },\n    {\n        name: \"T4\",\n        id: 4,\n        merged: {\n            SMA0: {\n                data: [],\n                name: \"MMA 20\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(255,173,89)\",\n                },\n            },\n            SMA1: {\n                data: [],\n                name: \"MMA 50\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(253,91,252)\",\n                },\n            },\n            SMA2: {\n                data: [],\n                name: \"MMA 100\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(172,91,170)\",\n                },\n            },\n            SMA3: {\n                data: [],\n                name: \"MMA 200\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(89,89,89)\",\n                },\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.5, 1] },\n            yaxis2: {\n                ...initialLayout.yaxis,\n                domain: [0.3, 0.45],\n                range: [-5, 5],\n                autorange: false,\n            },\n            yaxis3: { ...initialLayout.yaxis, domain: [0.15, 0.3] },\n            yaxis4: { ...initialLayout.yaxis, domain: [0, 0.15] },\n            xaxis: { ...initialLayout.xaxis },\n        },\n        separate: {\n            MACD0: {\n                data: [],\n                name: \"MACD LINE\",\n                marker: {\n                    color: \"blue\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y2\",\n            },\n            MACDSIGNAL0: {\n                data: [],\n                name: \"MACD SIGNAL\",\n                xaxis: \"x\",\n                yaxis: \"y2\",\n                marker: {\n                    color: \"black\",\n                },\n            },\n            MACDHIST0: {\n                data: [],\n                name: \"MACD HIST\",\n                type: \"bar\",\n                xaxis: \"x\",\n                yaxis: \"y3\",\n                markerFn: (MACDHIST0) => {\n                    return {\n                        color: MACDHIST0.map((m, i) =>\n                            m > 0 ? \"green\" : \"red\"\n                        ), //\"black\",\n                    };\n                },\n            },\n            stochd0: {\n                data: [],\n                name: \"stochd\",\n                marker: {\n                    color: \"rgb(153,42,173)\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y4\",\n            },\n\n            stochk0: {\n                data: [],\n                name: \"stochk\",\n                xaxis: \"x\",\n                yaxis: \"y4\",\n                marker: {\n                    color: \"rgb(13,0,255)\",\n                },\n            },\n            line1: {\n                customLine: 20,\n                data: [],\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    dash: \"dash\",\n                    width: 2,\n                    color: \"red\",\n                },\n            },\n            line2: {\n                data: [],\n                customLine: 80,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line3: {\n                data: [],\n                customLine: 10,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line4: {\n                data: [],\n                customLine: 90,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n        },\n    },\n    {\n        name: \"T5\",\n        id: 5,\n        merged: {\n            EMA0: {\n                data: [],\n                name: \"EMA 20\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA1: {\n                data: [],\n                name: \"EMA 50\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(255,0,56)\",\n                },\n            },\n            EMA2: {\n                data: [],\n                name: \"EMA 100\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"rgb(13,190,58)\",\n                },\n            },\n            EMA3: {\n                data: [],\n                name: \"EMA 200\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"black\",\n                },\n            },\n        },\n        separate: {\n            MACD0: {\n                data: [],\n                name: \"MACD LINE\",\n                marker: {\n                    color: \"blue\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y2\",\n            },\n            MACDSIGNAL0: {\n                data: [],\n                name: \"MACD SIGNAL\",\n                xaxis: \"x\",\n                yaxis: \"y2\",\n                marker: {\n                    color: \"black\",\n                },\n            },\n            MACDHIST0: {\n                data: [],\n                name: \"MACDHIST\",\n                type: \"bar\",\n                xaxis: \"x\",\n                yaxis: \"y3\",\n                markerFn: (MACDHIST0) => {\n                    return {\n                        color: MACDHIST0.map((m, i) =>\n                            m > 0 ? \"green\" : \"red\"\n                        ),\n                    };\n                },\n            },\n            stochd0: {\n                data: [],\n                name: \"stochd\",\n                marker: {\n                    color: \"rgb(153,42,173)\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y4\",\n            },\n            stochk0: {\n                data: [],\n                name: \"stochk\",\n                xaxis: \"x\",\n                yaxis: \"y4\",\n                marker: {\n                    color: \"rgb(13,0,255)\",\n                },\n            },\n            line1: {\n                customLine: 20,\n                data: [],\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    dash: \"dash\",\n                    width: 2,\n                    color: \"red\",\n                },\n            },\n            line2: {\n                customLine: 80,\n                data: [],\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line3: {\n                data: [],\n                customLine: 10,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line4: {\n                data: [],\n                customLine: 90,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y4\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.5, 1] },\n            yaxis2: { ...initialLayout.yaxis, domain: [0.3, 0.45] },\n            yaxis3: { ...initialLayout.yaxis, domain: [0.15, 0.3] },\n            yaxis4: { ...initialLayout.yaxis, domain: [0, 0.15] },\n            xaxis: { ...initialLayout.xaxis },\n        },\n    },\n    {\n        name: \"T6\",\n        id: 6,\n        merged: {\n            EMA0: {\n                data: [],\n                name: \"EMA 10\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA1: {\n                data: [],\n                name: \"EMA 11\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA2: {\n                data: [],\n                name: \"EMA 13\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            EMA3: {\n                data: [],\n                name: \"EMA 20\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n            EMA4: {\n                data: [],\n                name: \"EMA 22\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n            EMA5: {\n                data: [],\n                name: \"EMA 26\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"red\",\n                },\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.35, 1] },\n            yaxis2: { ...initialLayout.yaxis, domain: [0, 0.3] },\n            xaxis: { ...initialLayout.xaxis },\n        },\n        separate: {\n            HIST0: {\n                data: [],\n                type: \"bar\",\n                name: \"HIST0\",\n                markerFn: (HIST0) => {\n                    return {\n                        color: HIST0.map((m, i) =>\n                            m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\n                        ), //\"black\",\n                    };\n                },\n                xaxis: \"x\",\n                yaxis: \"y2\",\n            },\n        },\n    },\n    {\n        name: \"T7\",\n        id: 7,\n        merged: {\n            EMA0: {\n                data: [],\n                name: \"EMA 5\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"blue\",\n                },\n            },\n            MA0: {\n                data: [],\n                name: \"MA 10\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"black\",\n                },\n            },\n            MA1: {\n                data: [],\n                name: \"MA 30\",\n                xaxis: \"x\",\n                yaxis: \"y\",\n                marker: {\n                    color: \"black\",\n                },\n            },\n        },\n        separate: {\n            RSI0: {\n                data: [],\n                name: \"RSI(14)\",\n                marker: {\n                    color: \"blue\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y2\",\n            },\n            line1: {\n                customLine: 60,\n                data: [],\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y2\",\n                line: {\n                    dash: \"dashdot\",\n                    width: 2,\n                    color: \"green\",\n                },\n            },\n            line2: {\n                customLine: 40,\n                data: [],\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y2\",\n                line: {\n                    color: \"red\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n\n            stochd0: {\n                data: [],\n                name: \"stochd\",\n                marker: {\n                    color: \"rgb(153,42,173)\",\n                },\n                xaxis: \"x\",\n                yaxis: \"y3\",\n            },\n            stochk0: {\n                data: [],\n                name: \"stochk\",\n                xaxis: \"x\",\n                yaxis: \"y3\",\n                marker: {\n                    color: \"rgb(13,0,255)\",\n                },\n            },\n            line3: {\n                data: [],\n                customLine: 10,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y3\",\n                line: {\n                    color: \"blue\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line4: {\n                data: [],\n                customLine: 90,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y3\",\n                line: {\n                    color: \"blue\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line5: {\n                data: [],\n                customLine: 20,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y3\",\n                line: {\n                    color: \"blue\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n            line6: {\n                data: [],\n                customLine: 80,\n                mode: \"lines\",\n                xaxis: \"x\",\n                showlegend: false,\n                yaxis: \"y3\",\n                line: {\n                    color: \"blue\",\n                    dash: \"dash\",\n                    width: 2,\n                },\n            },\n        },\n        layout: {\n            yaxis: { ...initialLayout.yaxis, domain: [0.55, 1] },\n            yaxis2: {\n                ...initialLayout.yaxis,\n                domain: [0.25, 0.5],\n                range: [20, 80],\n                autorange: false,\n            },\n            yaxis3: {\n                ...initialLayout.yaxis,\n                domain: [0, 0.25],\n            },\n            xaxis: { ...initialLayout.xaxis },\n        },\n    },\n];\n\n// export const strategies = [\n//   { value: \"double-close\", name: \"Double close\", columns: [\"Double close\"] },\n// ];\n","import axios from \"axios\";\n\nimport { getAllStocks } from \"../services/api\";\nimport { dummy, months, rightMargin, times } from \"./defaults\";\n\nfunction arrayMax(array) {\n    return array.reduce(function (a, b) {\n        return Math.max(a, b);\n    });\n}\n\nfunction arrayMin(array) {\n    return array.reduce(function (a, b) {\n        return Math.min(a, b);\n    });\n}\n\nexport const getTimeObject = (time) => {\n    return times.find((t) => t.name === time);\n};\n\nexport const drawConfirmHighAndLow = (switchToggle, data, pointIndex) => {\n    return [\n        ...(switchToggle\n            ? [\n                  {\n                      x: data?.x,\n                      y: data?.ConfrimHigh.map((m, i) => {\n                          if (!m) return null;\n                          else return data.high[i];\n                      }),\n                      showlegend: false,\n                      name: data?.ConfrimHigh.map((m, i) => {\n                          if (!m) return null;\n                          else return \"Confirm High \" + data.high[pointIndex];\n                      }),\n                      mode: \"markers\",\n                      marker: {\n                          color: data?.ConfrimHigh.map((m, i) => {\n                              if (!m) return null;\n                              else {\n                                  if (data.is_closed_based[i]) return \"red\";\n                                  if (data.real_condition[i]) return \"black\";\n                                  if (data.insertion_condition[i])\n                                      return \"green\";\n                                  if (data.modified_condition[i])\n                                      return \"purple\";\n                                  else return null;\n                              }\n                          }),\n                          symbol: \"diamond\",\n                      },\n                      hoverinfo: \"skip\",\n                  },\n              ]\n            : []),\n        ...(switchToggle\n            ? [\n                  {\n                      x: data?.x,\n                      y: data.ConfrimLow.map((m, i) => {\n                          if (!m) return null;\n                          else return data.low[i];\n                      }),\n                      showlegend: false,\n                      name: \"Confirm Low \" + data.low[pointIndex],\n                      mode: \"markers\",\n                      marker: {\n                          color: data?.ConfrimLow.map((m, i) => {\n                              if (!m) return null;\n                              else {\n                                  if (data.is_closed_based[i]) return \"red\";\n                                  if (data.real_condition[i]) return \"black\";\n                                  if (data.insertion_condition[i])\n                                      return \"green\";\n                                  if (data.modified_condition[i])\n                                      return \"purple\";\n                                  else return null;\n                              }\n                          }),\n                          symbol: \"diamond\",\n                      },\n                      hoverinfo: \"skip\",\n                  },\n              ]\n            : []),\n    ];\n};\n\nexport const getMetaIndicatorColorName = (data, i, metaIndicator) => {\n    if (data?.[metaIndicator]?.[i]) {\n        if (data.is_closed_based[i]) return \"Closed Based\";\n        if (data.real_condition[i]) return \"Real Condition\";\n        if (data.insertion_condition[i]) return \"Insertion Condition\";\n        if (data.modified_condition[i]) return \"Modified Condition\";\n        return null;\n    }\n    return null;\n};\n\nexport const drawMergedChart = (selectedTemp, data, a, graphType) => {\n    let mergedCandles = [];\n    if (selectedTemp.id === 6) {\n        mergedCandles = [\n            {\n                ...dummy,\n                type: graphType,\n                name: \"Red price\",\n                high:\n                    data.elder_impulse_system &&\n                    data.elder_impulse_system.length\n                        ? data.realHigh &&\n                          data.realHigh.map((f_, iindex) => {\n                              if (!data.elder_impulse_system[iindex]) return f_;\n                              if (\n                                  data.elder_impulse_system[iindex].is_red === 1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : data.realHigh,\n                low: data.low,\n                open: data.open,\n                close: data.close,\n                decreasing: {\n                    fillcolor: \"red\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"red\" : \"black\",\n                        width: 1,\n                    },\n                },\n                increasing: {\n                    fillcolor: \"red\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"red\" : \"black\",\n                        width: 1,\n                    },\n                },\n                x: data.x,\n                ConfrimHigh: data.ConfrimHigh,\n                ConfrimLow: data.ConfrimLow,\n                patternData: data.patternData,\n            },\n            {\n                ...dummy,\n                type: graphType,\n                name: \"Green price\",\n                high:\n                    data.elder_impulse_system &&\n                    data.elder_impulse_system.length\n                        ? data.realHigh &&\n                          data.realHigh.map((f_, iindex) => {\n                              if (!data.elder_impulse_system[iindex]) return f_;\n                              if (\n                                  data.elder_impulse_system[iindex].is_green ===\n                                  1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : data.realHigh,\n                low: data.low,\n                open: data.open,\n                close: data.close,\n                decreasing: {\n                    fillcolor: \"green\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"green\" : \"black\",\n                        width: 1,\n                    },\n                },\n                increasing: {\n                    fillcolor: \"green\",\n                    line: {\n                        color: graphType === \"ohlc\" ? \"green\" : \"black\",\n                        width: 1,\n                    },\n                },\n                x: data.x,\n                ConfrimHigh: data.ConfrimHigh,\n                ConfrimLow: data.ConfrimLow,\n                patternData: data.patternData,\n            },\n        ];\n    }\n    return selectedTemp.merged && Object.keys(selectedTemp.merged).length\n        ? [\n              ...mergedCandles,\n              ...Object.keys(selectedTemp.merged).map((key) => {\n                  return {\n                      ...selectedTemp.merged[key],\n                      x: data?.x,\n                      y: selectedTemp.merged[key].data.map((m) => {\n                          if (!m) return null;\n                          else return m;\n                      }),\n                      name: `${selectedTemp.merged[key].name} ${selectedTemp.merged[key].data[a]}`,\n                      hoverinfo: \"x\",\n                  };\n              }),\n          ]\n        : [];\n};\n\nexport const drawSeparateChart = (selectedTemp, data, pointIndex) => {\n    return selectedTemp.separate && Object.keys(selectedTemp.separate).length\n        ? [\n              ...Object.keys(selectedTemp.separate).map((key) => {\n                  return {\n                      ...selectedTemp.separate[key],\n                      x: data?.x,\n                      y: selectedTemp.separate[key].data.map((m) => {\n                          if (!m) return null;\n                          else return m;\n                      }),\n                      ...(selectedTemp.separate[key].markerFn\n                          ? {\n                                marker: selectedTemp.separate[key].markerFn(\n                                    selectedTemp.separate[key].data,\n                                    data\n                                ),\n                            }\n                          : {}),\n                      name: `${selectedTemp.separate[key].name} ${selectedTemp.separate[key].data[pointIndex]}`,\n                      hoverinfo: \"x\",\n                  };\n              }),\n          ]\n        : [];\n};\n\nexport const drawStrategiesBar = (strategiesData, data) => {\n    let dateIndex =\n        strategiesData &&\n        data.patternData.findLastIndex((f) => {\n            return Object.values(f).includes(1);\n        });\n\n    return strategiesData && dateIndex >= 0\n        ? [\n              {\n                  type: \"rect\",\n                  text: \"ddd\",\n                  x0: dateIndex - 0.5,\n                  y0: 0,\n                  x1: dateIndex + 0.5,\n                  yref: \"paper\",\n                  y1: 1,\n                  line: {\n                      color: \"#ffff00\",\n                      width: 1.5,\n                  },\n                  hoverinfo: \"x\",\n                  fillcolor: \"#ffff00\",\n                  opacity: 0.6,\n              },\n          ]\n        : [];\n};\n\nexport const drawFirstDateLine = (toggleFirstDayLine, data) => {\n    return toggleFirstDayLine\n        ? data.x\n              .slice(0, data.x.length - rightMargin)\n              .map((dateStr, dateIndex) => {\n                  let date_ = new Date(dateStr);\n                  let date1 = date_.getDate();\n                  let date2 = new Date(data.x[dateIndex - 1]).getDate();\n                  let date3 = new Date(data.x[dateIndex - 2]).getDate();\n\n                  if (\n                      date1 === 1 ||\n                      (date1 === 2 && date2 !== 1) ||\n                      (date1 === 3 && date3 !== 1 && date2 !== 2)\n                  ) {\n                      return {\n                          type: \"line\",\n                          text: \"ddd\",\n                          x0: String(dateStr),\n                          y0: 0,\n                          x1: String(dateStr),\n                          yref: \"paper\",\n                          y1: 1,\n                          line: {\n                              color: \"grey\",\n                              width: 1.5,\n                              dash: \"dot\",\n                          },\n                          hoverinfo: \"x\",\n                      };\n                  }\n                  return null;\n              })\n        : [];\n};\n\nexport function getDataRequestService(\n    selectedCategory,\n    setLoader,\n    layout,\n    setSelectedTemp,\n    setGraphData,\n    setLayout,\n    graphType,\n    enableDualChart,\n    sidebarWidth,\n    dataBaseUrl,\n    selectedStrategy,\n    setStrategiesData,\n    strategiesData\n) {\n    return async (\n        stock,\n        time,\n        template,\n        pattern,\n        meta_trader_indicator,\n        data\n    ) => {\n        document.querySelector('[data-title=\"Autoscale\"]')?.click();\n        let strategiesLength = selectedStrategy?.length;\n\n        if (strategiesLength) {\n            let currStrategy = selectedStrategy[strategiesLength - 1];\n            setLoader(true);\n            let stra = await axios.get(\n                `stocks/get_strategy_watchlist?watch_list=${selectedCategory}&interval=${time.name}&strategy_name=${currStrategy}`\n            );\n            setLoader(false);\n\n            setStrategiesData(\n                [\n                    ...new Map(\n                        [\n                            ...strategiesData,\n                            { data: stra.data.data, name: currStrategy },\n                        ].map((item) => [item[\"name\"], item])\n                    ).values(),\n                ].filter((f) => selectedStrategy.includes(f.name))\n            );\n        } else {\n            setStrategiesData(\n                strategiesData.filter((f) => {\n                    return selectedStrategy.find((ii) => ii === f.name);\n                })\n            );\n        }\n\n        if (!selectedCategory || !stock?.name || stock?.selectedSource) {\n            return;\n        }\n        setLoader(true);\n\n        let url =\n            strategiesLength > 0\n                ? `stocks/strategy_data_against_symbol`\n                : `stocks${\n                      dataBaseUrl || \"\"\n                  }/?category=${selectedCategory}&symbol=${stock.name?.toLowerCase()}&source=${\n                      stock?.selectedSource ||\n                      (stock?.sources?.length && stock.sources[0])\n                  }&interval=${time.name}`;\n\n        if (strategiesLength <= 0) {\n            if (template && template?.id > 0) {\n                url = url + `&template=${template.id}`;\n            }\n            if (pattern?.length) {\n                url = url + `&pattern=${pattern}`;\n            }\n            if (meta_trader_indicator) {\n                url = url + `&meta_template=${meta_trader_indicator}`;\n            }\n        }\n\n        await getAllStocks(url, strategiesLength ? \"post\" : null, {\n            watch_list: selectedCategory,\n            interval: time.name,\n            symbol: stock.name?.toLowerCase(),\n            strategies: selectedStrategy,\n            source:\n                stock?.selectedSource ||\n                (stock?.sources?.length && stock.sources[0]),\n        })\n            .then((res) => {\n                setLoader(false);\n                let pattern_name_list = res?.data?.patterns_list;\n                let responseData = [...res?.data?.data];\n\n                let high = [];\n                let low = [];\n                let open = [];\n                let close = [];\n                let x = [];\n                let patternData = [];\n                let patternTrigger = [];\n\n                let elder_impulse_system = [];\n                let ConfrimHigh = [];\n                let ConfrimLow = [];\n                let real_condition = [];\n                let is_closed_based = [];\n                let insertion_condition = [];\n                let modified_condition = [];\n\n                let tempMerged = template && template.merged;\n                let resMerged = tempMerged;\n\n                Object.keys(tempMerged).length &&\n                    Object.keys(tempMerged).forEach((key) => {\n                        resMerged[key].data = [];\n                    });\n\n                let tempSeparate = template && template.separate;\n                let resSeparate = tempSeparate;\n\n                Object.keys(tempSeparate).length &&\n                    Object.keys(tempSeparate).forEach((key) => {\n                        resSeparate[key].data = [];\n                    });\n\n                responseData?.forEach((_m, ith) => {\n                    let m = _m;\n                    high.push(m.high);\n                    low.push(m.low);\n                    open.push(m.open);\n                    close.push(m.close);\n                    x.push(new Date(m.date).toUTCString());\n\n                    if (meta_trader_indicator && m[\"meta-indicators\"]) {\n                        ConfrimHigh.push(m[\"meta-indicators\"][\"Confrim High\"]);\n                        ConfrimLow.push(m[\"meta-indicators\"][\"Confrim Low\"]);\n                        insertion_condition.push(m[\"insertion_condition\"]);\n                        is_closed_based.push(m[\"is_closed_based\"]);\n                        real_condition.push(m[\"real_condition\"]);\n                        modified_condition.push(m[\"modified_condition\"]);\n                    }\n\n                    if (\n                        (m[pattern]?.pattern_end !== undefined ||\n                            m[pattern]?.trigger_value !== undefined) &&\n                        m[pattern]?.trigger !== undefined &&\n                        pattern !== \"All High/Low Patterns\"\n                    ) {\n                        let patternObj = {\n                            trigger: m[pattern]?.trigger,\n                            trigger_value: m[pattern]?.trigger_value,\n                            trigger_value_max: m[pattern]?.trigger_value_max,\n                            trigger_value_min: m[pattern]?.trigger_value_min,\n                        };\n                        if (m[pattern]?.trigger_failure) {\n                            patternObj = {\n                                ...patternObj,\n                                trigger_failure: m[pattern]?.trigger_failure,\n                                trigger_failure_value:\n                                    m[pattern]?.trigger_failure_value,\n                            };\n                        }\n                        if (\n                            pattern === \"All Failure Patterns\" ||\n                            isT3Pattern(pattern)\n                        ) {\n                            patternData.push(m[pattern]);\n                        } else {\n                            patternData.push(m[pattern]?.pattern_end);\n                        }\n                        patternTrigger.push(patternObj);\n                    } else if (m[pattern] !== undefined) {\n                        patternData.push(m[pattern]);\n                    }\n\n                    if (selectedStrategy.length) {\n                        let arrowPattern = {};\n                        let crossPattern = {};\n                        pattern_name_list.forEach((straIns) => {\n                            if (\n                                (m[straIns]?.pattern_end !== undefined ||\n                                    m[straIns]?.trigger_value !== undefined) &&\n                                m[straIns]?.trigger !== undefined\n                            ) {\n                                crossPattern[straIns] = {\n                                    trigger: m[straIns]?.trigger,\n                                    trigger_value: m[straIns]?.trigger_value,\n                                    trigger_value_max:\n                                        m[straIns]?.trigger_value_max,\n                                    trigger_value_min:\n                                        m[straIns]?.trigger_value_min,\n                                };\n                                arrowPattern[straIns] = m[straIns]?.pattern_end;\n                            }\n                        });\n                        patternData.push({\n                            ...arrowPattern,\n                            // ...(addPreviousStrategy ? data.patternData[ith] : []),\n                        });\n                        patternTrigger.push({\n                            ...crossPattern,\n                            // ...(addPreviousStrategy ? data.patternTrigger[ith] : []),\n                        });\n                    }\n\n                    if (template) {\n                        tempMerged &&\n                            Object.keys(tempMerged).length &&\n                            Object.keys(tempMerged).forEach((key) => {\n                                resMerged[key].data = [\n                                    ...resMerged[key].data,\n                                    m.indicators[key],\n                                ];\n                            });\n\n                        tempSeparate &&\n                            Object.keys(tempSeparate).length &&\n                            Object.keys(tempSeparate).forEach((key) => {\n                                resSeparate[key].data = [\n                                    ...resSeparate[key].data,\n                                    resSeparate[key].customLine\n                                        ? resSeparate[key].customLine\n                                        : m.indicators[key],\n                                ];\n                            });\n\n                        if (template.id === 6) {\n                            elder_impulse_system.push(\n                                m.indicators?.elder_impulse_system\n                            );\n                        }\n                    }\n                });\n                let tempLayout = { ...layout, ...template.layout };\n                for (let i = 0; i < rightMargin; i++) {\n                    high.push(null);\n                    low.push(null);\n                    open.push(null);\n                    close.push(null);\n                    x.push(\n                        new Date(\n                            Date.now(x[x.length - 1]) + (i + 1) * time.ms\n                        ).toUTCString()\n                    );\n                    if (template) {\n                        tempMerged &&\n                            Object.keys(tempMerged).forEach((key) => {\n                                resMerged[key].data = [\n                                    ...resMerged[key].data,\n                                    null,\n                                ];\n                            });\n\n                        tempSeparate &&\n                            Object.keys(tempSeparate).forEach((key) => {\n                                resSeparate[key].data = [\n                                    ...resSeparate[key].data,\n                                    null,\n                                ];\n                            });\n                    }\n                }\n\n                if (template) {\n                    setSelectedTemp({\n                        ...template,\n                        merged: resMerged,\n                        separate: resSeparate,\n                    });\n                }\n\n                setGraphData({\n                    ...dummy,\n                    realHigh: high,\n                    high: elder_impulse_system.length\n                        ? high.map((f_, iindex) => {\n                              if (!elder_impulse_system[iindex]) return f_;\n                              if (\n                                  elder_impulse_system[iindex].is_red !== 1 ||\n                                  elder_impulse_system[iindex].is_green !== 1\n                              )\n                                  return f_;\n                              return null;\n                          })\n                        : high,\n                    low,\n                    open,\n                    close,\n                    x,\n                    hovertext: high,\n                    increasing:\n                        template.id === 6\n                            ? {\n                                  fillcolor: \"blue\",\n                                  line: {\n                                      color:\n                                          graphType === \"ohlc\"\n                                              ? \"blue\"\n                                              : \"black\",\n                                      width: 1,\n                                  },\n                              }\n                            : dummy.increasing,\n                    decreasing:\n                        template.id === 6\n                            ? {\n                                  fillcolor: \"blue\",\n                                  line: {\n                                      color:\n                                          graphType === \"ohlc\"\n                                              ? \"blue\"\n                                              : \"black\",\n                                      width: 1,\n                                  },\n                              }\n                            : dummy.decreasing,\n                    ConfrimHigh,\n                    ConfrimLow,\n                    patternData,\n                    patternTrigger,\n                    pattern_name_list:\n                        selectedStrategy.length > 0\n                            ? [\n                                  ...(data?.pattern_name_list || []),\n                                  ...(pattern_name_list || []),\n                              ]\n                            : null,\n                    strategiesData: selectedStrategy.length ? true : false,\n                    elder_impulse_system,\n                    max: arrayMax(high),\n                    min: arrayMin(low.filter((f) => f !== 0 && f !== null)),\n                    insertion_condition,\n                    is_closed_based,\n                    real_condition,\n                    modified_condition,\n                });\n                setLayout({\n                    ...tempLayout,\n                    width: enableDualChart\n                        ? (window.innerWidth - sidebarWidth) / 2\n                        : window.innerWidth - sidebarWidth,\n                    dualChartSet: enableDualChart,\n                    height: window.innerHeight - 80,\n                    xaxis: {\n                        ...layout.xaxis,\n                        rangeslider: {\n                            visible: false,\n                        },\n                        autorange: false,\n                        range: [x.length - 280, x.length - 1],\n                        tickvals: [\n                            ...x.filter((f, i) => {\n                                return i % 15 === 0;\n                            }),\n                        ],\n                        ticktext: [\n                            ...x\n                                .filter((f, i) => {\n                                    return i % 15 === 0;\n                                })\n                                .map((m) => {\n                                    let d = new Date(m);\n                                    return (\n                                        months[d.getMonth()] +\n                                        \" \" +\n                                        d.getUTCFullYear()\n                                    );\n                                }),\n                        ],\n                    },\n                    shapes: [\n                        ...high.map((shp, i) => {\n                            if (patternData[i]) {\n                                let lowP = Math.min(\n                                    ...[low[i], high[i], open[i], close[i]]\n                                );\n                                let highP = Math.max(\n                                    ...[low[i], high[i], open[i], close[i]]\n                                );\n                                let x0 = String(\n                                    new Date(x[i - 1]).toUTCString()\n                                );\n                                let x1 = String(\n                                    new Date(x[i + 1]).toUTCString()\n                                );\n                                return {\n                                    type: \"rect\",\n                                    xref: \"x\",\n                                    yref: \"y\",\n                                    x0: x0,\n                                    y0: lowP,\n                                    x1,\n                                    width: 1,\n                                    y1: highP,\n                                    fillcolor: \"yellow\",\n                                    opacity: 0.6,\n                                    rightMargin: 3,\n                                    line: {\n                                        width: 2,\n                                        color:\n                                            open[i] < close[i]\n                                                ? \"green\"\n                                                : \"red\",\n                                        opacity: 1,\n                                    },\n                                    hoverinfo: \"x\",\n                                };\n                            }\n                            return null;\n                        }),\n                    ],\n                });\n            })\n            .catch((err) => {\n                console.log(\"err\", err);\n                setLoader(false);\n                setGraphData(null);\n            });\n    };\n}\n\nexport const OHLC_ICON = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 28 28\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"currentColor\"\n    >\n        <path d=\"M17 11v6h3v-6h-3zm-.5-1h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5z\"></path>\n        <path d=\"M18 7h1v3.5h-1zm0 10.5h1V21h-1z\"></path>\n        <path d=\"M9 8v12h3V8H9zm-.5-1h4a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5z\"></path>\n        <path d=\"M10 4h1v3.5h-1zm0 16.5h1V24h-1z\"></path>\n    </svg>\n);\n\nexport const BAR_ICON = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 28 28\"\n        width=\"24\"\n        height=\"24\"\n    >\n        <g fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"square\">\n            <path d=\"M10.5 7.5v15M7.5 20.5H10M13.5 11.5H11M19.5 6.5v15M16.5 9.5H19M22.5 16.5H20\"></path>\n        </g>\n    </svg>\n);\n\nexport const getTimeforSecondaryGraph = (time) => {\n    switch (time.name) {\n        case \"1d\":\n        case \"2d\":\n        case \"3d\":\n            return { name: \"1wk\", desc: \"1 Week\", ms: 604800000 };\n        case \"1wk\":\n        case \"2wk\":\n            return { name: \"1mo\", desc: \"1 Month\", ms: 2629746000 * 1 };\n        default:\n            return { name: \"1d\", desc: \"1 Day\", ms: 86400000 * 1 };\n    }\n};\n\nexport const getOccuredReversalPatterns = (\n    patternData,\n    pointIndex,\n    pattern,\n    data\n) => {\n    let keys =\n        patternData &&\n        patternData.length &&\n        Object.keys(patternData[0]).filter((f) => {\n            return ![\n                \"trigger\",\n                \"trigger_failure\",\n                \"trigger_failure_value\",\n                \"trigger_value\",\n                \"is_combo_pattern\",\n                \"candle_type\",\n            ].find((t) => t === f);\n        });\n    let occured = \"\";\n    patternData.length &&\n        Array.isArray(keys) &&\n        keys.forEach((key, i) => {\n            if (\n                isT3Pattern(pattern) &&\n                patternData?.[pointIndex]?.[\"pattern_end\"] &&\n                patternData?.[pointIndex]?.[key] &&\n                key !== \"pattern_end\"\n            ) {\n                if (occured.length > 0) occured += \", \";\n                occured += key;\n            } else if (\n                isT3FailurePattern(pattern) &&\n                patternData?.[pointIndex]?.[\"failure_trigger\"]\n            ) {\n                if (occured.length === 0) occured += pattern;\n            } else if (\n                !isT3Pattern(pattern) &&\n                !isT3FailurePattern(pattern) &&\n                patternData?.[pointIndex]?.[key]\n            ) {\n                if (occured.length > 0) occured += \", \";\n                occured += key;\n            }\n        });\n\n    console.log(\"occured\", occured)\n    return isT3FailurePattern(pattern) && occured\n        ? pattern\n        : ((isT3Pattern(pattern) || isT3FailurePattern(pattern)) && occured\n              ? `${pattern} - `\n              : \"\") +\n              occured +\n              (pattern === \"All Failure Patterns\" && occured\n                  ? data.close[pointIndex] > data.open[pointIndex]\n                      ? \" - Bullish\"\n                      : \" - Bearish\"\n                  : \"\");\n};\n\nexport const isT3Pattern = (pattern) => {\n    const T3Patterns = [\n        \"T3 Down\",\n        \"T3 Up\",\n        \"T3 Sell\",\n        \"T3 Buy\",\n        \"T3 Turn Down\",\n        \"T3 Turn Up\",\n        \"T3 Rev Up\",\n        \"T3 Rev Down\",\n        \"T3 Bull Now\",\n        \"T3 Bear Now\",\n        \"T3 Up Down\",\n        \"T3 Down Up\",\n    ];\n\n    return T3Patterns.includes(pattern);\n};\n\nexport const isT3FailurePattern = (pattern) => {\n    let T3FailuesPatterns = [\n        \"T3 Down Failure\",\n        \"T3 Up Failure\",\n        \"T3 Sell Failure\",\n        \"T3 Buy Failure\",\n        \"T3 Turn Dowm Failure\",\n        \"T3 Turn Up Failure\",\n        \"T3 Rev Down Failure\",\n        \"T3 Rev Up Failure\",\n        \"T3 Bull Now Failure\",\n        \"T3 Bear Now Failure\",\n        \"T3 Up Down Failure\",\n        \"T3 Down Up Failure\",\n        \"Three Inside Up Down Failure\",\n        \"Three Outside Up/Down Failure\",\n        \"Three Inside Down Modified Failure\",\n        \"Three Inside Up Modified Failure\",\n        \"Island Top Failure\",\n        \"Island Bottom Failure\",\n        \"Modified Evening Star Failure\",\n        \"Modified Morning Star Failure\",\n        \"Evening Turn Failure\",\n        \"Morning Turn Failure\",\n        \"Bearish Key Reversal Day Failure\",\n        \"Bullish Key Reversal Day Failure\",\n        \"One White Soldier Failure\",\n        \"One White Soldier Modified Failure\",\n        \"One Black Crow Failure\",\n        \"One Black Crow Modified Failure\",\n        \"Engulfish Shadow bearish Failure\",\n        \"Engulfish Shadow Bullish Failure\",\n        \"Tower Top Failure\",\n        \"Tower Bottom Failure\",\n        \"ENGULFING Pattern Failure\",\n        \"DARKCLOUDCOVER Failure\",\n        \"EVENINGDOJISTAR Failure\",\n        \"EVENINGSTAR\",\n        \"MORNINGDOJISTAR Failure\",\n        \"MORNINGSTAR Failure\",\n        \"RISEFALL3METHODS Failure\",\n        \"Three Black Crows Failure\",\n        \"Abandoned Baby Failure\",\n        \"Tristar Pattern Failure\",\n        \"Windows/Gap Failure\",\n        \"Rising/Falling Three Methods Failure\",\n        \"Bullish Double Close Outside Bar Failure\",\n        \"Bearish Double Close Outside Bar Failure\",\n        \"Popgun Plus Failure\",\n        \"Popgun Minus Failure\",\n        \"Multiple Inside Bars Plus Failure\",\n        \"Multiple Inside Bars Minus Failure\",\n        \"Multiple Inside Bodies Plus Failure\",\n        \"Multiple Inside Bodies Minus Failure\",\n        \"Tower Top Modified 2 Failure\",\n        \"Tower Bottom Modified 2 Failure\",\n        \"Tower Top Modified Failure\",\n        \"Tower Bottom Modified Failure\",\n    ];\n    return T3FailuesPatterns.includes(pattern);\n};\n","import { isT3FailurePattern, isT3Pattern } from \"./utils\";\n\nexport const getPatternNameList = (patterns) => {\n    let patternArr = patterns && Object.keys(patterns);\n    return (\n        Array.isArray(patternArr) &&\n        patternArr.length &&\n        patternArr?.filter((f) => {\n            return ![\n                \"trigger\",\n                \"trigger_failure\",\n                \"trigger_failure_value\",\n                \"trigger_value\",\n                \"is_combo_pattern\",\n            ].find((t) => t === f);\n        })\n    );\n};\n\nexport const drawPatternData = (data, selectedPattern, strategiesData) => {\n    if (selectedPattern === \"All Failure Patterns\") {\n        return [];\n    }\n    let patterns = data.patternData;\n    let drawX = null;\n    if (\n        (data.patternData &&\n            data.patternData[0] &&\n            data.patternData[0].is_combo_pattern) ||\n        selectedPattern === \"All Reversal Patterns\" ||\n        selectedPattern === \"S Combo Pattern\" ||\n        selectedPattern === \"All T3 Patterns\" ||\n        isT3Pattern(selectedPattern) ||\n        selectedPattern === \"All High/Low Patterns\" ||\n        strategiesData\n    ) {\n        patterns = data.patternData && data.patternData[0];\n        let keys = data?.pattern_name_list || getPatternNameList(patterns);\n        patterns = data.patternData.map((m) => {\n            let ans = 0;\n            if (Array.isArray(keys)) {\n                for (let key of keys) {\n                    if (m[key]) {\n                        ans = isT3Pattern(selectedPattern)\n                            ? m?.[\"pattern_end\"]\n                            : 1;\n                        break;\n                    }\n                }\n            }\n            return ans;\n        });\n    }\n    if (isT3FailurePattern(selectedPattern)) {\n        drawX = data.patternData;\n        patterns = data.patternData.map((m) => {\n            let ans = 0;\n            ans = m?.[\"failure_trigger\"];\n            return ans;\n        });\n\n        drawX = data.patternData.map((m) => {\n            let ans = 0;\n            ans = m?.[\"pattern_end\"];\n            return ans;\n        });\n    }\n    return patterns?.length\n        ? [\n              ...(drawX && drawX.length\n                  ? [\n                        {\n                            // to draw x on T3 Failures\n                            x: data?.x,\n                            y: drawX?.map((m, i) => {\n                                let perc10 =\n                                    ((data.max - data.min) / 100) * 2.5;\n                                if (m) {\n                                    if (data.close[i] > data.open[i]) {\n                                        return Number(data.low[i]) - perc10;\n                                    } else {\n                                        return Number(data.high[i]) + perc10;\n                                    }\n                                }\n                                return null;\n                            }),\n                            showlegend: false,\n                            mode: \"markers\",\n                            marker: {\n                                color: drawX?.map((m, i) => {\n                                    if (m) {\n                                        return \"red\";\n                                    }\n                                    return null;\n                                }),\n                                symbol: drawX.map((m, i) => {\n                                    if (m) {\n                                        return \"x\";\n                                    }\n                                    return null;\n                                }),\n                                size: 7,\n                            },\n                            hoverinfo: \"skip\",\n                        },\n                    ]\n                  : []),\n              {\n                  //to normal pattern draw including T3 Failure arrows\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      let perc10 = ((data.max - data.min) / 100) * 2.5;\n                      if (m) {\n                          if (data.close[i] > data.open[i]) {\n                              return Number(data.low[i]) - perc10;\n                          } else {\n                              return Number(data.high[i]) + perc10;\n                          }\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m) {\n                              if (selectedPattern === \"All High/Low Patterns\") {\n                                  return \"red\";\n                              }\n                              if (data.close[i] < data.open[i]) {\n                                  return \"red\";\n                              }\n                              return \"green\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m) {\n                              if (selectedPattern === \"All High/Low Patterns\") {\n                                  return \"x\";\n                              }\n                              if (data.close[i] < data.open[i]) {\n                                  return \"triangle-down\";\n                              }\n                              return \"triangle-up\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n          ]\n        : [];\n};\n\nexport const drawPatternTriggers = (data, strategiesData) => {\n    let patterns = data.patternTrigger;\n\n    if (strategiesData) {\n        let keys = data?.pattern_name_list || getPatternNameList(patterns);\n        patterns = data.patternTrigger.map((m) => {\n            let ans = null;\n            if (Array.isArray(keys)) {\n                for (let key of keys) {\n                    if (m[key]?.trigger) {\n                        ans = m[key];\n                        break;\n                    }\n                }\n            }\n            return ans;\n        });\n    }\n\n    return patterns?.length\n        ? [\n              {\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      if (m?.trigger) {\n                          return Number(m.trigger_value);\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m?.trigger) {\n                              return \"red\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m?.trigger) {\n                              return \"x\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n              {\n                  x: data?.x,\n                  y: patterns?.map((m, i) => {\n                      let perc10 = ((data.max - data.min) / 100) * 2.5;\n                      if (m?.trigger_failure) {\n                          if (data.close[i] > data.open[i]) {\n                              return m?.trigger_failure_value - perc10;\n                          } else {\n                              return m.trigger_failure_value + perc10;\n                          }\n                      }\n                      return null;\n                  }),\n                  showlegend: false,\n                  mode: \"markers\",\n                  marker: {\n                      color: patterns?.map((m, i) => {\n                          if (m?.trigger_failure) {\n                              if (data.close[i] < data.open[i]) {\n                                  return \"red\";\n                              }\n                              return \"green\";\n                          }\n                          return null;\n                      }),\n                      symbol: patterns.map((m, i) => {\n                          if (m?.trigger_failure) {\n                              if (data.close[i] < data.open[i]) {\n                                  return \"triangle-down\";\n                              }\n                              return \"triangle-up\";\n                          }\n                          return null;\n                      }),\n                      size: 7,\n                  },\n                  hoverinfo: \"skip\",\n              },\n          ]\n        : [];\n};\n","import * as Plotly from \"plotly.js\";\nimport React, { useEffect, useState } from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nimport { drawFirstDateLine, drawStrategiesBar } from \"../Utils/utils\";\n\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({\n  data,\n  layout,\n  templates,\n  loader,\n  separateGraphs,\n  onHover,\n  onUnhover,\n  onClick,\n  toggleFirstDayLine,\n  onDoubleClick,\n  id,\n  setLayout,\n  dualChartWidth,\n  sidebarWidth,\n  selectedStrategy,\n}) => {\n  document\n    .querySelector('[data-title=\"Autoscale\"]')\n    ?.addEventListener(\"onclick\", function (event) {});\n  let [bottomTemplate, setBottomTemplates] = useState([]);\n  useEffect(() => {\n    let temp = [];\n    separateGraphs?.length &&\n      separateGraphs.forEach((spG) => {\n        temp.push(spG);\n        spG?.templates?.length &&\n          spG.templates?.forEach((t) => {\n            temp.push(t);\n          });\n      });\n    setBottomTemplates(temp);\n  }, [separateGraphs]);\n\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        id={id}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        onHover={onHover}\n        onUnhover={onUnhover}\n        data={[data, ...(templates || []), ...bottomTemplate]}\n        layout={{\n          ...layout,\n          shapes: [\n            ...drawFirstDateLine(toggleFirstDayLine, data),\n            ...(selectedStrategy.length < 2\n              ? drawStrategiesBar(data.strategiesData, data)\n              : []),\n          ],\n        }}\n        config={{\n          scrollZoom: true,\n        }}\n        useResizeHandler={true}\n        onRelayout={(e) => {\n          if (e[\"xaxis.autorange\"]) {\n            setLayout({\n              ...layout,\n              xaxis: {\n                ...layout.xaxis,\n                autorange: false,\n                range: [data.x.length - 280, data.x.length - 1],\n              },\n              width: window.innerWidth - dualChartWidth - sidebarWidth,\n              shapes: [\n                ...drawFirstDateLine(toggleFirstDayLine, data),\n                ...drawStrategiesBar(data.strategiesData, data),\n              ],\n            });\n          }\n        }}\n      />\n    );\n};\n","import React from \"react\";\n\nconst InfoLines = ({\n  selectedStock,\n  ohlc: { high, low, open, close, ConfrimLow, ConfrimHigh },\n  selectedPattern,\n  selectedTime,\n  patternTrigger,\n}) => {\n  return (\n    <div style={{ marginLeft: \"10px\", fontSize: \"12px\" }}>\n      {selectedStock && (\n        <div>\n          {selectedStock.name} - {selectedStock.description || \"description\"}\n          {\" - \"}\n          {selectedStock.sources.length &&\n            String(selectedStock.sources[0]).toUpperCase()}\n          {\" - \"}\n          {selectedTime.desc}\n        </div>\n      )}\n      <div>\n        Open: {open} High: {high} Low: {low} Close: {close}\n      </div>\n      {selectedPattern || patternTrigger ? (\n        <div>Pattern: {selectedPattern}</div>\n      ) : (\n        <></>\n      )}\n      {ConfrimLow ? (\n        <div>\n          Confirm Low: {ConfrimLow} - {low}\n        </div>\n      ) : (\n        <></>\n      )}\n      {ConfrimHigh ? (\n        <div>\n          Confirm High: {ConfrimHigh} - {high}\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default InfoLines;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { dummy } from \"../Utils/defaults\";\nimport { drawPatternData, drawPatternTriggers } from \"../Utils/patternUtils\";\nimport {\n    drawConfirmHighAndLow,\n    drawMergedChart,\n    drawSeparateChart,\n    getDataRequestService,\n    getMetaIndicatorColorName,\n    getOccuredReversalPatterns,\n    isT3FailurePattern,\n    isT3Pattern,\n} from \"../Utils/utils\";\nimport { Graph } from \"./Graph\";\nimport InfoLines from \"./InfoLines\";\n\nexport function DefaultChart({\n    onHover,\n    onUnhover,\n    onClick,\n    pointIndex,\n    graphType,\n    style,\n    layout,\n    toggleFirstDayLine,\n    switchToggle,\n    selectedTemp,\n    selectedPattern,\n    type,\n    onDoubleClick,\n    selectedStock,\n    selectedTime,\n    selectedCategory,\n    id,\n    setLayout,\n    selectedStrategy,\n    enableDualChart,\n    sidebarWidth,\n    dualChartWidth,\n    dataBaseUrl,\n    setStrategiesData,\n    strategiesData,\n}) {\n    const [data, setGraphData] = useState({ ...dummy });\n    const [currentSelectedTemp, setCurrentSelectedTemp] =\n        useState(selectedTemp);\n\n    useEffect(() => {\n        setCurrentSelectedTemp(selectedTemp);\n    }, [selectedTemp]);\n\n    const [loader, setLoader] = useState(false);\n    const prevCountRef = useRef();\n\n    const getDataRequest = getDataRequestService(\n        selectedCategory,\n        setLoader,\n        layout,\n        setCurrentSelectedTemp,\n        setGraphData,\n        setLayout,\n        graphType,\n        enableDualChart,\n        sidebarWidth,\n        dataBaseUrl,\n        selectedStrategy,\n        setStrategiesData,\n        strategiesData\n    );\n\n    useEffect(() => {\n        let addPreviousStrategy = true;\n        if (selectedStock !== prevCountRef.current) {\n            addPreviousStrategy = false;\n        }\n        prevCountRef.current = selectedStock;\n\n        selectedTime &&\n            getDataRequest(\n                selectedStock,\n                selectedTime,\n                currentSelectedTemp,\n                selectedPattern,\n                switchToggle,\n                data,\n                addPreviousStrategy\n            );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        selectedStock,\n        selectedTime,\n        selectedCategory,\n        selectedPattern,\n        switchToggle,\n        currentSelectedTemp.id,\n        graphType,\n        enableDualChart,\n        selectedStrategy,\n    ]);\n\n    return data && data?.x?.length ? (\n        <>\n            <InfoLines\n                selectedStock={selectedStock}\n                ohlc={{\n                    high: data.high[pointIndex],\n                    low: data.low[pointIndex],\n                    open: data.open[pointIndex],\n                    close: data.close[pointIndex],\n                    ConfrimHigh: getMetaIndicatorColorName(\n                        data,\n                        pointIndex,\n                        \"ConfrimHigh\"\n                    ),\n                    ConfrimLow: getMetaIndicatorColorName(\n                        data,\n                        pointIndex,\n                        \"ConfrimLow\"\n                    ),\n                }}\n                selectedPattern={\n                    (data.patternData[pointIndex]\n                        ? data.patternData[pointIndex].is_combo_pattern ||\n                          selectedPattern === \"All Reversal Patterns\" ||\n                          selectedPattern === \"All Failure Patterns\" ||\n                          selectedPattern === \"S Combo Pattern\" ||\n                          selectedPattern === \"All T3 Patterns\" ||\n                          isT3Pattern(selectedPattern) ||\n                          isT3FailurePattern(selectedPattern) ||\n                          selectedPattern === \"All High/Low Patterns\" ||\n                          data.strategiesData\n                            ? getOccuredReversalPatterns(\n                                  data.patternData,\n                                  pointIndex,\n                                  selectedPattern,\n                                  data\n                              )\n                            : selectedPattern\n                        : undefined) ||\n                    (data?.patternTrigger[pointIndex]?.trigger_failure\n                        ? selectedPattern\n                        : undefined)\n                }\n                patternTrigger={\n                    data?.patternTrigger[pointIndex]?.trigger_failure\n                }\n                selectedTime={selectedTime}\n                pointIndex={pointIndex}\n                data={data}\n            />\n            <Graph\n                id={id}\n                onHover={onHover}\n                onUnhover={onUnhover}\n                onClick={onClick}\n                onDoubleClick={() => onDoubleClick(type)}\n                style={{ ...style, border: \"1px solid red\" }}\n                data={{ ...data, type: graphType }}\n                layout={layout}\n                toggleFirstDayLine={toggleFirstDayLine}\n                templates={[\n                    ...drawMergedChart(\n                        currentSelectedTemp,\n                        data,\n                        pointIndex,\n                        graphType\n                    ), //templates T1 , T2 , T3\n                    ...drawConfirmHighAndLow(switchToggle, data, pointIndex), //0 1 2 3\n                    ...(drawPatternData(\n                        data,\n                        selectedPattern,\n                        data.strategiesData\n                    ) || []),\n                    ...(drawPatternTriggers(data, data.strategiesData) || []),\n                ]}\n                separateGraphs={[\n                    ...drawSeparateChart(\n                        currentSelectedTemp,\n                        data,\n                        pointIndex,\n                        graphType\n                    ),\n                ]}\n                loader={loader}\n                setLayout={setLayout}\n                dualChartWidth={dualChartWidth}\n                sidebarWidth={sidebarWidth}\n                selectedStrategy={selectedStrategy}\n            />\n        </>\n    ) : (\n        <></>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { getTimeforSecondaryGraph } from \"../Utils/utils\";\nimport { DefaultChart } from \"./DefaultChart\";\n\nconst style = { width: \"100%\", height: \"100%\" };\n\nconst GraphRenderer = ({\n  layout,\n  enableDualChart,\n  graphType,\n  selectedTemp,\n  separateGraphs,\n  toggleFirstDayLine,\n  switchToggle,\n  selectedPattern,\n  setLayout,\n  selectedStock,\n  selectedTime,\n  selectedCategory,\n  selectedStrategy,\n  sidebarWidth,\n  secondaryLayout,\n  setSecondaryLayout,\n  dataBaseUrl,\n  setStrategiesData,\n  strategiesData,\n}) => {\n  const [secondaryChartTime, setSecondayChartTime] = useState(null);\n\n  useEffect(() => {\n    let t = getTimeforSecondaryGraph(selectedTime);\n    setSecondayChartTime(enableDualChart ? t : selectedTime);\n  }, [selectedTime, enableDualChart]);\n\n  const [cursor, setCursor] = useState(\"crosshair\");\n  const [currentSelected, setCurrentSelected] = useState(\"\");\n  const [pointIndex, setPointIndex] = useState(1);\n\n  const onHover = ({ points: [point] }) => {\n    setPointIndex(point.pointIndex);\n    setCursor(\"crosshair\");\n  };\n  const onUnhover = () => {\n    setCursor(\"crosshair\");\n  };\n  const onClick = () => {\n    setCursor(\"grabbing\");\n  };\n\n  const dualChartRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [dualChartWidth, setDualChartWidth] = useState(0);\n\n  const stopResizing = React.useCallback(() => {\n    setIsResizing(false);\n  }, []);\n  const startResizing = React.useCallback((mouseDownEvent) => {\n    setIsResizing(true);\n  }, []);\n\n  const resize = React.useCallback(\n    (mouseMoveEvent) => {\n      if (isResizing) {\n        document.querySelector('[data-title=\"Autoscale\"]')?.click();\n        let w =\n          window.innerWidth -\n          (dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX) -\n          10;\n\n        setLayout({\n          ...layout,\n          width: w,\n          height: window.innerHeight - 80,\n        });\n        setSecondaryLayout({\n          ...secondaryLayout,\n          width:\n            dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX -\n            10,\n          height: window.innerHeight - 80,\n        });\n        setDualChartWidth(\n          dualChartRef.current.getBoundingClientRect().right -\n            mouseMoveEvent.clientX\n        );\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isResizing, sidebarWidth]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", resize);\n    window.addEventListener(\"mouseup\", stopResizing);\n    return () => {\n      window.removeEventListener(\"mousemove\", resize);\n      window.removeEventListener(\"mouseup\", stopResizing);\n    };\n  }, [resize, stopResizing]);\n\n  return layout ? (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          height: \"100vh\",\n          overflowY: \"hidden\",\n          overflowX: \"hidden\",\n        }}\n      >\n        <div\n          id=\"default-chart\"\n          style={{\n            cursor,\n            marginTop: \"52px\",\n            border:\n              currentSelected === \"default\" ? \"4px solid #438695\" : \"none\",\n          }}\n        >\n          <DefaultChart\n            type=\"default\"\n            onHover={onHover}\n            onDoubleClick={(e) => setCurrentSelected(e)}\n            onUnhover={onUnhover}\n            onClick={onClick}\n            pointIndex={pointIndex}\n            graphType={graphType}\n            style={style}\n            enableDualChart={enableDualChart}\n            selectedTemp={selectedTemp}\n            layout={layout}\n            toggleFirstDayLine={toggleFirstDayLine}\n            switchToggle={switchToggle}\n            selectedPattern={selectedPattern}\n            separateGraphs={separateGraphs}\n            selectedStock={selectedStock}\n            id={\"default\"}\n            selectedTime={secondaryChartTime}\n            selectedCategory={selectedCategory}\n            setLayout={setLayout}\n            selectedStrategy={selectedStrategy}\n            sidebarWidth={sidebarWidth}\n            dualChartWidth={dualChartWidth}\n            dataBaseUrl={dataBaseUrl}\n            setStrategiesData={setStrategiesData}\n            strategiesData={strategiesData}\n          />\n        </div>\n      </div>\n      {enableDualChart && (\n        <div\n          ref={dualChartRef}\n          className=\"app-dualchart\"\n          style={{\n            width: secondaryLayout.width + 10 + \"px\",\n            marginTop: \"52px\",\n          }}\n          onMouseDown={(e) => e.preventDefault()}\n        >\n          <div className=\"app-dualchart-resizer\" onMouseDown={startResizing} />\n          <div className=\"app-dualchart-content\">\n            <div\n              id=\"secondary-chart\"\n              style={{\n                cursor,\n                border:\n                  currentSelected === \"secondary\"\n                    ? \"4px solid #438695\"\n                    : \"none\",\n              }}\n            >\n              <DefaultChart\n                type=\"secondary\"\n                onHover={onHover}\n                onDoubleClick={(e) => setCurrentSelected(e)}\n                graphType={graphType}\n                style={style}\n                enableDualChart={enableDualChart}\n                selectedTemp={selectedTemp}\n                layout={secondaryLayout}\n                toggleFirstDayLine={toggleFirstDayLine}\n                switchToggle={switchToggle}\n                selectedPattern={selectedPattern}\n                onUnhover={onUnhover}\n                onClick={onClick}\n                pointIndex={pointIndex}\n                separateGraphs={separateGraphs}\n                selectedStock={selectedStock}\n                id={\"secondary\"}\n                selectedTime={selectedTime}\n                selectedCategory={selectedCategory}\n                setLayout={setSecondaryLayout}\n                selectedStrategy={selectedStrategy}\n                sidebarWidth={sidebarWidth}\n                dualChartWidth={dualChartWidth}\n                dataBaseUrl={dataBaseUrl}\n                setStrategiesData={setStrategiesData}\n                strategiesData={strategiesData}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default GraphRenderer;\n","import { Autocomplete, Paper, TextField } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst CustomPaper = (props) => {\n    return <Paper elevation={8} {...props} />;\n};\nconst AutocompleteWrapper = ({\n    options,\n    value,\n    label,\n    handleChange,\n    selectedStock,\n    getOptionLabel,\n    renderOption,\n    multiple,\n    renderInput,\n    limitTags,\n}) => {\n    const [openPatternDropdown, setOpenPatternDropdown] = useState(false);\n    let patternRef = useRef(null);\n\n    useEffect(() => {\n        setOpenPatternDropdown(false);\n    }, [selectedStock]);\n\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 38) {\n            setOpenPatternDropdown(false);\n        } else if (e.keyCode === 40) {\n            setOpenPatternDropdown(false);\n        }\n    };\n\n    return (\n        <div\n            ref={patternRef}\n            onMouseLeave={() => {\n                setOpenPatternDropdown(false);\n            }}\n        >\n            <Autocomplete\n                limitTags={limitTags}\n                onKeyPress={handleKeyDown}\n                selectOnFocus={false}\n                blurOnSelect={\"touch\"}\n                onChange={(_, newValue) => {\n                    handleChange(newValue);\n                }}\n                fullWidth\n                multiple={multiple ? true : false}\n                open={openPatternDropdown}\n                options={[...options]}\n                onBlur={() => {\n                    setOpenPatternDropdown(false);\n                }}\n                onMouseLeave={() => {\n                    patternRef.current.click();\n                }}\n                onKeyDown={() => {\n                    setOpenPatternDropdown(true);\n                }}\n                onClick={() => {\n                    setOpenPatternDropdown(true);\n                }}\n                value={value}\n                defaultValue={options.find((v) => v[0])}\n                PaperComponent={CustomPaper}\n                getOptionLabel={getOptionLabel && getOptionLabel}\n                renderOption={renderOption && renderOption}\n                renderInput={\n                    renderInput\n                        ? renderInput\n                        : (params) => (\n                              <TextField\n                                  {...params}\n                                  label={label}\n                                  variant=\"standard\"\n                                  onClick={() => {\n                                      setOpenPatternDropdown(\n                                          !openPatternDropdown\n                                      );\n                                  }}\n                              />\n                          )\n                }\n            />\n        </div>\n    );\n};\n\nexport default AutocompleteWrapper;\n","import MenuIcon from \"@mui/icons-material/Menu\";\nimport { FormControlLabel, IconButton, Switch } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport { getAllStocks } from \"../services/api\";\nimport { templates, times } from \"../Utils/defaults\";\nimport { BAR_ICON, OHLC_ICON } from \"../Utils/utils\";\nimport AutocompleteWrapper from \"./AutocompleteWrapper\";\n\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\n\nconst Header = ({\n    handleGrapthType,\n    graphType,\n    templateChange,\n    setEnableDualChart,\n    enableDualChart,\n    handlePatternChange,\n    selectedTime,\n    hanldeSelectedTime,\n    selectedTemp,\n    selectedPattern,\n    handlSwitchToggle,\n    switchToggle,\n    toggleFirstDayLine,\n    setToggleFirstDayLine,\n    selectedStock,\n    dataBaseUrl,\n    setSidebarWidth,\n}) => {\n    let linkRef = useRef();\n    let [patterns, setPatterns] = useState([]);\n    let [sidebarOpen, setSidebarOpen] = useState(false);\n\n    useEffect(() => {\n        getAllStocks(\"stocks/patterns\").then((res) => {\n            setPatterns(res?.data?.list || []);\n        });\n    }, []);\n\n    const openSidebar = () => {\n        if (!sidebarOpen) setSidebarWidth(500);\n        if (sidebarOpen) setSidebarWidth(6);\n\n        setSidebarOpen(!sidebarOpen);\n    };\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <Grid\n                container\n                spacing={2}\n                style={{ position: \"fixed\", padding: \"10px\" }}\n            >\n                <Grid item xs={2}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <AutocompleteWrapper\n                                options={patterns}\n                                value={selectedPattern}\n                                label={\"Pattern\"}\n                                handleChange={handlePatternChange}\n                                selectedStock={selectedStock}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={5}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={2}>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        disabled={selectedTime.name !== \"1d\"}\n                                        checked={toggleFirstDayLine}\n                                        onChange={(e) => {\n                                            setToggleFirstDayLine(\n                                                e.target.checked\n                                            );\n                                        }}\n                                    />\n                                }\n                                label=\"1st\"\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <ButtonGroup\n                                variant=\"text\"\n                                aria-label=\"text button group\"\n                            >\n                                <Button\n                                    className={`btn ${\n                                        graphType !== \"ohlc\"\n                                            ? \"templateBtn\"\n                                            : \"\"\n                                    }`}\n                                    onClick={() =>\n                                        handleGrapthType(\"candlestick\")\n                                    }\n                                >\n                                    {OHLC_ICON()}\n                                </Button>\n                                <Button\n                                    className={`btn ${\n                                        graphType === \"ohlc\"\n                                            ? \"templateBtn\"\n                                            : \"\"\n                                    }`}\n                                    onClick={() => handleGrapthType(\"ohlc\")}\n                                >\n                                    {BAR_ICON()}\n                                </Button>\n                            </ButtonGroup>\n                        </Grid>\n                        <Grid item md={2}>\n                            <AutocompleteWrapper\n                                options={[\"0\", 1, 2, 3, 4, 5]}\n                                value={switchToggle}\n                                label={\"MT4\"}\n                                handleChange={handlSwitchToggle}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option;\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <AutocompleteWrapper\n                                options={times}\n                                value={selectedTime}\n                                label={\"Time\"}\n                                handleChange={hanldeSelectedTime}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option ? option?.name : \"\";\n                                }}\n                                isOptionEqualToValue={(option, value) =>\n                                    option.name === value.name &&\n                                    option.desc === value.desc &&\n                                    option.ms === value.ms\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <AutocompleteWrapper\n                                options={templates}\n                                value={selectedTemp}\n                                label={\"Template\"}\n                                handleChange={templateChange}\n                                selectedStock={selectedStock}\n                                getOptionLabel={(option) => {\n                                    return option ? option?.name : \"\";\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button\n                                onClick={() => {\n                                    setEnableDualChart(!enableDualChart);\n                                    document\n                                        .querySelector(\n                                            '[data-title=\"Autoscale\"]'\n                                        )\n                                        ?.click();\n                                }}\n                                className={`btn ${\n                                    enableDualChart ? \"templateBtn\" : \"\"\n                                }`}\n                            >\n                                Dual Chart\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={5}>\n                    <Grid container spacing={2}>\n                        <Grid item md={11}>\n                            {dataBaseUrl !== \"/db_v1\" ? (\n                                <ButtonGroup\n                                    variant=\"text\"\n                                    aria-label=\"text button group\"\n                                >\n                                    {/* <React.Fragment> */}\n                                    <Link\n                                        style={{ display: \"none\" }}\n                                        ref={linkRef}\n                                        target={\"_blank\"}\n                                        to=\"/db_v1\"\n                                    ></Link>\n\n                                    <Button\n                                        onClick={() => {\n                                            linkRef.current.click();\n                                        }}\n                                        style={{ color: \"white\" }}\n                                    >\n                                        {\"__\"}\n                                    </Button>\n                                    {/* </React.Fragment> */}\n                                </ButtonGroup>\n                            ) : (\n                                <></>\n                            )}\n                        </Grid>\n                        <Grid item md={1}>\n                            <IconButton onClick={openSidebar} color=\"primary\">\n                                <MenuIcon />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Header;\n","export function descendingComparator(a, b, orderBy) {\n    console.log(\"a,b\", a, b, orderBy);\n\n    if (b?.[orderBy] < a?.[orderBy]) {\n        return -1;\n    }\n    if (b?.[orderBy] > a?.[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy, selectedStrategy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy, selectedStrategy)\n        : (a, b) => -descendingComparator(a, b, orderBy, selectedStrategy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        console.log(\"a[1] - b[1]\", a[1], b[1]);\n        return a[1] - b[1];\n    });\n    console.log(\"stabilizedThis\", stabilizedThis);\n    return stabilizedThis.map((el) => el[0]);\n}\n","import { Box, TableSortLabel } from \"@mui/material\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport { getAllStocks } from \"../services/api\";\nimport { getTimeObject } from \"../Utils/utils\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { getComparator, stableSort } from \"../Utils/sorting\";\n\nconst FilterPanelTable = ({\n    height,\n    scrollableListRef,\n    selectedStrategy,\n    placeSelectedItemInTheMiddle,\n    selectedStock,\n    hanldeSelectedTime,\n    handleStockChange,\n    selectedTime,\n    stocks,\n    setStocks,\n    strategiesData,\n    selectedCategory,\n    symbolFilter,\n    timeFilter,\n    setSelectStockIndex,\n    selectedStockIndex,\n}) => {\n    const filtersColumns = [\n        { label: \"Symbol\", numeric: false, type: \"string\" },\n        { label: \"Interval\", numeric: false, type: \"string\" },\n        {\n            label: \"Closing Session Time / Date\",\n            numeric: false,\n            type: \"time\",\n        },\n    ];\n    const [tableData, setTableData] = useState([]);\n    const [patternColumns, setPatternColumns] = useState([]);\n    const [pagination, setPagination] = useState({\n        pageSize: 100,\n        currentPage: 1,\n        total_count: 0,\n        total_pages: 0,\n    });\n\n    useEffect(() => {\n        fetchTableData();\n    }, [symbolFilter, timeFilter, pagination.currentPage]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    });\n\n    const processTableData = (data) => {\n        let tableDict = {};\n        data.columns.forEach((col) => {\n            return data[col].forEach((patterns) => {\n                return Object.values(patterns).forEach((pattern) => {\n                    let key = `${Object.values(pattern)[0].datetime}-${\n                        Object.values(pattern)[0].interval\n                    }`;\n                    tableDict[key] = {\n                        ...Object.values(pattern)[0],\n                        [col]: [\n                            ...((tableDict[key] || {})[col] || []),\n                            Object.keys(pattern)[0],\n                        ],\n                    };\n                });\n            });\n        });\n        setTableData([...Object.values(tableDict)]);\n    };\n\n    const fetchTableData = () => {\n        if (\n            selectedStock &&\n            selectedStock.name !== undefined &&\n            selectedStock.sources &&\n            selectedStock.sources[0] !== undefined\n        ) {\n            let url = `stocks/table_alert_data/${pagination.currentPage}?source=${selectedStock.sources[0]}&category=${selectedCategory}&per_page=${pagination.pageSize}`;\n\n            if (symbolFilter && symbolFilter.length) {\n                url += `&symbol=${symbolFilter.map((m) => m.name).join(\",\")}`;\n            }\n            if (timeFilter && timeFilter.length) {\n                url += `&interval=${timeFilter.map((m) => m.name).join(\",\")}`;\n            }\n            if (true) {\n                // url += `&start_date=04/04/2024, 21:20:00&end_date=04/08/2024, 21:40:00`;\n            }\n            getAllStocks(url, \"get\").then((res) => {\n                // eslint-disable-next-line array-callback-return\n                let data = res?.data?.data;\n                processTableData(data);\n                setPatternColumns(data?.columns || []);\n                setPagination({\n                    ...pagination,\n                    currentPage: data?.page,\n                    total_count: data?.total_count,\n                    total_pages: data?.total_pages,\n                });\n            });\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        console.log(\"key down filter panel\");\n        if (e.keyCode === 38) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange({\n                description: \"\",\n                name: tableData[selectedStockIndex - 1].symbol,\n                sectorName: \"\",\n                sources: [\n                    selectedStock &&\n                        selectedStock.sources &&\n                        selectedStock.sources.length &&\n                        selectedStock.sources[0],\n                ],\n            });\n            setSelectStockIndex(selectedStockIndex - 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex - 1);\n        } else if (e.keyCode === 40) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange({\n                description: \"\",\n                name: tableData[selectedStockIndex - 1].symbol,\n                sectorName: \"\",\n                sources: [\n                    selectedStock &&\n                        selectedStock.sources &&\n                        selectedStock.sources.length &&\n                        selectedStock.sources[0],\n                ],\n            });\n            setSelectStockIndex(selectedStockIndex + 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex + 1);\n        }\n    };\n\n    const handleChange = (event, value) => {\n        setPagination({\n            ...pagination,\n            currentPage: value,\n        });\n    };\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Symbol\");\n\n    const createSortHandler = (property) => (event) => {\n        console.log(\"property\", property);\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n\n        setTableData(\n            stableSort(\n                tableData.map((m) => {\n                    let obj = {};\n                    selectedStrategy.forEach((s, i) => {\n                        let t = strategiesData?.[i]?.data?.[m.name]?.time;\n                        obj[s] = t ? new Date(t) : null;\n                    });\n\n                    return {\n                        ...m,\n                        Symbol: m.symbol,\n                        Interval: m.interval,\n                        ...obj,\n                    };\n                }),\n                getComparator(\n                    isAsc ? \"desc\" : \"asc\",\n                    property,\n                    selectedStrategy\n                )\n            )\n        );\n    };\n    return (\n        <div onKeyDown={handleKeyDown}>\n            <TableContainer\n                sx={{\n                    maxHeight: height - 20 - 25,\n                    margin: \"10px 0px\",\n                    overflowX: \"auto\",\n                }}\n            >\n                <Table\n                    sx={{ minWidth: \"300px\" }}\n                    ref={scrollableListRef}\n                    stickyHeader\n                    aria-label=\"sticky table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            {[\n                                ...filtersColumns,\n                                ...patternColumns.map((col) => {\n                                    return { label: col, numeric: false };\n                                }),\n                            ].map((column, index) => (\n                                <TableCell\n                                    key={column?.label + index}\n                                    align={column.numeric ? \"center\" : \"center\"}\n                                    sortDirection={\n                                        orderBy === column.label ? order : false\n                                    }\n                                >\n                                    <TableSortLabel\n                                        active={orderBy === column.label}\n                                        direction={\n                                            orderBy === column.label\n                                                ? order\n                                                : \"asc\"\n                                        }\n                                        onClick={createSortHandler(\n                                            column.label\n                                        )}\n                                    >\n                                        {column.label}\n                                        {orderBy === column.id ? (\n                                            <Box\n                                                component=\"span\"\n                                                sx={visuallyHidden}\n                                            >\n                                                {order === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </Box>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableData.map((row, index) => {\n                            return (\n                                <TableRow\n                                    className={\n                                        selectedStockIndex === index\n                                            ? \"selectedRowStyle\"\n                                            : \"\"\n                                    }\n                                    key={row?.symbol + index}\n                                    active={(\n                                        selectedStockIndex === index\n                                    ).toString()}\n                                    onClick={() => {\n                                        hanldeSelectedTime(\n                                            getTimeObject(row?.interval)\n                                        );\n                                        placeSelectedItemInTheMiddle(index);\n                                        handleStockChange({\n                                            description: \"\",\n                                            name: row.symbol,\n                                            sectorName: \"\",\n                                            sources: [\n                                                selectedStock &&\n                                                    selectedStock.sources &&\n                                                    selectedStock.sources\n                                                        .length &&\n                                                    selectedStock.sources[0],\n                                            ],\n                                        });\n                                        setSelectStockIndex(index);\n                                    }}\n                                    focus={(\n                                        selectedStockIndex === index\n                                    ).toString()}\n                                >\n                                    <TableCell\n                                        sx={{ width: \"100px\" }}\n                                        align={\"center\"}\n                                    >\n                                        {row?.symbol}\n                                    </TableCell>\n                                    <TableCell align={\"center\"}>\n                                        {row?.interval}\n                                    </TableCell>\n                                    <TableCell align={\"center\"}>\n                                        {row.datetime}\n                                    </TableCell>\n                                    {patternColumns.map((col, index) => {\n                                        return (\n                                            <TableCell\n                                                key={index}\n                                                align={\"center\"}\n                                            >\n                                                {(row[col] || []).join(\", \")}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n                {pagination && (\n                    <Pagination\n                        style={{\n                            display: \"flex\",\n                            margin: \"10px\",\n                            justifyContent: \"flex-end\",\n                        }}\n                        count={pagination.total_pages}\n                        page={pagination.page}\n                        onChange={handleChange}\n                    />\n                )}\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default FilterPanelTable;\n","import * as React from \"react\";\n// import { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\n// import { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\n// import { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\n// import { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\n\nconst DateRangePickerWrapper = () => {\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    return (\n        <></>\n        // <LocalizationProvider dateAdapter={AdapterDayjs}>\n        //     {/* <DemoContainer components={[\"DateRangePicker\"]}>\n        //         <DateRangePicker\n        //             localeText={{ start: \"Check-in\", end: \"Check-out\" }}\n        //         />\n        //     </DemoContainer> */}\n        // </LocalizationProvider>\n    );\n};\n\nexport default DateRangePickerWrapper;\n","import CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport { Checkbox, Grid } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { times } from \"../Utils/defaults\";\nimport AutocompleteWrapper from \"./AutocompleteWrapper\";\nimport FilterPanelTable from \"./FilterPanelTable\";\nimport DateRangePickerWrapper from \"./DateRangePickerWrapper\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst PatternTriggers = ({\n    filtersColumns,\n    height,\n    scrollableListRef,\n    selectedStrategy,\n    orderBy,\n    createSortHandler,\n    order,\n    placeSelectedItemInTheMiddle,\n    selectedStock,\n    hanldeSelectedTime,\n    handleStockChange,\n    selectedTime,\n    stocks,\n    setStocks,\n    strategiesData,\n    selectedCategory,\n    categories,\n    setSelectedCategory,\n    setSelectedTime,\n}) => {\n    const [symbolFilter, setSymbolFilter] = useState([]);\n    const [timeFilter, setTimeFilter] = useState([]);\n    const [selectedStockIndex, setSelectStockIndex] = useState(0);\n\n    return (\n        <Grid container style={{ margin: \"0px 6px\" }}>\n            <Grid container item md={12} sm={12} xs={12} spacing={2}>\n                <Grid item md={3} sm={3} xs={3}>\n                    <AutocompleteWrapper\n                        options={stocks}\n                        limitTags={2}\n                        value={symbolFilter}\n                        label=\"Symbol\"\n                        handleChange={(v) => {\n                            if (v && v.length) {\n                                setSymbolFilter([...v]);\n                            } else {\n                                setSymbolFilter([]);\n                            }\n                        }}\n                        selectedStock={selectedStock}\n                        multiple={true}\n                        getOptionLabel={(option) => {\n                            return option && option.name;\n                        }}\n                        renderOption={(props, option, s) => {\n                            let selected = s?.selected;\n                            return (\n                                <li {...props}>\n                                    <Checkbox\n                                        icon={icon}\n                                        checkedIcon={checkedIcon}\n                                        checked={selected}\n                                    />\n                                    {option.name}\n                                </li>\n                            );\n                        }}\n                    />\n                </Grid>\n                <Grid item md={3} sm={3} xs={3}>\n                    <AutocompleteWrapper\n                        options={times}\n                        limitTags={2}\n                        id=\"multiple-limit-tags\"\n                        value={timeFilter}\n                        label=\"Time\"\n                        handleChange={(v) => {\n                            if (v && v.length) {\n                                setTimeFilter([...v]);\n                            } else {\n                                setTimeFilter([]);\n                            }\n                        }}\n                        selectedStock={selectedStock}\n                        multiple={true}\n                        getOptionLabel={(option) => {\n                            return option && option.name;\n                        }}\n                        renderOption={(props, option, s) => {\n                            let selected = s?.selected;\n                            return (\n                                <li {...props}>\n                                    <Checkbox\n                                        icon={icon}\n                                        checkedIcon={checkedIcon}\n                                        checked={selected}\n                                    />\n                                    {option.name}\n                                </li>\n                            );\n                        }}\n                    />\n                </Grid>\n                <Grid item md={7} sm={7} xs={7}>\n                    <DateRangePickerWrapper />\n                    {/* <AutocompleteWrapper\n                        options={strategies}\n                        value={selectedStrategy}\n                        label=\"Strategies\"\n                        handleChange={(v) => {\n                            if (v && v.length) {\n                                setSelectedStrategy([...v]);\n                            } else {\n                                setSelectedStrategy([]);\n                            }\n                        }}\n                        selectedStock={selectedStock}\n                        multiple={true}\n                        renderOption={(props, option, s) => {\n                            let selected = s?.selected;\n                            return (\n                                <li {...props}>\n                                    <Checkbox\n                                        icon={icon}\n                                        checkedIcon={checkedIcon}\n                                        checked={selected}\n                                    />\n                                    {option}\n                                </li>\n                            );\n                        }}\n                    /> */}\n                </Grid>\n            </Grid>\n\n            <Grid item md={12} sm={12} xs={12}>\n                <FilterPanelTable\n                    filtersColumns={filtersColumns}\n                    height={height}\n                    scrollableListRef={scrollableListRef}\n                    selectedStrategy={selectedStrategy}\n                    orderBy={orderBy}\n                    createSortHandler={createSortHandler}\n                    order={order}\n                    selectedCategory={selectedCategory}\n                    selectedStock={selectedStock}\n                    hanldeSelectedTime={hanldeSelectedTime}\n                    handleStockChange={handleStockChange}\n                    setSelectStockIndex={setSelectStockIndex}\n                    selectedTime={selectedTime}\n                    stocks={stocks}\n                    setStocks={setStocks}\n                    symbolFilter={symbolFilter}\n                    timeFilter={timeFilter}\n                    strategiesData={strategiesData}\n                    selectedStockIndex={selectedStockIndex}\n                    placeSelectedItemInTheMiddle={placeSelectedItemInTheMiddle}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PatternTriggers;\n","import { TableCell, TableRow } from \"@mui/material\";\nimport React from \"react\";\n\nconst WatchListRow = ({\n    row,\n    index,\n    selectedStock,\n    handleStockChange,\n    selectedTime,\n    placeSelectedItemInTheMiddle,\n    setSelectStockIndex,\n    hanldeSelectedTime,\n    selectedStrategy,\n    strategiesData,\n}) => {\n    return row && selectedStock ? (\n        <TableRow\n            className={\n                row.name === selectedStock.name ? \"selectedRowStyle\" : \"\"\n            }\n            active={(row.name === selectedStock.name).toString()}\n            key={index}\n            onClick={() => {\n                hanldeSelectedTime(selectedTime);\n                placeSelectedItemInTheMiddle(index);\n                handleStockChange(row);\n                setSelectStockIndex(index);\n            }}\n            focus={(row.name === selectedStock.name).toString()}\n        >\n            <TableCell align={\"center\"}>{row.name}</TableCell>\n            <TableCell align={\"center\"}>\n                {row?.sources?.length && row.sources[0]}\n            </TableCell>\n            <TableCell align={\"center\"}>{row?.description || \"-\"}</TableCell>\n            <TableCell align={\"center\"}>{row.sectorName}</TableCell>\n            <TableCell align={\"center\"}>{selectedTime.name}</TableCell>\n            {strategiesData.map((m, i) =>\n                m?.data?.[row?.name]?.value &&\n                m?.data?.[row?.name]?.value !== \"temp\" ? (\n                    <TableCell key={i} align={\"center\"}>\n                        {m?.data?.[row?.name]?.value !== \"temp\"\n                            ? m?.data?.[row?.name]?.value + \", \"\n                            : \" \"}\n                        {m?.data?.[row?.name]?.time !== \"temp\"\n                            ? m?.data?.[row?.name]?.time\n                            : \" \"}\n                    </TableCell>\n                ) : (\n                    <></>\n                )\n            )}\n        </TableRow>\n    ) : (\n        <></>\n    );\n};\n\nexport default WatchListRow;\n","import { Box, TableSortLabel } from \"@mui/material\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport React from \"react\";\n\nimport WatchListRow from \"./WatchListRow\";\n\nconst WatchListTable = ({\n    height,\n    scrollableListRef,\n    selectedStrategy,\n    orderBy,\n    createSortHandler,\n    order,\n    placeSelectedItemInTheMiddle,\n    selectedStock,\n    hanldeSelectedTime,\n    handleStockChange,\n    setSelectStockIndex,\n    selectedTime,\n    stocks,\n    setStocks,\n    strategiesData,\n}) => {\n    return (\n        <TableContainer\n            sx={{\n                maxHeight: height - 20 - 25,\n                margin: \"10px 0px\",\n                overflowX: \"auto\",\n            }}\n        >\n            <Table\n                sx={{ minWidth: \"300px\" }}\n                ref={scrollableListRef}\n                stickyHeader\n                aria-label=\"sticky table\"\n            >\n                <TableHead>\n                    <TableRow>\n                        {[\n                            { label: \"Symbol\", numeric: false },\n                            { label: \"Sources\", numeric: false },\n                            { label: \"Description\", numeric: false },\n                            { label: \"Sector Name\", numeric: false },\n                            { label: \"Time\", numeric: false },\n                            ...(strategiesData?.length\n                                ? [\n                                      ...new Set(\n                                          strategiesData.map(\n                                              (item) => item.name\n                                          )\n                                      ),\n                                  ].map((m) => {\n                                      return {\n                                          label: m,\n                                          numeric: false,\n                                      };\n                                  })\n                                : []),\n                        ].map((column, index) => (\n                            <TableCell\n                                sx={{ minWidth: \"100px\" }}\n                                key={index}\n                                align={column.numeric ? \"center\" : \"center\"}\n                                sortDirection={\n                                    orderBy === column.label ? order : false\n                                }\n                            >\n                                <TableSortLabel\n                                    active={orderBy === column.label}\n                                    direction={\n                                        orderBy === column.label ? order : \"asc\"\n                                    }\n                                    onClick={createSortHandler(column.label)}\n                                >\n                                    {column.label}\n                                    {orderBy === column.id ? (\n                                        <Box\n                                            component=\"span\"\n                                            sx={visuallyHidden}\n                                        >\n                                            {order === \"desc\"\n                                                ? \"sorted descending\"\n                                                : \"sorted ascending\"}\n                                        </Box>\n                                    ) : null}\n                                </TableSortLabel>\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {stocks.map((row, index) => {\n                        return (\n                            <WatchListRow\n                                key={index}\n                                row={row}\n                                index={index}\n                                selectedStock={selectedStock}\n                                handleStockChange={handleStockChange}\n                                setSelectStockIndex={setSelectStockIndex}\n                                selectedTime={selectedTime}\n                                placeSelectedItemInTheMiddle={\n                                    placeSelectedItemInTheMiddle\n                                }\n                                setStocks={setStocks}\n                                stocks={stocks}\n                                hanldeSelectedTime={hanldeSelectedTime}\n                                selectedStrategy={selectedStrategy}\n                                strategiesData={strategiesData}\n                            />\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default WatchListTable;\n","import CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport { Box, Checkbox, Grid, Tab, Tabs, Typography } from \"@mui/material\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"../App.css\";\nimport { times } from \"../Utils/defaults\";\nimport { getComparator, stableSort } from \"../Utils/sorting\";\nimport { getAllStocks } from \"../services/api\";\nimport AutocompleteWrapper from \"./AutocompleteWrapper\";\nimport PatternTriggers from \"./PatternTriggers\";\nimport WatchListTable from \"./WatchListTable\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nfunction CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <div>{children}</div>}\n        </div>\n    );\n}\n\nconst WatchList = ({\n    handleStockChange,\n    selectedStock,\n    stocks,\n    setStocks,\n    height,\n    scrollableListRef,\n    placeSelectedItemInTheMiddle,\n    selectedCategory,\n    setSelectedCategory,\n    hanldeSelectedTime,\n    setLayout,\n    layout,\n    setSidebarWidth,\n    sidebarWidth,\n    enableDualChart,\n    selectedStrategy,\n    setSelectedStrategy,\n    secondaryLayout,\n    setSecondaryLayout,\n    strategiesData,\n}) => {\n    const [strategies, setStrategies] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedStockIndex, setSelectStockIndex] = useState(0);\n    const [loader, setLoader] = useState(false);\n    const [selectedTime, setSelectedTime] = useState(times[11]);\n\n    useEffect(() => {\n        setLoader(true);\n        getAllStocks(\"/stocks/watchlish\")\n            .then((res) => {\n                if (res?.data?.list?.length) {\n                    setCategories(res.data.list || []);\n                    setSelectedCategory(res.data.list[0]);\n                }\n                setLoader(false);\n            })\n            .catch(() => {\n                setLoader(false);\n            });\n\n        getAllStocks(\"/stocks/active_strategies\")\n            .then((res) => {\n                setStrategies(res?.data?.list || []);\n                setLoader(false);\n            })\n            .catch(() => {\n                setLoader(false);\n            });\n    }, [setSelectedCategory]);\n\n    useEffect(() => {\n        getAllStocks(\"stocks/watchlish/\" + selectedCategory).then((res) => {\n            setStocks(res?.data?.list || []);\n            setSelectStockIndex(0);\n            handleStockChange(res?.data?.list[0]);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedCategory]);\n\n    const handleKeyDown = (e) => {\n        console.log(\"key down watch list\");\n        if (e.keyCode === 38) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange(stocks[selectedStockIndex - 1]);\n            setSelectStockIndex(selectedStockIndex - 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex - 1);\n        } else if (e.keyCode === 40) {\n            hanldeSelectedTime(selectedTime);\n            handleStockChange(stocks[selectedStockIndex + 1]);\n            setSelectStockIndex(selectedStockIndex + 1);\n            placeSelectedItemInTheMiddle(selectedStockIndex + 1);\n        }\n    };\n\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Symbol\");\n\n    const createSortHandler = (property) => (event) => {\n        console.log(\"property\", property);\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n\n        setStocks(\n            stableSort(\n                stocks.map((m) => {\n                    let obj = {};\n                    selectedStrategy.forEach((s, i) => {\n                        let t = strategiesData?.[i]?.data?.[m.name]?.time;\n                        obj[s] = t ? new Date(t) : null;\n                    });\n\n                    return {\n                        ...m,\n                        Symbol: m.name,\n                        Sources: m.sources[0],\n                        Description: m.description,\n                        Time: selectedTime.name,\n                        ...obj,\n                    };\n                }),\n                getComparator(\n                    isAsc ? \"desc\" : \"asc\",\n                    property,\n                    selectedStrategy\n                )\n            )\n        );\n    };\n\n    const stock = useMemo(() => {\n        return (\n            <Grid container style={{ margin: \"0px 6px\" }}>\n                <Grid container item md={12} sm={12} xs={12} spacing={2}>\n                    <Grid item md={3} sm={3} xs={3}>\n                        <AutocompleteWrapper\n                            options={categories}\n                            value={selectedCategory}\n                            label={\"Categrories\"}\n                            handleChange={setSelectedCategory}\n                            selectedStock={selectedStock}\n                        />\n                    </Grid>\n                    <Grid item md={2} sm={2} xs={2}>\n                        <AutocompleteWrapper\n                            options={times}\n                            value={selectedTime}\n                            label={\"Time\"}\n                            handleChange={(newValue) => {\n                                setSelectedTime(newValue);\n                                hanldeSelectedTime(newValue);\n                            }}\n                            selectedStock={selectedStock}\n                            getOptionLabel={(option) => {\n                                return option ? option?.name : \"\";\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={7} sm={7} xs={7}>\n                        <AutocompleteWrapper\n                            options={strategies}\n                            value={selectedStrategy}\n                            label=\"Strategies\"\n                            handleChange={(v) => {\n                                if (v && v.length) {\n                                    setSelectedStrategy([...v]);\n                                } else {\n                                    setSelectedStrategy([]);\n                                }\n                            }}\n                            selectedStock={selectedStock}\n                            multiple={true}\n                            renderOption={(props, option, s) => {\n                                let selected = s?.selected;\n                                return (\n                                    <li {...props}>\n                                        <Checkbox\n                                            icon={icon}\n                                            checkedIcon={checkedIcon}\n                                            checked={selected}\n                                        />\n                                        {option}\n                                    </li>\n                                );\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid item md={12} sm={12} xs={12}>\n                    <div onKeyDown={handleKeyDown}>\n                        <WatchListTable\n                            height={height}\n                            scrollableListRef={scrollableListRef}\n                            selectedStrategy={selectedStrategy}\n                            orderBy={orderBy}\n                            createSortHandler={createSortHandler}\n                            order={order}\n                            placeSelectedItemInTheMiddle={\n                                placeSelectedItemInTheMiddle\n                            }\n                            selectedStock={selectedStock}\n                            hanldeSelectedTime={hanldeSelectedTime}\n                            handleStockChange={handleStockChange}\n                            setSelectStockIndex={setSelectStockIndex}\n                            selectedTime={selectedTime}\n                            stocks={stocks}\n                            setStocks={setStocks}\n                            strategiesData={strategiesData}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        stocks,\n        selectedStock,\n        order,\n        orderBy,\n        selectedCategory,\n        categories,\n        stocks,\n        selectedTime,\n        selectedStrategy,\n        strategiesData,\n        strategies,\n        strategiesData.length,\n    ]);\n\n    const filters = useMemo(() => {\n        return (\n            <PatternTriggers\n                height={height}\n                scrollableListRef={scrollableListRef}\n                selectedStrategy={selectedStrategy}\n                orderBy={orderBy}\n                createSortHandler={createSortHandler}\n                order={order}\n                selectedCategory={selectedCategory}\n                selectedStock={selectedStock}\n                hanldeSelectedTime={hanldeSelectedTime}\n                handleStockChange={handleStockChange}\n                setSelectStockIndex={setSelectStockIndex}\n                selectedTime={selectedTime}\n                stocks={stocks}\n                setStocks={setStocks}\n                strategiesData={strategiesData}\n                handleKeyDown={handleKeyDown}\n                categories={categories}\n                setSelectedCategory={setSelectedCategory}\n                setSelectedTime={setSelectedTime}\n                placeSelectedItemInTheMiddle={placeSelectedItemInTheMiddle}\n            />\n        );\n    }, [selectedStock, selectedTime]);\n\n    const sidebarRef = useRef(null);\n    const [isResizing, setIsResizing] = useState(false);\n\n    const resize = React.useCallback(\n        (mouseMoveEvent) => {\n            if (isResizing) {\n                let w =\n                    window.innerWidth -\n                    (sidebarRef.current.getBoundingClientRect().right -\n                        mouseMoveEvent.clientX) -\n                    10;\n\n                if (enableDualChart) {\n                    w = Math.floor(w / 2);\n                }\n\n                setLayout({\n                    ...layout,\n                    width: w,\n                    height: window.innerHeight - 80,\n                });\n                setSecondaryLayout({ ...secondaryLayout, width: w });\n                setSidebarWidth(\n                    sidebarRef.current.getBoundingClientRect().right -\n                        mouseMoveEvent.clientX\n                );\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [isResizing]\n    );\n\n    const stopResizing = React.useCallback(() => {\n        setIsResizing(false);\n    }, []);\n    const startResizing = React.useCallback((mouseDownEvent) => {\n        setIsResizing(true);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener(\"mousemove\", resize);\n        window.addEventListener(\"mouseup\", stopResizing);\n        return () => {\n            window.removeEventListener(\"mousemove\", resize);\n            window.removeEventListener(\"mouseup\", stopResizing);\n        };\n    }, [resize, stopResizing]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    });\n\n    function a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            \"aria-controls\": `simple-tabpanel-${index}`,\n        };\n    }\n\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div\n            ref={sidebarRef}\n            className=\"app-sidebar\"\n            style={{\n                width: sidebarWidth + \"px\",\n                height: `calc(100vh - ${52}px`,\n            }}\n            onMouseDown={(e) => e.preventDefault()}\n        >\n            {loader ? <div className=\"watchListLoader\"></div> : <></>}\n            <div className=\"app-sidebar-resizer\" onMouseDown={startResizing} />\n            <div className=\"app-sidebar-content\" style={{ overflowX: \"clip\" }}>\n                <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        aria-label=\"basic tabs example\"\n                    >\n                        <Tab label=\"Symbol\" {...a11yProps(0)} />\n                        <Tab label=\"Pattern Triggers\" {...a11yProps(1)} />\n                    </Tabs>\n                </Box>\n                <CustomTabPanel value={value} index={0}>\n                    {stock}\n                </CustomTabPanel>\n                <CustomTabPanel value={value} index={1}>\n                    {filters}\n                </CustomTabPanel>\n            </div>\n        </div>\n    );\n};\n\nexport default WatchList;\n","import { makeStyles } from \"@mui/styles\";\nimport React, { useRef, useState } from \"react\";\n\nimport GraphRenderer from \"./Components/GraphRenderer\";\nimport Header from \"./Components/Header\";\nimport WatchList from \"./Components/WatchList\";\nimport { initialLayout, templates, times } from \"./Utils/defaults\";\n\nimport \"./App.css\";\n\nconst useStyles = makeStyles(() => ({\n    container: (sidebarWidth) => {\n        return { width: `calc(100% - ${sidebarWidth}px)` };\n    },\n}));\n\nfunction App({ dataBaseUrl }) {\n    const [stocks, setStocks] = useState([]);\n    const [sidebarWidth, setSidebarWidth] = useState(6);\n    const classes = useStyles(sidebarWidth);\n    const [graphType, setGraphType] = useState(\"candlestick\");\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [toggleFirstDayLine, setToggleFirstDayLine] = useState(true);\n    const [enableDualChart, setEnableDualChart] = useState(false);\n    const [layout, setLayout] = useState({ ...initialLayout });\n    const scrollableListRef = useRef(null);\n    const [selectedStock, setSelectStock] = useState(\"MMM\");\n    const [selectedPattern, setSelectedPattern] = useState(null);\n    const [strategiesData, setStrategiesData] = useState([]);\n    const [selectedTime, setSelectTime] = useState(times[11]); //1DAY\n    const [secondaryLayout, setSecondaryLayout] = useState({\n        ...layout,\n        width: \"50%\",\n        height: window.innerHeight - 80,\n    });\n    const [selectedTemp, setSelectedTemp] = useState(templates[0]);\n    const [switchToggle, setSwitchToggle] = useState(\"0\");\n    const [selectedStrategy, setSelectedStrategy] = useState([]);\n\n    const handleGrapthType = (type) => {\n        setGraphType(type);\n    };\n\n    React.useEffect(() => {\n        function handleResize() {\n            if (\n                layout.width !== window.innerWidth - 10 ||\n                layout.height !== window.innerHeight - 80\n            ) {\n                document.querySelector('[data-title=\"Autoscale\"]')?.click();\n                setLayout({\n                    ...layout,\n                    width: window.innerWidth - 10,\n                    height: window.innerHeight - 80,\n                });\n            }\n        }\n        window.addEventListener(\"resize\", handleResize);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.innerWidth, window.innerHeight]);\n\n    const handlePatternChange = (pattern) => {\n        setSelectedPattern(pattern);\n        setSelectedStrategy([]);\n        setStrategiesData([]);\n    };\n\n    const handleStockChange = (stock) => {\n        setSelectStock(stock);\n    };\n\n    const hanldeSelectedTime = (time) => {\n        if (time?.name !== \"1d\") {\n            setToggleFirstDayLine(false);\n        }\n        setSelectTime(time);\n    };\n\n    const templateChange = (tempData) => {\n        setSelectedTemp(tempData);\n    };\n\n    const handlSwitchToggle = (v) => {\n        setSwitchToggle(v);\n    };\n\n    const placeSelectedItemInTheMiddle = (index) => {\n        const LIST_ITEM_HEIGHT = 21;\n        const NUM_OF_VISIBLE_LIST_ITEMS = 15;\n        const amountToScroll =\n            LIST_ITEM_HEIGHT * NUM_OF_VISIBLE_LIST_ITEMS +\n            index * LIST_ITEM_HEIGHT;\n        scrollableListRef.current.scrollTo(amountToScroll, 0);\n    };\n\n    const handleChangeSelectedStrategy = (s) => {\n        setSelectedStrategy([...s]);\n        setSelectedPattern(null);\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className={classes.container + \" app-frame\"}>\n                <Header\n                    setEnableDualChart={setEnableDualChart}\n                    enableDualChart={enableDualChart}\n                    handleGrapthType={handleGrapthType}\n                    graphType={graphType}\n                    templateChange={templateChange}\n                    setSidebarWidth={setSidebarWidth}\n                    selectedStock={selectedStock}\n                    handleStockChange={handleStockChange}\n                    handlePatternChange={handlePatternChange}\n                    selectedTime={selectedTime}\n                    hanldeSelectedTime={hanldeSelectedTime}\n                    selectedTemp={selectedTemp}\n                    selectedPattern={selectedPattern}\n                    handlSwitchToggle={handlSwitchToggle}\n                    switchToggle={switchToggle}\n                    toggleFirstDayLine={toggleFirstDayLine}\n                    setToggleFirstDayLine={setToggleFirstDayLine}\n                    dataBaseUrl={dataBaseUrl}\n                />\n                <div\n                    style={{\n                        height: \"100vh\",\n                        overflowY: \"hidden\",\n                    }}\n                >\n                    <GraphRenderer\n                        layout={layout}\n                        enableDualChart={enableDualChart}\n                        graphType={graphType}\n                        selectedTemp={selectedTemp}\n                        toggleFirstDayLine={toggleFirstDayLine}\n                        switchToggle={switchToggle}\n                        selectedPattern={selectedPattern}\n                        selectedStock={selectedStock}\n                        setLayout={setLayout}\n                        selectedTime={selectedTime}\n                        selectedCategory={selectedCategory}\n                        selectedStrategy={selectedStrategy}\n                        sidebarWidth={sidebarWidth}\n                        secondaryLayout={secondaryLayout}\n                        setSecondaryLayout={setSecondaryLayout}\n                        dataBaseUrl={dataBaseUrl}\n                        setStrategiesData={setStrategiesData}\n                        strategiesData={strategiesData}\n                    />\n                </div>\n            </div>\n\n            <WatchList\n                selectedStock={selectedStock}\n                handleStockChange={handleStockChange}\n                stocks={stocks}\n                setStocks={setStocks}\n                height={layout.height}\n                scrollableListRef={scrollableListRef}\n                placeSelectedItemInTheMiddle={placeSelectedItemInTheMiddle}\n                selectedCategory={selectedCategory}\n                setSelectedCategory={setSelectedCategory}\n                hanldeSelectedTime={hanldeSelectedTime}\n                setLayout={setLayout}\n                layout={layout}\n                setSidebarWidth={setSidebarWidth}\n                sidebarWidth={sidebarWidth}\n                enableDualChart={enableDualChart}\n                selectedStrategy={selectedStrategy}\n                setSelectedStrategy={handleChangeSelectedStrategy}\n                secondaryLayout={secondaryLayout}\n                setSecondaryLayout={setSecondaryLayout}\n                strategiesData={strategiesData}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, adaptV4Theme } from \"@mui/material/styles\";\nlet primary = \"#901f61\";\n\nexport const theme = createTheme(\n    adaptV4Theme({\n        palette: {\n            primary: { main: primary, light: \"#901f6117\" },\n            secondary: { main: \"#829ae621\" },\n        },\n        typography: {\n            fontSize: 12,\n            fontFamily: \"Arial\",\n            fontWeightLight: 400,\n            fontWeightRegular: 500,\n            fontWeightMedium: 600,\n            h1: {\n                fontSize: 26,\n                wordBreak: \"break-all\",\n            },\n            h2: {\n                fontSize: 24,\n                wordBreak: \"break-all\",\n            },\n            h3: {\n                fontSize: 22,\n                wordBreak: \"break-all\",\n            },\n            h4: {\n                fontSize: 20,\n                wordBreak: \"break-all\",\n            },\n            h5: {\n                fontSize: 18,\n                wordBreak: \"break-all\",\n            },\n            h6: {\n                fontSize: 18,\n                wordBreak: \"break-all\",\n            },\n            subtitle1: {\n                fontSize: 20,\n                fontWeight: \"bold\",\n                wordBreak: \"break-all\",\n            },\n            subtitle2: {\n                wordBreak: \"break-all\",\n            },\n            body1: {\n                wordBreak: \"break-all\",\n            },\n            body2: {\n                fontSize: 13,\n                wordBreak: \"break-all\",\n            },\n        },\n        props: {\n            MuiTextField: {\n                variant: \"standard\",\n                margin: \"none\",\n            },\n            MuiTooltip: { placement: \"bottom\", arrow: true },\n        },\n        overrides: {\n            MuiInput: {\n                input: {\n                    fontSize: 12,\n                },\n            },\n            MuiInputLabel: {\n                root: {\n                    fontSize: 12,\n                },\n            },\n            MuiTooltip: {\n                tooltip: {\n                    fontSize: \"10px\",\n                    color: \"white\",\n                    backgroundColor: primary,\n                },\n                arrow: {\n                    color: primary,\n                    backgroundColor: \"white\",\n                },\n            },\n            MuiCheckbox: {\n                colorSecondary: {\n                    \"&$checked\": {\n                        color: primary,\n                    },\n                },\n            },\n            MuiTableCell: {\n                root: {\n                    padding: \"none\",\n                    fontSize: \"12px\",\n                    minWidth: \"10px\",\n                    maxWidth: \"10px\",\n                    width: \"10px\",\n                },\n                head: {\n                    background: \"#484848\",\n                    color: \"white\",\n                    minWidth: \"10px\",\n                    maxWidth: \"10px\",\n                    width: \"10px\",\n                },\n            },\n        },\n    })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StyledEngineProvider, ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"./theme\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <BrowserRouter>\n                    <Routes>\n                        <Route path=\"/\" element={<App dataBaseUrl={\"\"} />} />\n                        <Route\n                            path=\"/db_v1\"\n                            element={<App dataBaseUrl={\"/db_v1\"} />}\n                        />\n                    </Routes>\n                </BrowserRouter>\n            </ThemeProvider>\n        </StyledEngineProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}