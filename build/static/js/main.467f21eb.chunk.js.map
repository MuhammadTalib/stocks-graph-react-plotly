{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","className","config","responsive","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","selectedTime","hanldeSelectedTime","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","value","disableClearable","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","color","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","line","width","increasing","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","domain","range","rangeslider","visible","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectTime","selectedTemp","setSelectedTemp","setGraphData","getDataRequest","stock","time","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","EMA3","EMA4","EMA5","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","SMA0","SMA1","SMA2","SMA3","stochd0","stochk0","MA0","MA1","RSI0","R0","R1","donchian0","forEach","push","Date","date","indicators","lowLowest","Math","min","filter","f","closeLowest","lowest","highHighest","openHighest","max","highest","now","err","tempData","autorange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.467f21eb.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates, loader }) => {\n  const config = { responsive: true };\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        style={style}\n        data={[data, ...(templates || [])]}\n        layout={layout}\n        config={config}\n      />\n    );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","export const times = [\n  { name: \"1h\", ms: 3600000 },\n  { name: \"1d\", ms: 86400000 },\n  { name: \"1wk\", ms: 604800000 },\n  { name: \"1mo\", ms: 2629746000 },\n];\n\nexport const templates = [\n  { name: \"T0\", id: 0 },\n  { name: \"T1\", id: 1 },\n  { name: \"T2\", id: 2 },\n  { name: \"T3\", id: 3 },\n  { name: \"T4\", id: 4 },\n  { name: \"T5\", id: 5 },\n  { name: \"T6\", id: 6 },\n  { name: \"T7\", id: 7 },\n  { name: \"T8\", id: 8 },\n];\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { times, templates } from \"../Utils/utils\";\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  hanldeSelectedTime,\n}) => {\n  let [stocks, setStocks] = useState([]);\n\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res?.data?.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      style={{ padding: \"10px\" }}\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          value={selectedStock}\n          disableClearable\n          // textInputProps={{ clearButtonMode: \"hidden\" }}\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          inputValue={selectedStock}\n          options={stocks}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button onClick={() => handleGrapthType(\"candlestick\")}>\n            <WaterfallChartIcon\n              color={graphType === \"candlestick\" ? \"primary\" : \"action\"}\n            />\n          </Button>\n          <Button onClick={() => handleGrapthType(\"ohlc\")}>\n            <BarChartIcon color={graphType !== \"ohlc\" ? \"primary\" : \"action\"} />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              color={selectedTime.name !== t.name ? \"primary\" : \"error\"}\n            >\n              {t.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item xs={5}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templates.map((m, i) => (\n            <Button key={i} onClick={() => templateChange(m)}>\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { TempChart } from \"./Components/TempChart\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  close: [],\n  decreasing: {\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\nconst rightMargin = 20;\nconst candleDefault = 214 + rightMargin;\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n\n  const [graphType, setGraphType] = useState(\"candlestick\");\n  const [subGraphs, setSubGraphs] = useState([]);\n  const [selectedTemplates, setSelectedTemplates] = useState([]);\n  const [templates, setTemplates] = useState([]);\n\n  const [mergedGraphs, setMergedGraphs] = useState([]);\n  const [separateGraphs, setSeparateGraphs] = useState([]);\n\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout, setLayout] = useState({\n    dragmode: \"zoom\",\n    margin: {\n      r: 10,\n      t: 25,\n      b: 40,\n      l: 20,\n    },\n    showlegend: false,\n    xaxis: {\n      domain: [0, 1],\n      range: [],\n      rangeslider: {\n        visible: false,\n      },\n      type: \"date\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      // autorange: true,\n      rangeslider: {\n        visible: false,\n      },\n      position: 1,\n      side: \"bottom\",\n      type: \"linear\",\n    },\n    opacity: 0.2,\n\n    // shapes: [\n    //   {\n    //     type: \"rect\",\n    //     xref: \"x\",\n    //     yref: \"y\",\n    //     x0: \"2021-10-25\",\n    //     y0: 179,\n    //     x1: \"2021-10-26\",\n    //     y1: 180.5,\n    //     fillcolor: \"yellow\",\n    //     opacity: 0.6,\n    //     line: {\n    //       width: 1,\n    //       color: \"green\",\n    //       opacity: 1,\n    //     },\n    //   },\n    // ],\n    autosize: true,\n    height: 550,\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n  const addTemplate = (id, template) => {\n    if (selectedTemplates.indexOf(id) !== -1) {\n      setTemplates([...templates.filter((f) => f.templateType !== id)]);\n      setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\n      setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\n    } else {\n      setSelectedTemplates([...selectedTemplates, id]);\n      setTemplates([...templates, ...template.graph]);\n      setSubGraphs([...subGraphs, ...template.subGraphs]);\n    }\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\n  const [selectedTemp, setSelectedTemp] = useState(0);\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const getDataRequest = (stock, time, template) => {\n    setLoader(true);\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\n    if (template > 0) {\n      url = url + `&template=${template}`;\n    }\n    getAllStocks(url)\n      .then((res) => {\n        console.log(\n          \"Total candles on time \",\n          time.name,\n          \" is \",\n          res?.data?.data.length\n        );\n        setLoader(false);\n        let responseData = [...res?.data?.data];\n\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n\n        let EMA0 = [];\n        let EMA1 = [];\n        let EMA2 = [];\n        let EMA3 = [];\n        let EMA4 = [];\n        let EMA5 = [];\n\n        let MACD0 = [];\n        let MACD1 = [];\n        let MACD2 = [];\n        let MACDHIST0 = [];\n        let MACDHIST1 = [];\n        let MACDHIST2 = [];\n        let MACDSIGNAL0 = [];\n        let MACDSIGNAL1 = [];\n        let MACDSIGNAL2 = [];\n\n        let SMA0 = [];\n        let SMA1 = [];\n        let SMA2 = [];\n        let SMA3 = [];\n\n        let stochd0 = [];\n        let stochk0 = [];\n\n        let MA0 = [];\n        let MA1 = [];\n        let RSI0 = [];\n\n        let R0 = [];\n        let R1 = [];\n        let donchian0 = [];\n\n        responseData?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          x.push(new Date(m.date));\n          if (template === 1) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n          } else if (template === 2) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            EMA4.push(m.indicators?.EMA4);\n            EMA5.push(m.indicators?.EMA5);\n          } else if (template === 3 && m.indicators) {\n            R0.push(m.indicators[\"%R0\"]);\n            R1.push(m.indicators[\"%R1\"]);\n            donchian0.push(m.indicators?.donchian0);\n          } else if (template === 4) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n          } else if (template === 5) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDHIST2.push(m.indicators?.MACDHIST2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            SMA0.push(m.indicators?.SMA0);\n            SMA1.push(m.indicators?.SMA1);\n            SMA2.push(m.indicators?.SMA2);\n            SMA3.push(m.indicators?.SMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 7) {\n            EMA0.push(m.indicators?.EMA0);\n            MA0.push(m.indicators?.MA0);\n            MA1.push(m.indicators?.MA1);\n            RSI0.push(m.indicators?.RSI0);\n          } else if (template === 8) {\n            MACD0.push(m.indicators?.MACD0);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            RSI0.push(m.indicators?.RSI0);\n          }\n        });\n\n        let lowLowest = Math.min(...low.filter((f) => f !== null));\n        let closeLowest = Math.min(...close.filter((f) => f !== null));\n        let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\n\n        let highHighest = Math.min(...low.filter((f) => f !== null));\n        let openHighest = Math.max(...close.filter((f) => f !== null));\n        let highest = openHighest > highHighest ? openHighest : highHighest;\n\n        console.log(\"lowest\", lowest, highest);\n\n        for (let i = 0; i < rightMargin; i++) {\n          high.push(null);\n          low.push(null);\n          open.push(null);\n          close.push(null);\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\n          if (template === 1) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n          } else if (template === 2) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            EMA4.push(null);\n            EMA5.push(null);\n          } else if (template === 3) {\n            R0.push(null);\n            R1.push(null);\n            donchian0.push(null);\n          } else if (template === 4) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDHIST1.push(null);\n            MACDSIGNAL2.push(null);\n          } else if (template === 5) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDHIST0.push(null);\n            MACDHIST1.push(null);\n            MACDHIST2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDSIGNAL1.push(null);\n            MACDSIGNAL2.push(null);\n            SMA0.push(null);\n            SMA1.push(null);\n            SMA2.push(null);\n            SMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 7) {\n            EMA0.push(null);\n            MA0.push(null);\n            MA1.push(null);\n            RSI0.push(null);\n          } else if (template === 8) {\n            MACD0.push(null);\n            MACDHIST0.push(null);\n            MACDSIGNAL0.push(null);\n            RSI0.push(null);\n          }\n        }\n        if (template === 0) {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        }\n        if (template === 1) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 2) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA3,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA4,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA5,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 3) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: donchian0,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: R0,\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: R1,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n        } else if (template === 4) {\n          setMergedGraphs([]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACD1,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n              templates: [\n                {\n                  x: x,\n                  y: MACDHIST1,\n                  type: \"bar\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: MACDHIST1.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACD2,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL2,\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 7) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: MA0,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n            {\n              x: x,\n              y: MA1,\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n          ]);\n        } else if (template === 8) {\n          setMergedGraphs([]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              marker: {\n                color: \"rgb(126,87,194)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n          ]);\n        } else {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        }\n        console.log(\"x\", x);\n        setGraphData({ ...dummy, high, low, open, close, x });\n        setLayout({\n          ...layout,\n          yaxis: {\n            ...layout.yaxis,\n            rangeslider: {\n              visible: false,\n            },\n            range: [lowest, highest],\n          },\n        });\n      })\n      .catch((err) => {\n        setLoader(false);\n      });\n  };\n\n  useState(() => {\n    getDataRequest(selectedStock, selectedTime);\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    getDataRequest(stock, selectedTime, selectedTemp.id);\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    getDataRequest(selectedStock, time, selectedTemp.id);\n  };\n\n  const templateChange = (tempData) => {\n    setSelectedTemp(tempData);\n    getDataRequest(selectedStock, selectedTime, tempData.id);\n  };\n\n  return (\n    <>\n      {loader ? <div className=\"loader\"></div> : <></>}\n      <div style={{ padding: \"10px\" }}>\n        <Header\n          graphType={graphType}\n          handleGrapthType={handleGrapthType}\n          templateChange={templateChange}\n          templatesOptions={templatesOptions}\n          data={data}\n          selectedStock={selectedStock}\n          selectedTime={selectedTime}\n          hanldeSelectedTime={hanldeSelectedTime}\n          handleStockChange={handleStockChange}\n        />\n\n        <div id=\"fullscreen\">\n          {/* <TempChart /> */}\n          <Graph\n            style={style}\n            data={{ ...data, type: graphType }}\n            layout={layout}\n            templates={mergedGraphs.length ? [...mergedGraphs] : []}\n            loader={loader}\n          />\n          {!loader &&\n            separateGraphs.map((m) => (\n              <Graph\n                key={m}\n                templates={m.templates}\n                style={{ width: \"100%\" }}\n                data={{ ...m }}\n                layout={{\n                  dragmode: \"zoom\",\n                  margin: {\n                    r: 10,\n                    t: 1,\n                    b: 40,\n                    l: 20,\n                  },\n                  showlegend: false,\n                  xaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    type: \"date\",\n                  },\n                  yaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    position: 1,\n                    side: \"bottom\",\n                  },\n                  opacity: 0.2,\n                  autosize: true,\n                  height: 150,\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}