{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","time","loader","className","config","responsive","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","selectedTime","hanldeSelectedTime","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","value","disableClearable","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","color","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","template","dummy","decreasing","size","fillcolor","line","width","increasing","App","setLoader","setGraphType","dragmode","margin","r","b","l","showlegend","domain","range","rangeslider","visible","title","position","side","opacity","autosize","height","setLayout","setSelectStock","setSelectTime","setGraphData","getDataRequest","stock","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","forEach","push","indicators","Date","date","lowLowest","Math","min","filter","f","closeLowest","lowest","highHighest","openHighest","max","highest","now","err","tempData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ae17780.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates, time, loader }) => {\n  const config = { responsive: true };\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot\n        key={time}\n        style={style}\n        data={[data, ...(templates || [])]}\n        layout={layout}\n        config={config}\n      />\n    );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","export const times = [\n  { name: \"1h\", ms: 3600000 },\n  { name: \"1d\", ms: 86400000 },\n  { name: \"1wk\", ms: 604800000 },\n  { name: \"1mo\", ms: 2629746000 },\n];\n\nexport const templates = [\n  { name: \"T1\", id: 1 },\n  { name: \"T2\", id: 2 },\n  { name: \"T3\", id: 3 },\n];\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { times, templates } from \"../Utils/utils\";\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  hanldeSelectedTime,\n}) => {\n  let [stocks, setStocks] = useState([]);\n\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res?.data?.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      style={{ padding: \"10px\" }}\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          value={selectedStock}\n          disableClearable\n          // textInputProps={{ clearButtonMode: \"hidden\" }}\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          inputValue={selectedStock}\n          options={stocks}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button onClick={() => handleGrapthType(\"candlestick\")}>\n            <WaterfallChartIcon\n              color={graphType === \"candlestick\" ? \"primary\" : \"action\"}\n            />\n          </Button>\n          <Button onClick={() => handleGrapthType(\"ohlc\")}>\n            <BarChartIcon color={graphType !== \"ohlc\" ? \"primary\" : \"action\"} />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              color={selectedTime.name !== t.name ? \"primary\" : \"error\"}\n            >\n              {t.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item xs={5}>\n        {\" \"}\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templates.map((m, i) => (\n            <Button key={i} onClick={() => templateChange(m)}>\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(255,0,0,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  close: [],\n  decreasing: {\n    size: 8,\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\nconst rightMargin = 20;\nconst candleDefault = 214 + rightMargin;\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n\n  const [graphType, setGraphType] = useState(\"candlestick\");\n  const [subGraphs, setSubGraphs] = useState([]);\n  const [selectedTemplates, setSelectedTemplates] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout, setLayout] = useState({\n    dragmode: \"zoom\",\n    margin: {\n      r: 10,\n      t: 25,\n      b: 40,\n      l: 60,\n    },\n    showlegend: false,\n    xaxis: {\n      domain: [0, 1],\n      range: [],\n      rangeslider: {\n        visible: false,\n      },\n      title: \"Date\",\n      type: \"date\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      // autorange: true,\n      range: [169, 187],\n      rangeslider: {\n        visible: false,\n      },\n      position: 1,\n      side: \"bottom\",\n    },\n    opacity: 0.2,\n\n    // shapes: [\n    //   {\n    //     type: \"rect\",\n    //     xref: \"x\",\n    //     yref: \"y\",\n    //     x0: \"2021-10-25\",\n    //     y0: 179,\n    //     x1: \"2021-10-26\",\n    //     y1: 180.5,\n    //     fillcolor: \"yellow\",\n    //     opacity: 0.6,\n    //     line: {\n    //       width: 1,\n    //       color: \"green\",\n    //       opacity: 1,\n    //     },\n    //   },\n    // ],\n    autosize: true,\n    height: 550,\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n  const addTemplate = (id, template) => {\n    if (selectedTemplates.indexOf(id) !== -1) {\n      setTemplates([...templates.filter((f) => f.templateType !== id)]);\n      setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\n      setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\n    } else {\n      setSelectedTemplates([...selectedTemplates, id]);\n      setTemplates([...templates, ...template.graph]);\n      setSubGraphs([...subGraphs, ...template.subGraphs]);\n    }\n  };\n  const templateChange = (tempData) => {\n    // addTemplate(tempData.id, tempData.template);\n    getDataRequest(selectedStock, selectedTime, tempData.id);\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const getDataRequest = (stock, time, template) => {\n    setLoader(true);\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\n    if (template) {\n      url = url + `&template=${template}`;\n    }\n    getAllStocks(url)\n      .then((res) => {\n        console.log(\n          \"Total candles on time \",\n          time.name,\n          \" is \",\n          res?.data?.data.length\n        );\n        setLoader(false);\n        let responseData = [...res?.data?.data];\n        // if (responseData.length < candleDefault) {\n        //   let startNull = candleDefault - responseData.length;\n        //   console.log(\"startNull\", startNull);\n        //   console.log(\n        //     \"responseData[0]\",\n        //     responseData[0].date,\n        //     new Date(Date.now(new Date(responseData[0].date)))\n        //   );\n        //   console.log(\n        //     \"responseData[0]\",\n        //     new Date(Date.now(responseData[0].date) - (0 + 1) * time.ms)\n        //   );\n        //   let candle = {};\n        //   Object.entries(responseData[0]).map((m) => {\n        //     candle[m[0]] = m[1];\n        //   });\n        //   console.log(\"candle\", candle);\n\n        //   for (let i = 0; i < startNull; i++) {\n        //     let d = new Date(\n        //       Date.now(responseData[0].date) - (i + 1) * time.ms\n        //     );\n        //     console.log(\"candle[ \", d);\n        //     responseData.unshift({ ...candle, date: d });\n        //   }\n        // }\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n        let EMA0 = [];\n        let EMA1 = [];\n        let EMA2 = [];\n        responseData?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          EMA0.push(m.indicators?.EMA0);\n          EMA1.push(m.indicators?.EMA1);\n          EMA2.push(m.indicators?.EMA2);\n          x.push(new Date(m.date));\n        });\n\n        let lowLowest = Math.min(...low.filter((f) => f !== null));\n        let closeLowest = Math.min(...close.filter((f) => f !== null));\n        let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\n\n        let highHighest = Math.min(...low.filter((f) => f !== null));\n        let openHighest = Math.max(...close.filter((f) => f !== null));\n        let highest = openHighest > highHighest ? openHighest : highHighest;\n\n        for (let i = 0; i < rightMargin; i++) {\n          high.push(null);\n          low.push(null);\n          open.push(null);\n          close.push(null);\n          EMA0.push(null);\n          EMA1.push(null);\n          EMA2.push(null);\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\n        }\n\n        setGraphData({ ...dummy, high, low, open, close, x, EMA0, EMA1, EMA2 });\n        console.log(\"lowest\", lowest, highest);\n        setLayout({\n          ...layout,\n          yaxis: {\n            ...layout.yaxis,\n            rangeslider: {\n              visible: false,\n            },\n            // range: [114, 218],\n            range: [lowest, highest],\n          },\n          xaxis: {\n            ...layout.xaxis,\n            range: [\n              new Date(Date.now(x[x.length - 1]) - candleDefault * time.ms),\n              new Date(x[x.length - 1]),\n            ],\n            rangeslider: {\n              visible: false,\n            },\n          },\n        });\n      })\n      .catch((err) => {\n        setLoader(false);\n      });\n  };\n\n  useState(() => {\n    getDataRequest(selectedStock, selectedTime);\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    getDataRequest(stock, selectedTime);\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    getDataRequest(selectedStock, time);\n  };\n  return (\n    <>\n      {loader ? <div className=\"loader\"></div> : <></>}\n      <div style={{ padding: \"10px\" }}>\n        <Header\n          graphType={graphType}\n          handleGrapthType={handleGrapthType}\n          templateChange={templateChange}\n          templatesOptions={templatesOptions}\n          data={data}\n          selectedStock={selectedStock}\n          selectedTime={selectedTime}\n          hanldeSelectedTime={hanldeSelectedTime}\n          handleStockChange={handleStockChange}\n        />\n\n        <div id=\"fullscreen\">\n          <Graph\n            time={selectedTime}\n            style={style}\n            data={{ ...data, type: graphType }}\n            layout={layout}\n            templates={\n              data.EMA0\n                ? [\n                    {\n                      x: data.x,\n                      y: data.EMA0,\n                      xaxis: \"x\",\n                      yaxis: \"y\",\n                      marker: {\n                        color: \"blue\",\n                      },\n                    },\n                    {\n                      x: data.x,\n                      y: data.EMA1,\n                      xaxis: \"x\",\n                      yaxis: \"y\",\n                      marker: {\n                        color: \"blue\",\n                      },\n                    },\n                    {\n                      x: data.x,\n                      y: data.EMA2,\n                      xaxis: \"x\",\n                      yaxis: \"y\",\n                      marker: {\n                        color: \"blue\",\n                      },\n                    },\n                  ]\n                : []\n            }\n            loader={loader}\n          />\n          {subGraphs.map((m) => (\n            <Graph\n              key={m}\n              style={{ width: \"100%\" }}\n              data={{ ...m }}\n              layout={{ ...layout, autosize: true, height: 150 }}\n              templates={m.mergedGraphs}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}