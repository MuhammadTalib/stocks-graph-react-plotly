{"version":3,"sources":["Components/Graph.jsx","services/api.js","Utils/utils.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","loader","className","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","times","name","ms","id","Header","handleGrapthType","graphType","templateChange","selectedStock","templatesOptions","handleStockChange","handlePatternChange","selectedTime","hanldeSelectedTime","selectedTemp","selectedPattern","handlSwitchToggle","switchToggle","useState","stocks","setStocks","patterns","setPatterns","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","padding","item","xs","Autocomplete","onChange","event","newValue","fullWidth","disableClearable","options","onClose","value","defaultValue","find","v","renderInput","params","TextField","label","variant","InputProps","type","ButtonGroup","Button","onClick","xmlns","viewBox","width","height","fill","d","stroke","Switch","checked","e","target","size","map","t","i","m","template1","graph","x","y","low","xaxis","yaxis","marker","color","templateType","subGraphs","mergedGraphs","high","open","close","template2","template3","axis","template","dummy","decreasing","fillcolor","line","increasing","months","App","setLoader","setGraphType","setMergedGraphs","separateGraphs","setSeparateGraphs","dragmode","margin","r","b","l","showlegend","legend","orientation","domain","rangeslider","visible","tickmode","autorange","position","side","opacity","autosize","setLayout","setSelectStock","setSelectedPattern","setSelectTime","setSelectedTemp","setSwitchToggle","setGraphData","getDataRequest","stock","time","pattern","meta_trader_indicator","url","toLowerCase","length","responseData","EMA0","EMA1","EMA2","EMA3","EMA4","EMA5","MACD0","MACD1","MACD2","MACDHIST0","MACDHIST1","MACDHIST2","MACDSIGNAL0","MACDSIGNAL1","MACDSIGNAL2","SMA0","SMA1","SMA2","SMA3","stochd0","stochk0","MA0","MA1","RSI0","R0","R1","donchian0","donchian_price0","donchian_min0","donchian_max0","HIST0","patternData","ConfrimHigh","ConfrimLow","forEach","push","indicators","undefined","Date","date","now","mode","symbol","tickvals","filter","f","ticktext","getMonth","getUTCFullYear","shapes","shp","lowP","Math","min","highP","max","x0","String","x1","xref","yref","y0","y1","rightMargin","err","tempData","dtick","tickformat","ticklen","nticks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1113692.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates, loader }) => {\n  const config = { responsive: true };\n  if (loader) {\n    return <div className=\"loadingLabel\">Loading...</div>;\n  } else\n    return (\n      <Plot style={style} data={[data, ...(templates || [])]} layout={layout} />\n    );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92:5000/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","export const times = [\n  { name: \"1h\", ms: 3600000 },\n  { name: \"1d\", ms: 86400000 },\n  { name: \"1wk\", ms: 604800000 },\n  { name: \"1mo\", ms: 2629746000 },\n];\n\nexport const templates = [\n  { name: \"T0\", id: 0 },\n  { name: \"T1\", id: 1 },\n  { name: \"T2\", id: 2 },\n  { name: \"T3\", id: 3 },\n  { name: \"T4\", id: 4 },\n  { name: \"T5\", id: 5 },\n  { name: \"T6\", id: 6 },\n  { name: \"T7\", id: 7 }\n];\n","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { times, templates } from \"../Utils/utils\";\nimport Switch from \"@mui/material/Switch\";\nimport \"../App.css\";\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  handlePatternChange,\n  selectedTime,\n  hanldeSelectedTime,\n  selectedTemp,\n  selectedPattern,\n  handlSwitchToggle,\n  switchToggle,\n}) => {\n  let [stocks, setStocks] = useState([]);\n  let [patterns, setPatterns] = useState([]);\n\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res?.data?.list || []);\n    });\n\n    getAllStocks(\"stocks/patterns\").then((res) => {\n      console.log(\"res\", res);\n      setPatterns(res?.data?.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      style={{ padding: \"10px\" }}\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          id=\"free-solo-2-demo\"\n          disableClearable={true}\n          options={stocks}\n          onClose={() => {\n            console.log(\"aytr\");\n          }}\n          value={selectedStock}\n          defaultValue={stocks.find((v) => v[0])}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Stock\"\n              variant=\"standard\"\n              InputProps={{\n                ...params.InputProps,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>{\" \"}\n      <Grid item xs={2}>\n        <Autocomplete\n          onChange={(event, newValue) => {\n            handlePatternChange(newValue);\n          }}\n          fullWidth\n          id=\"free-solo-2-demo\"\n          disableClearable={true}\n          options={[...patterns]}\n          onClose={() => {\n            console.log(\"aytr\");\n          }}\n          value={selectedPattern}\n          defaultValue={patterns.find((v) => v[0])}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Pattern\"\n              variant=\"standard\"\n              InputProps={{\n                ...params.InputProps,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button\n            className={`btn ${graphType !== \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"candlestick\")}\n          >\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\" width=\"24\" height=\"24\" fill=\"currentColor\"><path d=\"M17 11v6h3v-6h-3zm-.5-1h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5z\"></path><path d=\"M18 7h1v3.5h-1zm0 10.5h1V21h-1z\"></path><path d=\"M9 8v12h3V8H9zm-.5-1h4a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5z\"></path><path d=\"M10 4h1v3.5h-1zm0 16.5h1V24h-1z\"></path></svg>          </Button>\n          <Button\n            className={`btn ${graphType === \"ohlc\" ? \"templateBtn\" : \"\"}`}\n            onClick={() => handleGrapthType(\"ohlc\")}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\" width=\"24\" height=\"24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\"><path d=\"M10.5 7.5v15M7.5 20.5H10M13.5 11.5H11M19.5 6.5v15M16.5 9.5H19M22.5 16.5H20\"></path></g></svg>\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={1}>\n        <Switch\n          checked={switchToggle}\n          onClick={(e) => {\n            console.log(\"console.log\", e.target.checked);\n            handlSwitchToggle(e.target.checked);\n          }}\n          size=\"small\"\n        />\n      </Grid>\n      <Grid item xs={2}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t, i) => (\n            <Button\n              key={i}\n              onClick={() => hanldeSelectedTime(t)}\n              className={`btn ${\n                selectedTime.name === t.name ? \"templateBtn\" : \"\"\n              }`}\n            >\n              {t.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templates.map((m, i) => (\n            <Button\n              key={i}\n              onClick={() => templateChange(m)}\n              className={`btn ${selectedTemp.id === m.id ? \"templateBtn\" : \"\"}`}\n            >\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")), // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { getAllStocks } from \"./services/api\";\nimport { templatesOptions } from \"./templates/templates\";\n\nconst dummy = {\n  x: [],\n  name: \"main\",\n  close: [],\n  decreasing: {\n    fillcolor: \"black\",\n    line: { color: \"black\", width: 1 },\n  },\n  high: [],\n  increasing: { fillcolor: \"white\", line: { color: \"black\", width: 1 } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [],\n  open: [],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\nconst rightMargin = 20;\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n// const candleDefault = 214 + rightMargin;\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n\n  const [graphType, setGraphType] = useState(\"candlestick\");\n\n  const [mergedGraphs, setMergedGraphs] = useState([]);\n  const [separateGraphs, setSeparateGraphs] = useState([]);\n\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout, setLayout] = useState({\n    dragmode: \"zoom\",\n    margin: {\n      r: 10,\n      t: 25,\n      b: 40,\n      l: 20,\n    },\n    showlegend: true,\n    legend: { orientation: \"h\" },\n    xaxis: {\n      domain: [0, 1],\n      rangeslider: {\n        visible: false,\n      },\n      type: \"category\",\n      tickmode: \"array\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      autorange: true,\n      rangeslider: {\n        visible: false,\n      },\n      position: 1,\n      side: \"bottom\",\n      type: \"linear\",\n    },\n    opacity: 0.2,\n\n    autosize: true,\n    height: 550,\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedPattern, setSelectedPattern] = useState(\"\");\n\n  const [selectedTime, setSelectTime] = useState({ name: \"1d\", ms: 86400000 });\n  const [selectedTemp, setSelectedTemp] = useState(0);\n  const [switchToggle, setSwitchToggle] = useState(false);\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const getDataRequest = (\n    stock,\n    time,\n    template,\n    pattern,\n    meta_trader_indicator\n  ) => {\n    console.log(\"meta_trader_indicator\", meta_trader_indicator);\n    setLoader(true);\n    let url = `stocks?stock=${stock?.toLowerCase()}&interval=${time.name}`;\n    if (template > 0) {\n      url = url + `&template=${template}`;\n    }\n    if (pattern?.length) {\n      url = url + `&pattern=${pattern}`;\n    }\n    if (meta_trader_indicator) {\n      url = url + `&meta_trader_indicator=${meta_trader_indicator}`;\n    }\n    setMergedGraphs([]);\n    getAllStocks(url)\n      .then((res) => {\n        console.log(\n          \"Total candles on time \",\n          time.name,\n          \" is \",\n          res?.data?.data.length\n        );\n        setLoader(false);\n        let responseData = [...res?.data?.data];\n\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n\n        let EMA0 = [];\n        let EMA1 = [];\n        let EMA2 = [];\n        let EMA3 = [];\n        let EMA4 = [];\n        let EMA5 = [];\n\n        let MACD0 = [];\n        let MACD1 = [];\n        let MACD2 = [];\n        let MACDHIST0 = [];\n        let MACDHIST1 = [];\n        let MACDHIST2 = [];\n        let MACDSIGNAL0 = [];\n        let MACDSIGNAL1 = [];\n        let MACDSIGNAL2 = [];\n\n        let SMA0 = [];\n        let SMA1 = [];\n        let SMA2 = [];\n        let SMA3 = [];\n\n        let stochd0 = [];\n        let stochk0 = [];\n\n        let MA0 = [];\n        let MA1 = [];\n        let RSI0 = [];\n\n        let R0 = [];\n        let R1 = [];\n        let donchian0 = [];\n\n        let donchian_price0 = [];\n        let donchian_min0 = [];\n        let donchian_max0 = [];\n\n        let HIST0 = [];\n\n        let patternData = [];\n\n        let ConfrimHigh = [];\n        let ConfrimLow = [];\n\n        responseData?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n\n          if (meta_trader_indicator) {\n            console.log(\"switchToggleswitchToggle\");\n            ConfrimHigh.push(m.indicators[\"Confrim High\"]);\n            ConfrimLow.push(m.indicators[\"Confrim Low\"]);\n          }\n\n          if (m[pattern] !== undefined) {\n            patternData.push(m[pattern]);\n          }\n          x.push(new Date(m.date));\n          if (template === 1) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n          } else if (template === 2) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            EMA4.push(m.indicators?.EMA4);\n            EMA5.push(m.indicators?.EMA5);\n          } else if (template === 3 && m.indicators) {\n            R0.push(m.indicators[\"%R0\"]);\n            R1.push(m.indicators[\"%R1\"]);\n            donchian_price0.push(m.indicators[\"donchian_price0\"]);\n            donchian_min0.push(m.indicators[\"donchian_min0\"]);\n            donchian_max0.push(m.indicators[\"donchian_max0\"]);\n            donchian0.push(m.indicators?.donchian0);\n          } else if (template === 4) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            SMA0.push(m.indicators?.SMA0);\n            SMA1.push(m.indicators?.SMA1);\n            SMA2.push(m.indicators?.SMA2);\n            SMA3.push(m.indicators?.SMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 5) {\n            MACD0.push(m.indicators?.MACD0);\n            MACD1.push(m.indicators?.MACD1);\n            MACD2.push(m.indicators?.MACD2);\n            MACDHIST0.push(m.indicators?.MACDHIST0);\n            MACDHIST1.push(m.indicators?.MACDHIST1);\n            MACDHIST2.push(m.indicators?.MACDHIST2);\n            MACDSIGNAL0.push(m.indicators?.MACDSIGNAL0);\n            MACDSIGNAL1.push(m.indicators?.MACDSIGNAL1);\n            MACDSIGNAL2.push(m.indicators?.MACDSIGNAL2);\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 7) {\n            EMA0.push(m.indicators?.EMA0);\n            MA0.push(m.indicators?.MA0);\n            MA1.push(m.indicators?.MA1);\n            RSI0.push(m.indicators?.RSI0);\n            stochd0.push(m.indicators?.stochd0);\n            stochk0.push(m.indicators?.stochk0);\n          } else if (template === 6) {\n            EMA0.push(m.indicators?.EMA0);\n            EMA1.push(m.indicators?.EMA1);\n            EMA2.push(m.indicators?.EMA2);\n            EMA3.push(m.indicators?.EMA3);\n            EMA4.push(m.indicators?.EMA4);\n            EMA5.push(m.indicators?.EMA5);\n            HIST0.push(m.indicators?.HIST0);\n          }\n        });\n\n        // let lowLowest = Math.min(...low.filter((f) => f !== null));\n        // let closeLowest = Math.min(...close.filter((f) => f !== null));\n        // let lowest = lowLowest > closeLowest ? closeLowest : lowLowest;\n\n        // let highHighest = Math.min(...low.filter((f) => f !== null));\n        // let openHighest = Math.max(...close.filter((f) => f !== null));\n        // let highest = openHighest > highHighest ? openHighest : highHighest;\n\n        for (let i = 0; i < rightMargin; i++) {\n          high.push(null);\n          low.push(null);\n          open.push(null);\n          close.push(null);\n          x.push(new Date(Date.now(x[x.length - 1]) + (i + 1) * time.ms));\n          if (template === 1) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n          } else if (template === 2) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            EMA4.push(null);\n            EMA5.push(null);\n          } else if (template === 3) {\n            R0.push(null);\n            R1.push(null);\n            donchian0.push(null);\n            donchian_price0.push(null);\n            donchian_min0.push(null);\n            donchian_max0.push(null);\n          } else if (template === 4) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDHIST0.push(null);\n            MACDSIGNAL2.push(null);\n            SMA0.push(null);\n            SMA1.push(null);\n            SMA2.push(null);\n            SMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 5) {\n            MACD0.push(null);\n            MACD1.push(null);\n            MACD2.push(null);\n            MACDHIST0.push(null);\n            MACDHIST1.push(null);\n            MACDHIST2.push(null);\n            MACDSIGNAL0.push(null);\n            MACDSIGNAL1.push(null);\n            MACDSIGNAL2.push(null);\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 7) {\n            EMA0.push(null);\n            MA0.push(null);\n            MA1.push(null);\n            RSI0.push(null);\n            stochd0.push(null);\n            stochk0.push(null);\n          } else if (template === 6) {\n            EMA0.push(null);\n            EMA1.push(null);\n            EMA2.push(null);\n            EMA3.push(null);\n            EMA4.push(null);\n            EMA5.push(null);\n            HIST0.push(null);\n          }\n        }\n\n        if (template === 0) {\n          setMergedGraphs([]);\n          setSeparateGraphs([]);\n        } else if (template === 1) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              xaxis: \"x\",\n              name: \"EMA0\",\n              yaxis: \"y\",\n              mode: \"line\",\n              type: \"scatter\",\n              marker: {\n                size: 4,\n                color: \"blue\",\n                symbol: \"diamond\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              name: \"EMA1\",\n              xaxis: \"x\",\n              type: \"scatter\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2.map((m) => {\n                if (!m) return null;\n                else return m;\n              }),\n              name: \"EMA2\",\n              type: \"scatter\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 2) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              name: \"EMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              name: \"EMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA3,\n              name: \"EMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA4,\n              name: \"EMA4\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA5,\n              name: \"EMA5\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n          setSeparateGraphs([]);\n        } else if (template === 3) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: donchian_price0,\n              name: \"DONCHAIN\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n                size: 12,\n              },\n              line: {\n                width: 1,\n              },\n            },\n            {\n              x: x,\n              y: donchian_min0,\n              name: \"donchian min\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n              line: {\n                width: 2,\n              },\n            },\n            {\n              x: x,\n              y: donchian_max0,\n              name: \"donchian max\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n              line: {\n                width: 2,\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: R0,\n              name: \"%R0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: R1,\n              name: \"%R1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n        } else if (template === 4) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: SMA0,\n              name: \"SMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(255,173,89)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA1,\n              name: \"SMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(253,91,252)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA2,\n              name: \"SMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(172,91,170)\",\n              },\n            },\n            {\n              x: x,\n              y: SMA3,\n              name: \"SMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(89,89,89)\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACDHIST0,\n              name: \"MACD HIST\",\n              type: \"bar\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")), //\"black\",\n              },\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 5) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              name: \"EMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(255,0,56)\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              name: \"EMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"rgb(13,190,58)\",\n              },\n            },\n            {\n              x: x,\n              y: EMA3,\n              name: \"EMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: MACD0,\n              name: \"MACD0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: MACDSIGNAL0,\n                  name: \"MACD SIGNAL\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"black\",\n                  },\n                },\n              ],\n            },\n            {\n              x: x,\n              y: MACDHIST0,\n              name: \"MACDHIST\",\n              type: \"bar\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: MACDHIST0.map((m, i) => (m > 0 ? \"green\" : \"red\")),\n              },\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 7) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: MA0,\n              name: \"MA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n            {\n              x: x,\n              y: MA1,\n              name: \"MA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"black\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: RSI0,\n              name: \"RSI0\",\n              marker: {\n                color: \"blue\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n            {\n              x: x,\n              y: stochd0,\n              name: \"stochd\",\n              marker: {\n                color: \"rgb(153,42,173)\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n              templates: [\n                {\n                  x: x,\n                  y: stochk0,\n                  name: \"stochk\",\n                  xaxis: \"x\",\n                  yaxis: \"y\",\n                  marker: {\n                    color: \"rgb(13,0,255)\",\n                  },\n                },\n              ],\n            },\n          ]);\n        } else if (template === 6) {\n          setMergedGraphs([\n            {\n              x: x,\n              y: EMA0,\n              name: \"EMA0\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA1,\n              name: \"EMA1\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA2,\n              name: \"EMA2\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"blue\",\n              },\n            },\n            {\n              x: x,\n              y: EMA3,\n              name: \"EMA3\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA4,\n              name: \"EMA4\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n            {\n              x: x,\n              y: EMA5,\n              name: \"EMA5\",\n              xaxis: \"x\",\n              yaxis: \"y\",\n              marker: {\n                color: \"red\",\n              },\n            },\n          ]);\n          setSeparateGraphs([\n            {\n              x: x,\n              y: HIST0,\n              type: \"bar\",\n              name: \"HIST0\",\n              marker: {\n                color: HIST0.map((m, i) =>\n                  m > 0 ? \"rgb(38,165,154)\" : \"rgb(254,82,82)\"\n                ), //\"black\",\n              },\n              xaxis: \"x\",\n              yaxis: \"y\",\n            },\n          ]);\n        }\n\n        setGraphData({\n          ...dummy,\n          high,\n          low,\n          open,\n          close,\n          x,\n          ConfrimHigh,\n          ConfrimLow,\n        });\n        setLayout({\n          ...layout,\n          xaxis: {\n            ...layout.xaxis,\n            rangeslider: {\n              visible: false,\n            },\n            autorange: true,\n            tickvals: [\n              ...x.filter((f, i) => {\n                let s = i % 15 === 0;\n                let d = new Date(f);\n                return i % 15 === 0; //d.getDate() === 15 || d.getDate() === 30;\n              }),\n            ],\n            ticktext: [\n              ...x\n                .filter((f, i) => {\n                  // let s = i % 15 === 0;\n                  // let d = new Date(f);\n                  return i % 15 === 0;\n                })\n                .map((m) => {\n                  let d = new Date(m);\n                  let datee = months[d.getMonth()] + \" \" + d.getUTCFullYear();\n                  return datee;\n                }),\n            ],\n          },\n          yaxis: {\n            ...layout.yaxis,\n            rangeslider: {\n              visible: false,\n            },\n            autorange: true,\n          },\n          shapes: [\n            ...high.map((shp, i) => {\n              if (patternData[i]) {\n                let lowP = Math.min(...[low[i], high[i], open[i], close[i]]);\n                let highP = Math.max(...[low[i], high[i], open[i], close[i]]);\n                let x0 = String(new Date(x[i - 1])); //- 0.5 * time.ms));\n                let x1 = String(new Date(x[i + 1])); //.getTime() + 0.5 * time.ms));\n\n                console.log(\"x0x1\", x0, x1);\n                return {\n                  type: \"rect\",\n                  xref: \"x\",\n                  yref: \"y\",\n                  x0: x0,\n                  y0: lowP,\n                  x1,\n                  width: 1,\n                  y1: highP,\n                  fillcolor: \"yellow\",\n                  opacity: 0.6,\n                  rightMargin: 3,\n                  line: {\n                    width: 2,\n                    color: open[i] < close[i] ? \"green\" : \"red\",\n                    opacity: 1,\n                  },\n                };\n              }\n              return null;\n            }),\n            // ...high.map((shp, i) => {\n            //   if (true && i % 10 == 0) {\n            //     return {\n            //       type: \"path\",\n            //       path:\n            //         \"M 150 100 L \" +\n            //         new Date(x[i].getTime() + 0.5 * time.ms) +\n            //         \" 300 L 200 70 Z\",\n            //       fillcolor: \"rgba(255, 140, 184, 0.5)\",\n            //       line: {\n            //         color: \"rgb(255, 140, 184)\",\n            //       },\n            //     };\n            //   }\n            // }),\n          ],\n        });\n      })\n      .catch((err) => {\n        setLoader(false);\n        setMergedGraphs([]);\n        setSeparateGraphs([]);\n        setGraphData(null);\n      });\n  };\n\n  useState(() => {\n    getDataRequest(selectedStock, selectedTime);\n  }, []);\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    getDataRequest(\n      stock,\n      selectedTime,\n      selectedTemp.id,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const handlePatternChange = (pattern) => {\n    console.log(\"pattern\", pattern);\n    setSelectedPattern(pattern);\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      selectedTemp.id,\n      pattern,\n      switchToggle\n    );\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    getDataRequest(\n      selectedStock,\n      time,\n      selectedTemp.id,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const templateChange = (tempData) => {\n    setSelectedTemp(tempData);\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      tempData.id,\n      selectedPattern,\n      switchToggle\n    );\n  };\n\n  const handlSwitchToggle = (v) => {\n    getDataRequest(\n      selectedStock,\n      selectedTime,\n      selectedTemp.id,\n      selectedPattern,\n      v\n    );\n    setSwitchToggle(v);\n  };\n\n  return (\n    <>\n      {loader ? <div className=\"loader\"></div> : <></>}\n      <div style={{ padding: \"10px\" }}>\n        <Header\n          switchToggle={switchToggle}\n          handlSwitchToggle={handlSwitchToggle}\n          graphType={graphType}\n          handleGrapthType={handleGrapthType}\n          templateChange={templateChange}\n          templatesOptions={templatesOptions}\n          data={data}\n          selectedStock={selectedStock}\n          selectedTime={selectedTime}\n          hanldeSelectedTime={hanldeSelectedTime}\n          handleStockChange={handleStockChange}\n          selectedTemp={selectedTemp}\n          selectedPattern={selectedPattern}\n          handlePatternChange={handlePatternChange}\n        />\n\n        <div id=\"fullscreen\">\n          <Graph\n            style={style}\n            data={{ ...data, type: graphType }}\n            layout={layout}\n            templates={[\n              ...(mergedGraphs.length ? [...mergedGraphs] : []),\n              ...(switchToggle\n                ? [\n                    {\n                      x: data?.x.map((m) => {\n                        if (!m) return null;\n                        else return String(m);\n                      }),\n                      y: data?.ConfrimHigh.map((m, i) => {\n                        if (!m) return null;\n                        else return data.high[i];\n                      }),\n                      xaxis: \"x\",\n                      name: \"Confirm High\",\n                      yaxis: \"y\",\n                      mode: \"markers\",\n                      type: \"scatter\",\n                      marker: {\n                        size: 8,\n                        color: \"blue\",\n                        symbol: \"diamond\",\n                      },\n                    },\n                  ]\n                : []),\n              ...(switchToggle\n                ? [\n                    {\n                      x: data.x.map((m) => {\n                        if (!m) return null;\n                        else return new Date(m);\n                      }),\n                      y: data.ConfrimLow.map((m, i) => {\n                        if (!m) return null;\n                        else return data.low[i];\n                      }),\n                      xaxis: \"x\",\n                      name: \"Confirm Low\",\n                      yaxis: \"y\",\n                      mode: \"markers\",\n                      marker: {\n                        size: 8,\n                        color: \"red\",\n                        symbol: \"diamond\",\n                      },\n                    },\n                  ]\n                : []),\n            ]}\n            loader={loader}\n          />\n          {!loader &&\n            separateGraphs.map((m, i) => (\n              <Graph\n                key={i + \"subGraph\"}\n                templates={m.templates}\n                style={{ width: \"100%\" }}\n                data={{ ...m }}\n                layout={{\n                  dragmode: \"zoom\",\n                  margin: {\n                    r: 10,\n                    t: 1,\n                    b: 40,\n                    l: 20,\n                  },\n                  showlegend: true,\n                  legend: { orientation: \"h\" },\n                  xaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    type: \"category\",\n                    dtick: 30 * 24 * 60 * 60 * 1000,\n                    tickformat: \"%d %B (%a)\\n %Y\",\n                    ticklen: 15,\n                    nticks: 10,\n                  },\n                  yaxis: {\n                    domain: [0, 1],\n                    autorange: true,\n                    rangeslider: {\n                      visible: false,\n                    },\n                    position: 1,\n                    side: \"bottom\",\n                  },\n                  opacity: 0.2,\n                  autosize: true,\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}