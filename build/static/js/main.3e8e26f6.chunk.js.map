{"version":3,"sources":["Components/Graph.jsx","services/api.js","Components/Header.jsx","templates/templates.js","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Graph","style","data","layout","templates","axios","defaults","baseURL","getAllStocks","endpoint","a","get","then","catch","error","console","log","Header","handleGrapthType","graphType","templateChange","templatesOptions","selectedStock","handleStockChange","selectedTime","hanldeSelectedTime","useState","stocks","setStocks","useEffect","res","list","Grid","container","spacing","direction","alignItems","textAlign","item","xs","Autocomplete","value","onChange","event","newValue","fullWidth","inputValue","options","renderInput","params","TextField","variant","label","ButtonGroup","Button","onClick","color","map","t","m","i","name","template1","graph","x","y","low","xaxis","yaxis","marker","templateType","subGraphs","mergedGraphs","high","type","open","close","template2","template3","axis","id","template","dummy","decreasing","line","increasing","App","setGraphType","setSubGraphs","selectedTemplates","setSelectedTemplates","setTemplates","dragmode","margin","l","r","b","showlegend","domain","rangeslider","visible","title","autorange","autosize","height","setSelectStock","setSelectTime","setGraphData","tempData","indexOf","filter","f","time","toLowerCase","forEach","push","Date","date","stock","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e8e26f6.chunk.js","sourcesContent":["import * as Plotly from \"plotly.js\";\nimport React from \"react\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"../App.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const Graph = ({ style, data, layout, templates }) => {\n  return (\n    <Plot style={style} data={[data, ...(templates || [])]} layout={layout} />\n  );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://3.210.142.92/\";\n\nexport const getAllStocks = async (endpoint) => {\n    return await axios\n      .get(`${endpoint}`)\n      .then(( data ) => {\n        return data;\n      })\n      .catch((error) => {\n       console.log(error)\n      });\n  };","import BarChartIcon from \"@mui/icons-material/BarChart\";\nimport WaterfallChartIcon from \"@mui/icons-material/WaterfallChart\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { getAllStocks } from \"../services/api\";\nimport { Grid, TextField } from \"@mui/material\";\n\nconst Header = ({\n  handleGrapthType,\n  graphType,\n  templateChange,\n  templatesOptions,\n  data,\n  selectedStock,\n  handleStockChange,\n  selectedTime,\n  hanldeSelectedTime,\n}) => {\n  let [stocks, setStocks] = useState([]);\n  const times = [\n    \"1h\",\n    \"1d\",\n    \"1wk\",\n    \"1mo\",\n  ];\n  useEffect(() => {\n    getAllStocks(\"stocks/available\").then((res) => {\n      console.log(\"res\", res);\n      setStocks(res.data.list || []);\n    });\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n    >\n      <Grid item xs={2}>\n        <Autocomplete\n          value={selectedStock}\n          onChange={(event, newValue) => {\n            handleStockChange(newValue);\n          }}\n          fullWidth\n          inputValue={selectedStock}\n          options={stocks}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"standard\" label=\"Stock\" />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          <Button onClick={() => handleGrapthType(\"candlestick\")}>\n            <WaterfallChartIcon\n              color={graphType === \"candlestick\" ? \"primary\" : \"action\"}\n            />\n          </Button>\n          <Button onClick={() => handleGrapthType(\"ohlc\")}>\n            <BarChartIcon color={graphType !== \"ohlc\" ? \"primary\" : \"action\"} />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={4}>\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {times.map((t) => (\n            <Button\n              onClick={() => hanldeSelectedTime(t)}\n              color={selectedTime !== t ? \"primary\" : \"error\"}\n            >\n              {t}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item xs={5}>\n        {\" \"}\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n          {templatesOptions(data).map((m, i) => (\n            <Button key={i} onClick={() => templateChange(m)}>\n              {m.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","export const template1 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.low,\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 1,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.a,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"#90c7fc\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.high,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 1,\n          },\n          {\n            x: data.x,\n            y: data.open,\n            type: \"bar\",\n            marker: {\n              color: data.open.map((m, i) =>\n                m < data.close[i] ? \"green\" : \"red\"\n              ),\n            },\n            xaxis: \"x\",\n            yaxis: \"y\",\n            templateType: 1,\n          },\n        ],\n      },\n    ],\n  };\n};\n\nexport const template2 = (data) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m, i) => (m + data.high[i]) / 2 + 0.8999),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"#90c7fc\",\n        },\n        templateType: 2,\n      },\n    ],\n    subGraphs: [],\n  };\n};\n\nexport const template3 = (data, axis) => {\n  return {\n    graph: [\n      {\n        x: data.x,\n        y: data.low.map((m) => m + 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n      {\n        x: data.x,\n        y: data.low.map((m) => m - 10),\n        xaxis: \"x\",\n        yaxis: \"y\",\n        marker: {\n          color: \"blue\",\n        },\n        templateType: 3,\n      },\n    ],\n    subGraphs: [\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(255,0,0,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n            xaxis: \"x\",\n            yaxis: \"y\",\n            type: \"scatter\",\n            marker: {\n              color: \"red\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n      {\n        x: data.x,\n        y: data.open.map((m, i) => (m < data.close[i] ? m : m * -1)),\n        type: \"bar\",\n        marker: {\n          color: \"rgba(0,0,255,0.7)\", // data.open.map((m, i) => (m < data.close[i] ? \"green\" : \"red\")),\n        },\n        xaxis: \"x\",\n        yaxis: \"y\",\n        templateType: 3,\n        mergedGraphs: [\n          {\n            x: data.x,\n            y: data.low,\n            xaxis: \"x\",\n            yaxis: \"y\",\n            marker: {\n              color: \"blue\",\n            },\n            templateType: 3,\n          },\n        ],\n      },\n    ],\n  };\n};\nexport const templatesOptions = (data) => [\n  { name: \"T1\", id: 1, template: { ...template1(data) } },\n  { name: \"T2\", id: 2, template: { ...template2(data) } },\n  { name: \"T3\", id: 3, template: { ...template3(data) } },\n  // { name: \"T4\", id: 4, template: template1 },\n  // { name: \"T5\", id: 5, template: template1 },\n  // { name: \"T6\", id: 6, template: template1 },\n];\n","import { Button } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Graph } from \"./Components/Graph\";\nimport Header from \"./Components/Header\";\nimport { templatesOptions } from \"./templates/templates\";\nimport { getAllStocks } from \"./services/api\";\n\nconst dummy = {\n  x: [\n    \"2017-01-04\",\n    \"2017-01-05\",\n    \"2017-01-06\",\n    \"2017-01-07\",\n    \"2017-01-08\",\n    \"2017-01-09\",\n    \"2017-01-10\",\n    \"2017-01-11\",\n    \"2017-01-12\",\n    \"2017-01-13\",\n    \"2017-01-14\",\n    \"2017-01-15\",\n    \"2017-01-16\",\n    \"2017-01-17\",\n    \"2017-01-18\",\n    \"2017-01-19\",\n    \"2017-01-20\",\n    \"2017-01-21\",\n    \"2017-01-22\",\n    \"2017-01-23\",\n    \"2017-01-24\",\n    \"2017-01-25\",\n    \"2017-01-26\",\n    \"2017-01-27\",\n    \"2017-01-28\",\n    \"2017-01-29\",\n    \"2017-01-30\",\n    \"2017-01-31\",\n    \"2017-02-01\",\n    \"2017-02-02\",\n    \"2017-02-03\",\n    \"2017-02-04\",\n    \"2017-02-05\",\n    \"2017-02-06\",\n    \"2017-02-07\",\n    \"2017-02-08\",\n    \"2017-02-09\",\n    \"2017-02-10\",\n    \"2017-02-11\",\n    \"2017-02-12\",\n    \"2017-02-13\",\n    \"2017-02-14\",\n    \"2017-02-15\",\n    \"2017-02-16\",\n    \"2017-02-17\",\n    \"2017-02-18\",\n    \"2017-02-19\",\n    \"2017-02-20\",\n    \"2017-02-21\",\n    \"2017-02-22\",\n    \"2017-02-23\",\n    \"2017-02-24\",\n    \"2017-02-25\",\n    \"2017-02-26\",\n    \"2017-02-27\",\n    \"2017-02-28\",\n    \"2017-02-29\",\n    \"2017-02-30\",\n    \"2017-02-31\",\n  ],\n  close: [\n    116.019997, 116.610001, 117.910004, 118.989998, 119.110001, 119.75, 119.25,\n    119.040001, 120, 119.989998, 119.779999, 120, 120.080002, 119.970001,\n    121.879997, 121.940002, 121.949997, 121.629997, 121.349998, 128.75,\n    128.529999, 129.080002, 130.289993, 131.529999, 132.039993, 132.419998,\n    132.119995, 133.289993, 135.020004, 135.509995, 119.040001, 120, 119.989998,\n    119.779999, 120, 120.080002, 119.970001, 116.019997, 116.610001, 117.910004,\n    118.989998, 119.110001, 119.75, 119.25, 119.040001, 120, 119.989998,\n    119.779999, 120, 120.080002, 119.970001, 121.879997, 121.940002, 121.949997,\n    121.629997, 121.349998, 128.75, 128.529999, 129.080002, 130.289993,\n    131.529999, 132.039993, 132.419998, 132.119995, 133.289993, 135.020004,\n    135.509995, 119.040001, 120, 119.989998, 119.779999, 120, 120.080002,\n    119.970001,\n  ],\n  decreasing: { line: { color: \"black\" } },\n  high: [\n    116.510002, 116.860001, 118.160004, 119.43, 119.379997, 119.93, 119.300003,\n    119.620003, 120.239998, 120.5, 120.089996, 120.449997, 120.809998,\n    120.099998, 122.099998, 122.440002, 122.349998, 121.629997, 130.389999,\n    130.490005, 129.389999, 129.190002, 130.5, 132.089996, 132.220001,\n    132.449997, 132.940002, 133.820007, 135.089996, 136.270004, 119.620003,\n    120.239998, 120.5, 120.089996, 120.449997, 120.809998, 116.510002,\n    116.860001, 118.160004, 119.43, 119.379997, 119.93, 119.300003, 119.620003,\n    120.239998, 120.5, 120.089996, 120.449997, 120.809998, 120.099998,\n    122.099998, 122.440002, 122.349998, 121.629997, 130.389999, 130.490005,\n    129.389999, 129.190002, 130.5, 132.089996, 132.220001, 132.449997,\n    132.940002, 133.820007, 135.089996, 136.270004, 119.620003, 120.239998,\n    120.5, 120.089996, 120.449997, 120.809998,\n  ],\n  increasing: { line: { color: \"black\" } },\n  line: { color: \"rgba(31,119,180,1)\" },\n  low: [\n    115.75, 115.809998, 116.470001, 117.940002, 118.300003, 118.599998,\n    118.209999, 118.809998, 118.220001, 119.709999, 119.370003, 119.730003,\n    119.769997, 119.5, 120.279999, 121.599998, 121.599998, 120.660004,\n    120.620003, 127.010002, 127.779999, 128.160004, 128.899994, 130.449997,\n    131.220001, 131.119995, 132.050003, 132.75, 133.25, 134.619995, 118.209999,\n    118.809998, 118.220001, 119.709999, 119.370003, 119.730003, 115.75,\n    115.809998, 116.470001, 117.940002, 118.300003, 118.599998, 118.209999,\n    118.809998, 118.220001, 119.709999, 119.370003, 119.730003, 119.769997,\n    119.5, 120.279999, 121.599998, 121.599998, 120.660004, 120.620003,\n    127.010002, 127.779999, 128.160004, 128.899994, 130.449997, 131.220001,\n    131.119995, 132.050003, 132.75, 133.25, 134.619995, 118.209999, 118.809998,\n    118.220001, 119.709999, 119.370003, 119.730003,\n  ],\n  open: [\n    115.849998, 115.919998, 116.779999, 117.949997, 118.769997, 118.739998,\n    118.900002, 119.110001, 118.339996, 120, 119.400002, 120.449997, 120,\n    119.550003, 120.419998, 121.669998, 122.139999, 120.93, 121.150002,\n    127.029999, 127.980003, 128.309998, 129.130005, 130.539993, 131.350006,\n    131.649994, 132.460007, 133.080002, 133.470001, 135.520004, 118.900002,\n    119.110001, 118.339996, 120, 119.400002, 120.449997, 120, 115.849998,\n    115.919998, 116.779999, 117.949997, 118.769997, 118.739998, 118.900002,\n    119.110001, 118.339996, 120, 119.400002, 120.449997, 120, 119.550003,\n    120.419998, 121.669998, 122.139999, 120.93, 121.150002, 127.029999,\n    127.980003, 128.309998, 129.130005, 130.539993, 131.350006, 131.649994,\n    132.460007, 133.080002, 133.470001, 135.520004, 118.900002, 119.110001,\n    118.339996, 120, 119.400002, 120.449997, 120,\n  ],\n  type: \"candlestick\",\n  xaxis: \"x\",\n  yaxis: \"y\",\n};\n\nfunction App() {\n  const [graphType, setGraphType] = useState(\"candlestick\");\n  const [subGraphs, setSubGraphs] = useState([]);\n  const [selectedTemplates, setSelectedTemplates] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const style = { width: \"100%\", height: \"100%\" };\n\n  const [layout] = useState({\n    dragmode: \"zoom\",\n    margin: { t: 0, l: 30, r: 0, b: 25 },\n    showlegend: false,\n    xaxis: {\n      domain: [0, 1],\n      rangeslider: {\n        visible: false,\n      },\n      title: \"Date\",\n      type: \"date\",\n    },\n    yaxis: {\n      domain: [0, 1],\n      autorange: true,\n    },\n    autosize: true,\n    height: 600,\n    // xaxis2: { domain: [0, 1] },\n    // yaxis2: { anchor: \"y2\", domain: [0.18, 0.38], range: [-140, 140] },\n\n    // xaxis3: { domain: [0, 1] },\n    // yaxis3: { anchor: \"y3\", domain: [0, 0.18], range: [115, 140] },\n  });\n\n  const handleGrapthType = (type) => {\n    setGraphType(type);\n  };\n  const addTemplate = (id, template) => {\n    console.log(\"Arr\", template.subGraphs);\n    if (selectedTemplates.indexOf(id) !== -1) {\n      setTemplates([...templates.filter((f) => f.templateType !== id)]);\n      setSubGraphs([...subGraphs.filter((f) => f.templateType !== id)]);\n\n      setSelectedTemplates([...selectedTemplates.filter((f) => f !== id)]);\n    } else {\n      setSelectedTemplates([...selectedTemplates, id]);\n\n      setTemplates([...templates, ...template.graph]);\n      setSubGraphs([...subGraphs, ...template.subGraphs]);\n    }\n  };\n  const templateChange = (tempData) => {\n    console.log(\"template.subGraphs\", tempData);\n    addTemplate(tempData.id, tempData.template);\n  };\n\n  const [selectedStock, setSelectStock] = useState(\"MMM\");\n  const [selectedTime, setSelectTime] = useState(\"1d\");\n\n  const [data, setGraphData] = useState({ ...dummy });\n\n  const handleStockChange = (stock) => {\n    setSelectStock(stock);\n    stock &&\n      getAllStocks(`stocks?stock=${stock?.toLowerCase()}&interval=1h`).then(\n        (res) => {\n          let high = [],\n            low = [],\n            open = [],\n            close = [],\n            x = [];\n          console.log((\"res.data.data\", res.data.data));\n          res?.data?.data?.forEach((m) => {\n            high.push(m.high);\n            low.push(m.low);\n            open.push(m.open);\n            close.push(m.close);\n            x.push(new Date(m.date));\n          });\n          setGraphData({ ...dummy, high, low, open, close, x });\n        }\n      );\n  };\n\n  const hanldeSelectedTime = (time) => {\n    setSelectTime(time);\n    selectedStock &&\n      getAllStocks(\n        `stocks?stock=${selectedStock?.toLowerCase()}&interval=${selectedTime}`\n      ).then((res) => {\n        let high = [],\n          low = [],\n          open = [],\n          close = [],\n          x = [];\n        console.log((\"res.data.data\", res));\n        res?.data?.data?.forEach((m) => {\n          high.push(m.high);\n          low.push(m.low);\n          open.push(m.open);\n          close.push(m.close);\n          x.push(new Date(m.date));\n        });\n        setGraphData({ ...dummy, high, low, open, close, x });\n      });\n  };\n  return (\n    <div>\n      <Header\n        graphType={graphType}\n        handleGrapthType={handleGrapthType}\n        templateChange={templateChange}\n        templatesOptions={templatesOptions}\n        data={data}\n        selectedStock={selectedStock}\n        selectedTime={selectedTime}\n        hanldeSelectedTime={hanldeSelectedTime}\n        handleStockChange={handleStockChange}\n      />\n\n      <div id=\"fullscreen\">\n        <Graph\n          style={style}\n          data={{ ...data, type: graphType }}\n          layout={layout}\n          templates={templates}\n        />\n        {subGraphs.map((m) => (\n          <Graph\n            key={m}\n            style={{ width: \"100%\" }}\n            data={{ ...m }}\n            layout={{ ...layout, autosize: true, height: 150 }}\n            templates={m.mergedGraphs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}